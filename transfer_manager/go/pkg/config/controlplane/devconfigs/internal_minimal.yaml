type: internal_cloud

environment:
  type: internal

# === Not about secrets
# You may store various secrets used in config in YAV
# To use such secrets you need to set yav token.
# Get it here https://oauth.yandex-team.ru/authorize?response_type=token&client_id=ce68fbebc76c4ffda974049083729982
yav_token:
  type: empty

# === Control plane postgresql DB connection settings
# Control plane uses postgresql to store transfers, endpoints, etc
# You may use any PG DB (including localhost/docker/etc), you need just empty schema
# Control plane creates all needed tables and other entities on start
# With default settings you should pass DB password via CP_DB_PASSWORD environment variable
db_discovery:
  type: mdb # this is the example for using MDB cluster
  cluster_id: mdbd894fa7kkpk84vft3 # replace the cluster ID with your own
# To specify host/port connection use the following lines as an example:
#  type: on_premise
#  host: localhost
#  port: 5432
#  use_tls: false
db_user: user1
db_password:
  type: environment_variable
  variable_name: CP_DB_PASSWORD
db_name: db1
db_schema: dev # Specify empty postgres schema, all tables are created automatically

# === Where to run dataplane processes
# The settings are extremely useful for local debug
# Works only if the binary is build with -DDATA_TRANSFER_ALL_IN_ONE_BINARY flag
sync_tasks: true # if enabled, all tasks including activation/deactivation run inside the controlplane process using local runtime
local_replication: true # if enabled, replication is run inside the controlplane process using local runtime
dataplane_version:
  type: arcadia_source_revision

# Y.Cloud integration
# Get YC token here # Get YC token here https://oauth.yandex-team.ru/authorize?response_type=token&client_id=8cdb2f6a0dca48398c6880312ee2f78d
cloud_creds:
  type: passport_oauth_token
  token:
    type: environment_variable
    variable_name: YC_TOKEN
s3_endpoint: https://s3.mds.yandex.net
s3_region: ru-central1
# The same as above, but used specifically for MDB requests
mdb_token:
  type: environment_variable
  variable_name: YC_TOKEN
skip_auth: false # You may disable auth for all incoming API requests, but you probably don't need it
mdb_api_url_base: https://gw.db.yandex-team.ru/
iam_api_url_base: https://gw.db.yandex-team.ru:443/iam/v1/
cloud_api_endpoint: gw.db.yandex-team.ru:443
iam_access_service_endpoint: as.cloud.yandex-team.ru:4286
console_hostname: yc-test.yandex-team.ru
root_cert_paths:
  - /usr/local/share/ca-certificates/YandexInternalRootCA.crt
dataplane_token:
  type: environment_variable
  variable_name: YC_TOKEN

# allow to run background data planes
disable_dataplane: false
# === Various network ports
# This port is used for private API and thus is used by dataplane instances and frontend farms.
# You may find it useful to send requests to this port via grpcurl
grpc_port: 8787
rest_port: 8088 # Use this port to access Swagger UI. It's http without ssl
public_grpc_port: 9797
exported_metrics_http_port: 9092
# TLS services is usually useless in dev and thus are disabled in this config
tls_server_private_certificate:
  type: empty
grpc_ssl_port: 8443
public_grpc_ssl_port: 9443

# === Logs-related settings
log:
  type: stdout
logbroker_token: # You need this token if you are willing to send anything (logs/metering/search items/etc) to LB topics.
  type: empty
profiler: # Enable to send profiling samples to LB topic (useless for local environment)
  type: disabled
# YDB is used to store dataplane logs to later show it in UI
# But you need to set up a transfer to deliver logs from LB topic to YDB
ydb_token:
  type: empty
ydb_logs_instance: ydb-ru-prestable.yandex.net:2135
ydb_logs_database: /ru-prestable/home/tserakhau/mydb
ydb_dataplane_log_dir: /ru-prestable/home/tserakhau/mydb/log/dataplane

# === Monitoring metrics settings
push_metrics: false # Enable to send metrics to solomon. Be sure to specify correct project/cluster/token
solomon_token:
  type: empty
solomon_cluster: rtc-local
solomon_url: https://solomon.yandex-team.ru
solomon_project: data-transfer

# Various services
health_providers: # Provide info about transfer health
  - type: fake
metrics_provider:
  type: fake
events: # Send cloud events to LB topic
  type: disabled
search: # Send updates to search LB topic
  type: disabled
notifications_api: ''

# Touch this section if you decide to run dataplane in YT (to be documented later)
yt_token:
  type: empty
yt_proxy: vanga
yt_operation_pool: transfer_manager
udf_dir: /usr/local/bin/udfs
data_plane_config_variable_name: DATA_PLANE_CONFIG_RESOURCE
data_plane_config_variable_value: internal_testing.yaml
task_monitor_lock_path: //home/transfer-manager/task_monitor/internal_prod_dev
# For app built in single binary mode upload job binary each time even if arc revision hasn't changed
disable_job_bin_cache: false

# Logfeller integration (не надо вскрывать эту тему)
logfeller_yt_token:
  type: empty
logfeller_nirvactor_token:
  type: empty
logfeller_logbroker_token:
  type: empty
logfeller_lf_describer_logbroker_token:
  type: empty

# Not used actually
dataplane_image_k8s_image: ''
