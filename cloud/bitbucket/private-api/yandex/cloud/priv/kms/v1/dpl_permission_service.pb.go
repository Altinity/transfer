// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.21.3
// source: yandex/cloud/priv/kms/v1/dpl_permission_service.proto

package kms

import (
	_ "github.com/doublecloud/tross/cloud/bitbucket/private-api/yandex/cloud/priv"
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CanSymmetricEncryptRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KeyId            string `protobuf:"bytes,1,opt,name=key_id,json=keyId,proto3" json:"key_id,omitempty"`
	ServiceAccountId string `protobuf:"bytes,2,opt,name=service_account_id,json=serviceAccountId,proto3" json:"service_account_id,omitempty"`
}

func (x *CanSymmetricEncryptRequest) Reset() {
	*x = CanSymmetricEncryptRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_priv_kms_v1_dpl_permission_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CanSymmetricEncryptRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CanSymmetricEncryptRequest) ProtoMessage() {}

func (x *CanSymmetricEncryptRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_priv_kms_v1_dpl_permission_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CanSymmetricEncryptRequest.ProtoReflect.Descriptor instead.
func (*CanSymmetricEncryptRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_priv_kms_v1_dpl_permission_service_proto_rawDescGZIP(), []int{0}
}

func (x *CanSymmetricEncryptRequest) GetKeyId() string {
	if x != nil {
		return x.KeyId
	}
	return ""
}

func (x *CanSymmetricEncryptRequest) GetServiceAccountId() string {
	if x != nil {
		return x.ServiceAccountId
	}
	return ""
}

type CanSymmetricEncryptResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KeyId     string `protobuf:"bytes,1,opt,name=key_id,json=keyId,proto3" json:"key_id,omitempty"`
	SubjectId string `protobuf:"bytes,2,opt,name=subject_id,json=subjectId,proto3" json:"subject_id,omitempty"`
}

func (x *CanSymmetricEncryptResponse) Reset() {
	*x = CanSymmetricEncryptResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_priv_kms_v1_dpl_permission_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CanSymmetricEncryptResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CanSymmetricEncryptResponse) ProtoMessage() {}

func (x *CanSymmetricEncryptResponse) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_priv_kms_v1_dpl_permission_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CanSymmetricEncryptResponse.ProtoReflect.Descriptor instead.
func (*CanSymmetricEncryptResponse) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_priv_kms_v1_dpl_permission_service_proto_rawDescGZIP(), []int{1}
}

func (x *CanSymmetricEncryptResponse) GetKeyId() string {
	if x != nil {
		return x.KeyId
	}
	return ""
}

func (x *CanSymmetricEncryptResponse) GetSubjectId() string {
	if x != nil {
		return x.SubjectId
	}
	return ""
}

type CanSymmetricDecryptRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KeyId            string `protobuf:"bytes,1,opt,name=key_id,json=keyId,proto3" json:"key_id,omitempty"`
	ServiceAccountId string `protobuf:"bytes,2,opt,name=service_account_id,json=serviceAccountId,proto3" json:"service_account_id,omitempty"`
}

func (x *CanSymmetricDecryptRequest) Reset() {
	*x = CanSymmetricDecryptRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_priv_kms_v1_dpl_permission_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CanSymmetricDecryptRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CanSymmetricDecryptRequest) ProtoMessage() {}

func (x *CanSymmetricDecryptRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_priv_kms_v1_dpl_permission_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CanSymmetricDecryptRequest.ProtoReflect.Descriptor instead.
func (*CanSymmetricDecryptRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_priv_kms_v1_dpl_permission_service_proto_rawDescGZIP(), []int{2}
}

func (x *CanSymmetricDecryptRequest) GetKeyId() string {
	if x != nil {
		return x.KeyId
	}
	return ""
}

func (x *CanSymmetricDecryptRequest) GetServiceAccountId() string {
	if x != nil {
		return x.ServiceAccountId
	}
	return ""
}

type CanSymmetricDecryptResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KeyId     string `protobuf:"bytes,1,opt,name=key_id,json=keyId,proto3" json:"key_id,omitempty"`
	SubjectId string `protobuf:"bytes,2,opt,name=subject_id,json=subjectId,proto3" json:"subject_id,omitempty"`
}

func (x *CanSymmetricDecryptResponse) Reset() {
	*x = CanSymmetricDecryptResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_priv_kms_v1_dpl_permission_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CanSymmetricDecryptResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CanSymmetricDecryptResponse) ProtoMessage() {}

func (x *CanSymmetricDecryptResponse) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_priv_kms_v1_dpl_permission_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CanSymmetricDecryptResponse.ProtoReflect.Descriptor instead.
func (*CanSymmetricDecryptResponse) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_priv_kms_v1_dpl_permission_service_proto_rawDescGZIP(), []int{3}
}

func (x *CanSymmetricDecryptResponse) GetKeyId() string {
	if x != nil {
		return x.KeyId
	}
	return ""
}

func (x *CanSymmetricDecryptResponse) GetSubjectId() string {
	if x != nil {
		return x.SubjectId
	}
	return ""
}

var File_yandex_cloud_priv_kms_v1_dpl_permission_service_proto protoreflect.FileDescriptor

var file_yandex_cloud_priv_kms_v1_dpl_permission_service_proto_rawDesc = []byte{
	0x0a, 0x35, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x70,
	0x72, 0x69, 0x76, 0x2f, 0x6b, 0x6d, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x70, 0x6c, 0x5f, 0x70,
	0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x18, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x2e, 0x6b, 0x6d, 0x73, 0x2e, 0x76,
	0x31, 0x1a, 0x22, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f,
	0x70, 0x72, 0x69, 0x76, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x6f, 0x0a, 0x1a, 0x43, 0x61, 0x6e, 0x53, 0x79, 0x6d, 0x6d,
	0x65, 0x74, 0x72, 0x69, 0x63, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x06, 0x6b, 0x65, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x0c, 0xa8, 0x89, 0x31, 0x01, 0xca, 0x89, 0x31, 0x04, 0x3c, 0x3d, 0x35,
	0x30, 0x52, 0x05, 0x6b, 0x65, 0x79, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x12, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x53, 0x0a, 0x1b, 0x43, 0x61, 0x6e, 0x53, 0x79, 0x6d,
	0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x6b, 0x65, 0x79, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6b, 0x65, 0x79, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a,
	0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x22, 0x6f, 0x0a, 0x1a, 0x43,
	0x61, 0x6e, 0x53, 0x79, 0x6d, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x44, 0x65, 0x63, 0x72, 0x79,
	0x70, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x06, 0x6b, 0x65, 0x79,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0c, 0xa8, 0x89, 0x31, 0x01, 0xca,
	0x89, 0x31, 0x04, 0x3c, 0x3d, 0x35, 0x30, 0x52, 0x05, 0x6b, 0x65, 0x79, 0x49, 0x64, 0x12, 0x2c,
	0x0a, 0x12, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x53, 0x0a, 0x1b,
	0x43, 0x61, 0x6e, 0x53, 0x79, 0x6d, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x44, 0x65, 0x63, 0x72,
	0x79, 0x70, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x6b,
	0x65, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6b, 0x65, 0x79,
	0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49,
	0x64, 0x32, 0xa0, 0x02, 0x0a, 0x14, 0x44, 0x70, 0x6c, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x82, 0x01, 0x0a, 0x13, 0x43,
	0x61, 0x6e, 0x53, 0x79, 0x6d, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x45, 0x6e, 0x63, 0x72, 0x79,
	0x70, 0x74, 0x12, 0x34, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x2e, 0x6b, 0x6d, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x61,
	0x6e, 0x53, 0x79, 0x6d, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x35, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65,
	0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x2e, 0x6b, 0x6d, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x61, 0x6e, 0x53, 0x79, 0x6d, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63,
	0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x82, 0x01, 0x0a, 0x13, 0x43, 0x61, 0x6e, 0x53, 0x79, 0x6d, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63,
	0x44, 0x65, 0x63, 0x72, 0x79, 0x70, 0x74, 0x12, 0x34, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x2e, 0x6b, 0x6d, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x61, 0x6e, 0x53, 0x79, 0x6d, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x44,
	0x65, 0x63, 0x72, 0x79, 0x70, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x35, 0x2e,
	0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x70, 0x72, 0x69,
	0x76, 0x2e, 0x6b, 0x6d, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x61, 0x6e, 0x53, 0x79, 0x6d, 0x6d,
	0x65, 0x74, 0x72, 0x69, 0x63, 0x44, 0x65, 0x63, 0x72, 0x79, 0x70, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x42, 0x51, 0x42, 0x04, 0x50, 0x44, 0x50, 0x53, 0x5a, 0x49, 0x61, 0x2e,
	0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2d, 0x74, 0x65, 0x61, 0x6d, 0x2e, 0x72, 0x75, 0x2f, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x62, 0x69, 0x74, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x2f, 0x70,
	0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x2d, 0x61, 0x70, 0x69, 0x2f, 0x79, 0x61, 0x6e, 0x64, 0x65,
	0x78, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x70, 0x72, 0x69, 0x76, 0x2f, 0x6b, 0x6d, 0x73,
	0x2f, 0x76, 0x31, 0x3b, 0x6b, 0x6d, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_yandex_cloud_priv_kms_v1_dpl_permission_service_proto_rawDescOnce sync.Once
	file_yandex_cloud_priv_kms_v1_dpl_permission_service_proto_rawDescData = file_yandex_cloud_priv_kms_v1_dpl_permission_service_proto_rawDesc
)

func file_yandex_cloud_priv_kms_v1_dpl_permission_service_proto_rawDescGZIP() []byte {
	file_yandex_cloud_priv_kms_v1_dpl_permission_service_proto_rawDescOnce.Do(func() {
		file_yandex_cloud_priv_kms_v1_dpl_permission_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_yandex_cloud_priv_kms_v1_dpl_permission_service_proto_rawDescData)
	})
	return file_yandex_cloud_priv_kms_v1_dpl_permission_service_proto_rawDescData
}

var file_yandex_cloud_priv_kms_v1_dpl_permission_service_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_yandex_cloud_priv_kms_v1_dpl_permission_service_proto_goTypes = []interface{}{
	(*CanSymmetricEncryptRequest)(nil),  // 0: yandex.cloud.priv.kms.v1.CanSymmetricEncryptRequest
	(*CanSymmetricEncryptResponse)(nil), // 1: yandex.cloud.priv.kms.v1.CanSymmetricEncryptResponse
	(*CanSymmetricDecryptRequest)(nil),  // 2: yandex.cloud.priv.kms.v1.CanSymmetricDecryptRequest
	(*CanSymmetricDecryptResponse)(nil), // 3: yandex.cloud.priv.kms.v1.CanSymmetricDecryptResponse
}
var file_yandex_cloud_priv_kms_v1_dpl_permission_service_proto_depIdxs = []int32{
	0, // 0: yandex.cloud.priv.kms.v1.DplPermissionService.CanSymmetricEncrypt:input_type -> yandex.cloud.priv.kms.v1.CanSymmetricEncryptRequest
	2, // 1: yandex.cloud.priv.kms.v1.DplPermissionService.CanSymmetricDecrypt:input_type -> yandex.cloud.priv.kms.v1.CanSymmetricDecryptRequest
	1, // 2: yandex.cloud.priv.kms.v1.DplPermissionService.CanSymmetricEncrypt:output_type -> yandex.cloud.priv.kms.v1.CanSymmetricEncryptResponse
	3, // 3: yandex.cloud.priv.kms.v1.DplPermissionService.CanSymmetricDecrypt:output_type -> yandex.cloud.priv.kms.v1.CanSymmetricDecryptResponse
	2, // [2:4] is the sub-list for method output_type
	0, // [0:2] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_yandex_cloud_priv_kms_v1_dpl_permission_service_proto_init() }
func file_yandex_cloud_priv_kms_v1_dpl_permission_service_proto_init() {
	if File_yandex_cloud_priv_kms_v1_dpl_permission_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_yandex_cloud_priv_kms_v1_dpl_permission_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CanSymmetricEncryptRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_priv_kms_v1_dpl_permission_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CanSymmetricEncryptResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_priv_kms_v1_dpl_permission_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CanSymmetricDecryptRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_priv_kms_v1_dpl_permission_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CanSymmetricDecryptResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_yandex_cloud_priv_kms_v1_dpl_permission_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_yandex_cloud_priv_kms_v1_dpl_permission_service_proto_goTypes,
		DependencyIndexes: file_yandex_cloud_priv_kms_v1_dpl_permission_service_proto_depIdxs,
		MessageInfos:      file_yandex_cloud_priv_kms_v1_dpl_permission_service_proto_msgTypes,
	}.Build()
	File_yandex_cloud_priv_kms_v1_dpl_permission_service_proto = out.File
	file_yandex_cloud_priv_kms_v1_dpl_permission_service_proto_rawDesc = nil
	file_yandex_cloud_priv_kms_v1_dpl_permission_service_proto_goTypes = nil
	file_yandex_cloud_priv_kms_v1_dpl_permission_service_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// DplPermissionServiceClient is the client API for DplPermissionService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DplPermissionServiceClient interface {
	CanSymmetricEncrypt(ctx context.Context, in *CanSymmetricEncryptRequest, opts ...grpc.CallOption) (*CanSymmetricEncryptResponse, error)
	CanSymmetricDecrypt(ctx context.Context, in *CanSymmetricDecryptRequest, opts ...grpc.CallOption) (*CanSymmetricDecryptResponse, error)
}

type dplPermissionServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewDplPermissionServiceClient(cc grpc.ClientConnInterface) DplPermissionServiceClient {
	return &dplPermissionServiceClient{cc}
}

func (c *dplPermissionServiceClient) CanSymmetricEncrypt(ctx context.Context, in *CanSymmetricEncryptRequest, opts ...grpc.CallOption) (*CanSymmetricEncryptResponse, error) {
	out := new(CanSymmetricEncryptResponse)
	err := c.cc.Invoke(ctx, "/yandex.cloud.priv.kms.v1.DplPermissionService/CanSymmetricEncrypt", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dplPermissionServiceClient) CanSymmetricDecrypt(ctx context.Context, in *CanSymmetricDecryptRequest, opts ...grpc.CallOption) (*CanSymmetricDecryptResponse, error) {
	out := new(CanSymmetricDecryptResponse)
	err := c.cc.Invoke(ctx, "/yandex.cloud.priv.kms.v1.DplPermissionService/CanSymmetricDecrypt", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DplPermissionServiceServer is the server API for DplPermissionService service.
type DplPermissionServiceServer interface {
	CanSymmetricEncrypt(context.Context, *CanSymmetricEncryptRequest) (*CanSymmetricEncryptResponse, error)
	CanSymmetricDecrypt(context.Context, *CanSymmetricDecryptRequest) (*CanSymmetricDecryptResponse, error)
}

// UnimplementedDplPermissionServiceServer can be embedded to have forward compatible implementations.
type UnimplementedDplPermissionServiceServer struct {
}

func (*UnimplementedDplPermissionServiceServer) CanSymmetricEncrypt(context.Context, *CanSymmetricEncryptRequest) (*CanSymmetricEncryptResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CanSymmetricEncrypt not implemented")
}
func (*UnimplementedDplPermissionServiceServer) CanSymmetricDecrypt(context.Context, *CanSymmetricDecryptRequest) (*CanSymmetricDecryptResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CanSymmetricDecrypt not implemented")
}

func RegisterDplPermissionServiceServer(s *grpc.Server, srv DplPermissionServiceServer) {
	s.RegisterService(&_DplPermissionService_serviceDesc, srv)
}

func _DplPermissionService_CanSymmetricEncrypt_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CanSymmetricEncryptRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DplPermissionServiceServer).CanSymmetricEncrypt(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/yandex.cloud.priv.kms.v1.DplPermissionService/CanSymmetricEncrypt",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DplPermissionServiceServer).CanSymmetricEncrypt(ctx, req.(*CanSymmetricEncryptRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DplPermissionService_CanSymmetricDecrypt_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CanSymmetricDecryptRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DplPermissionServiceServer).CanSymmetricDecrypt(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/yandex.cloud.priv.kms.v1.DplPermissionService/CanSymmetricDecrypt",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DplPermissionServiceServer).CanSymmetricDecrypt(ctx, req.(*CanSymmetricDecryptRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _DplPermissionService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "yandex.cloud.priv.kms.v1.DplPermissionService",
	HandlerType: (*DplPermissionServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CanSymmetricEncrypt",
			Handler:    _DplPermissionService_CanSymmetricEncrypt_Handler,
		},
		{
			MethodName: "CanSymmetricDecrypt",
			Handler:    _DplPermissionService_CanSymmetricDecrypt_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "yandex/cloud/priv/kms/v1/dpl_permission_service.proto",
}
