// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.21.3
// source: yandex/cloud/priv/oauth/v1/claim_service.proto

package oauth

import (
	_ "github.com/doublecloud/tross/cloud/bitbucket/private-api/yandex/cloud/priv"
	oauth "github.com/doublecloud/tross/cloud/bitbucket/private-api/yandex/cloud/priv/oauth"
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// enum values correspond to SubjectClaims fields
type GetClaimsRequest_Claim int32

const (
	GetClaimsRequest_CLAIM_UNSPECIFIED          GetClaimsRequest_Claim = 0 // protobuf3 enum should start from 0
	GetClaimsRequest_SUB                        GetClaimsRequest_Claim = 1
	GetClaimsRequest_NAME                       GetClaimsRequest_Claim = 2
	GetClaimsRequest_GIVEN_NAME                 GetClaimsRequest_Claim = 3
	GetClaimsRequest_FAMILY_NAME                GetClaimsRequest_Claim = 4
	GetClaimsRequest_PREFERRED_USERNAME         GetClaimsRequest_Claim = 7
	GetClaimsRequest_PICTURE                    GetClaimsRequest_Claim = 9
	GetClaimsRequest_EMAIL                      GetClaimsRequest_Claim = 11
	GetClaimsRequest_GENDER                     GetClaimsRequest_Claim = 13
	GetClaimsRequest_ZONEINFO                   GetClaimsRequest_Claim = 15
	GetClaimsRequest_LOCALE                     GetClaimsRequest_Claim = 16
	GetClaimsRequest_PHONE_NUMBER               GetClaimsRequest_Claim = 17
	GetClaimsRequest_SUB_TYPE                   GetClaimsRequest_Claim = 99
	GetClaimsRequest_FEDERATION                 GetClaimsRequest_Claim = 100
	GetClaimsRequest_PICTURE_DATA               GetClaimsRequest_Claim = 101
	GetClaimsRequest_GROUPS                     GetClaimsRequest_Claim = 103
	GetClaimsRequest_ORGANIZATION               GetClaimsRequest_Claim = 104
	GetClaimsRequest_YANDEX_CLAIMS_ALL          GetClaimsRequest_Claim = 200
	GetClaimsRequest_YANDEX_CLAIMS_STAFF_LOGIN  GetClaimsRequest_Claim = 201
	GetClaimsRequest_YANDEX_CLAIMS_PASSPORT_UID GetClaimsRequest_Claim = 202
	GetClaimsRequest_YANDEX_CLAIMS_KARMA        GetClaimsRequest_Claim = 207
)

// Enum value maps for GetClaimsRequest_Claim.
var (
	GetClaimsRequest_Claim_name = map[int32]string{
		0:   "CLAIM_UNSPECIFIED",
		1:   "SUB",
		2:   "NAME",
		3:   "GIVEN_NAME",
		4:   "FAMILY_NAME",
		7:   "PREFERRED_USERNAME",
		9:   "PICTURE",
		11:  "EMAIL",
		13:  "GENDER",
		15:  "ZONEINFO",
		16:  "LOCALE",
		17:  "PHONE_NUMBER",
		99:  "SUB_TYPE",
		100: "FEDERATION",
		101: "PICTURE_DATA",
		103: "GROUPS",
		104: "ORGANIZATION",
		200: "YANDEX_CLAIMS_ALL",
		201: "YANDEX_CLAIMS_STAFF_LOGIN",
		202: "YANDEX_CLAIMS_PASSPORT_UID",
		207: "YANDEX_CLAIMS_KARMA",
	}
	GetClaimsRequest_Claim_value = map[string]int32{
		"CLAIM_UNSPECIFIED":          0,
		"SUB":                        1,
		"NAME":                       2,
		"GIVEN_NAME":                 3,
		"FAMILY_NAME":                4,
		"PREFERRED_USERNAME":         7,
		"PICTURE":                    9,
		"EMAIL":                      11,
		"GENDER":                     13,
		"ZONEINFO":                   15,
		"LOCALE":                     16,
		"PHONE_NUMBER":               17,
		"SUB_TYPE":                   99,
		"FEDERATION":                 100,
		"PICTURE_DATA":               101,
		"GROUPS":                     103,
		"ORGANIZATION":               104,
		"YANDEX_CLAIMS_ALL":          200,
		"YANDEX_CLAIMS_STAFF_LOGIN":  201,
		"YANDEX_CLAIMS_PASSPORT_UID": 202,
		"YANDEX_CLAIMS_KARMA":        207,
	}
)

func (x GetClaimsRequest_Claim) Enum() *GetClaimsRequest_Claim {
	p := new(GetClaimsRequest_Claim)
	*p = x
	return p
}

func (x GetClaimsRequest_Claim) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GetClaimsRequest_Claim) Descriptor() protoreflect.EnumDescriptor {
	return file_yandex_cloud_priv_oauth_v1_claim_service_proto_enumTypes[0].Descriptor()
}

func (GetClaimsRequest_Claim) Type() protoreflect.EnumType {
	return &file_yandex_cloud_priv_oauth_v1_claim_service_proto_enumTypes[0]
}

func (x GetClaimsRequest_Claim) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GetClaimsRequest_Claim.Descriptor instead.
func (GetClaimsRequest_Claim) EnumDescriptor() ([]byte, []int) {
	return file_yandex_cloud_priv_oauth_v1_claim_service_proto_rawDescGZIP(), []int{0, 0}
}

type GetClaimsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubjectIds []string `protobuf:"bytes,1,rep,name=subject_ids,json=subjectIds,proto3" json:"subject_ids,omitempty"`
	// request only certain claims. Empty list for all claims. Please avoid requesting all claims, each claim authorized separately.
	Claims []GetClaimsRequest_Claim `protobuf:"varint,2,rep,packed,name=claims,proto3,enum=yandex.cloud.priv.oauth.v1.GetClaimsRequest_Claim" json:"claims,omitempty"`
	// This parameter is using to get claims of the specified organization.
	// If this parameter is not specified, organization claims will be returned
	// only if user is a member of local federation.
	OrganizationId string `protobuf:"bytes,3,opt,name=organization_id,json=organizationId,proto3" json:"organization_id,omitempty"`
}

func (x *GetClaimsRequest) Reset() {
	*x = GetClaimsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_priv_oauth_v1_claim_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetClaimsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetClaimsRequest) ProtoMessage() {}

func (x *GetClaimsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_priv_oauth_v1_claim_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetClaimsRequest.ProtoReflect.Descriptor instead.
func (*GetClaimsRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_priv_oauth_v1_claim_service_proto_rawDescGZIP(), []int{0}
}

func (x *GetClaimsRequest) GetSubjectIds() []string {
	if x != nil {
		return x.SubjectIds
	}
	return nil
}

func (x *GetClaimsRequest) GetClaims() []GetClaimsRequest_Claim {
	if x != nil {
		return x.Claims
	}
	return nil
}

func (x *GetClaimsRequest) GetOrganizationId() string {
	if x != nil {
		return x.OrganizationId
	}
	return ""
}

type GetClaimsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubjectDetails []*SubjectDetails `protobuf:"bytes,2,rep,name=subject_details,json=subjectDetails,proto3" json:"subject_details,omitempty"`
}

func (x *GetClaimsResponse) Reset() {
	*x = GetClaimsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_priv_oauth_v1_claim_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetClaimsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetClaimsResponse) ProtoMessage() {}

func (x *GetClaimsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_priv_oauth_v1_claim_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetClaimsResponse.ProtoReflect.Descriptor instead.
func (*GetClaimsResponse) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_priv_oauth_v1_claim_service_proto_rawDescGZIP(), []int{1}
}

func (x *GetClaimsResponse) GetSubjectDetails() []*SubjectDetails {
	if x != nil {
		return x.SubjectDetails
	}
	return nil
}

type SubjectDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubjectClaims *oauth.SubjectClaims `protobuf:"bytes,1,opt,name=subject_claims,json=subjectClaims,proto3" json:"subject_claims,omitempty"`
}

func (x *SubjectDetails) Reset() {
	*x = SubjectDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_priv_oauth_v1_claim_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubjectDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubjectDetails) ProtoMessage() {}

func (x *SubjectDetails) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_priv_oauth_v1_claim_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubjectDetails.ProtoReflect.Descriptor instead.
func (*SubjectDetails) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_priv_oauth_v1_claim_service_proto_rawDescGZIP(), []int{2}
}

func (x *SubjectDetails) GetSubjectClaims() *oauth.SubjectClaims {
	if x != nil {
		return x.SubjectClaims
	}
	return nil
}

var File_yandex_cloud_priv_oauth_v1_claim_service_proto protoreflect.FileDescriptor

var file_yandex_cloud_priv_oauth_v1_claim_service_proto_rawDesc = []byte{
	0x0a, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x70,
	0x72, 0x69, 0x76, 0x2f, 0x6f, 0x61, 0x75, 0x74, 0x68, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6c, 0x61,
	0x69, 0x6d, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x1a, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x70,
	0x72, 0x69, 0x76, 0x2e, 0x6f, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x31, 0x1a, 0x22, 0x79, 0x61,
	0x6e, 0x64, 0x65, 0x78, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x70, 0x72, 0x69, 0x76, 0x2f,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x24, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x70,
	0x72, 0x69, 0x76, 0x2f, 0x6f, 0x61, 0x75, 0x74, 0x68, 0x2f, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xce, 0x04, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x43, 0x6c,
	0x61, 0x69, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x33, 0x0a, 0x0b, 0x73,
	0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09,
	0x42, 0x12, 0xc2, 0x89, 0x31, 0x06, 0x31, 0x2d, 0x31, 0x30, 0x30, 0x30, 0xca, 0x89, 0x31, 0x04,
	0x3c, 0x3d, 0x35, 0x30, 0x52, 0x0a, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x73,
	0x12, 0x54, 0x0a, 0x06, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0e,
	0x32, 0x32, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x70, 0x72, 0x69, 0x76, 0x2e, 0x6f, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x43,
	0x6c, 0x61, 0x69, 0x6d, 0x42, 0x08, 0xc2, 0x89, 0x31, 0x04, 0x3c, 0x3d, 0x32, 0x32, 0x52, 0x06,
	0x63, 0x6c, 0x61, 0x69, 0x6d, 0x73, 0x12, 0x31, 0x0a, 0x0f, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x08, 0xca, 0x89, 0x31, 0x04, 0x3c, 0x3d, 0x35, 0x30, 0x52, 0x0e, 0x6f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0xfb, 0x02, 0x0a, 0x05, 0x43, 0x6c,
	0x61, 0x69, 0x6d, 0x12, 0x15, 0x0a, 0x11, 0x43, 0x4c, 0x41, 0x49, 0x4d, 0x5f, 0x55, 0x4e, 0x53,
	0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x53, 0x55,
	0x42, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x41, 0x4d, 0x45, 0x10, 0x02, 0x12, 0x0e, 0x0a,
	0x0a, 0x47, 0x49, 0x56, 0x45, 0x4e, 0x5f, 0x4e, 0x41, 0x4d, 0x45, 0x10, 0x03, 0x12, 0x0f, 0x0a,
	0x0b, 0x46, 0x41, 0x4d, 0x49, 0x4c, 0x59, 0x5f, 0x4e, 0x41, 0x4d, 0x45, 0x10, 0x04, 0x12, 0x16,
	0x0a, 0x12, 0x50, 0x52, 0x45, 0x46, 0x45, 0x52, 0x52, 0x45, 0x44, 0x5f, 0x55, 0x53, 0x45, 0x52,
	0x4e, 0x41, 0x4d, 0x45, 0x10, 0x07, 0x12, 0x0b, 0x0a, 0x07, 0x50, 0x49, 0x43, 0x54, 0x55, 0x52,
	0x45, 0x10, 0x09, 0x12, 0x09, 0x0a, 0x05, 0x45, 0x4d, 0x41, 0x49, 0x4c, 0x10, 0x0b, 0x12, 0x0a,
	0x0a, 0x06, 0x47, 0x45, 0x4e, 0x44, 0x45, 0x52, 0x10, 0x0d, 0x12, 0x0c, 0x0a, 0x08, 0x5a, 0x4f,
	0x4e, 0x45, 0x49, 0x4e, 0x46, 0x4f, 0x10, 0x0f, 0x12, 0x0a, 0x0a, 0x06, 0x4c, 0x4f, 0x43, 0x41,
	0x4c, 0x45, 0x10, 0x10, 0x12, 0x10, 0x0a, 0x0c, 0x50, 0x48, 0x4f, 0x4e, 0x45, 0x5f, 0x4e, 0x55,
	0x4d, 0x42, 0x45, 0x52, 0x10, 0x11, 0x12, 0x0c, 0x0a, 0x08, 0x53, 0x55, 0x42, 0x5f, 0x54, 0x59,
	0x50, 0x45, 0x10, 0x63, 0x12, 0x0e, 0x0a, 0x0a, 0x46, 0x45, 0x44, 0x45, 0x52, 0x41, 0x54, 0x49,
	0x4f, 0x4e, 0x10, 0x64, 0x12, 0x10, 0x0a, 0x0c, 0x50, 0x49, 0x43, 0x54, 0x55, 0x52, 0x45, 0x5f,
	0x44, 0x41, 0x54, 0x41, 0x10, 0x65, 0x12, 0x0a, 0x0a, 0x06, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x53,
	0x10, 0x67, 0x12, 0x10, 0x0a, 0x0c, 0x4f, 0x52, 0x47, 0x41, 0x4e, 0x49, 0x5a, 0x41, 0x54, 0x49,
	0x4f, 0x4e, 0x10, 0x68, 0x12, 0x16, 0x0a, 0x11, 0x59, 0x41, 0x4e, 0x44, 0x45, 0x58, 0x5f, 0x43,
	0x4c, 0x41, 0x49, 0x4d, 0x53, 0x5f, 0x41, 0x4c, 0x4c, 0x10, 0xc8, 0x01, 0x12, 0x1e, 0x0a, 0x19,
	0x59, 0x41, 0x4e, 0x44, 0x45, 0x58, 0x5f, 0x43, 0x4c, 0x41, 0x49, 0x4d, 0x53, 0x5f, 0x53, 0x54,
	0x41, 0x46, 0x46, 0x5f, 0x4c, 0x4f, 0x47, 0x49, 0x4e, 0x10, 0xc9, 0x01, 0x12, 0x1f, 0x0a, 0x1a,
	0x59, 0x41, 0x4e, 0x44, 0x45, 0x58, 0x5f, 0x43, 0x4c, 0x41, 0x49, 0x4d, 0x53, 0x5f, 0x50, 0x41,
	0x53, 0x53, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x55, 0x49, 0x44, 0x10, 0xca, 0x01, 0x12, 0x18, 0x0a,
	0x13, 0x59, 0x41, 0x4e, 0x44, 0x45, 0x58, 0x5f, 0x43, 0x4c, 0x41, 0x49, 0x4d, 0x53, 0x5f, 0x4b,
	0x41, 0x52, 0x4d, 0x41, 0x10, 0xcf, 0x01, 0x22, 0x68, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x43, 0x6c,
	0x61, 0x69, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x53, 0x0a, 0x0f,
	0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x2e, 0x6f, 0x61, 0x75, 0x74, 0x68, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x52, 0x0e, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x22, 0x65, 0x0a, 0x0e, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x12, 0x53, 0x0a, 0x0e, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x63,
	0x6c, 0x61, 0x69, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x79, 0x61,
	0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x2e,
	0x6f, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x43, 0x6c, 0x61,
	0x69, 0x6d, 0x73, 0x42, 0x04, 0xa8, 0x89, 0x31, 0x01, 0x52, 0x0d, 0x73, 0x75, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x73, 0x32, 0x72, 0x0a, 0x0c, 0x43, 0x6c, 0x61, 0x69,
	0x6d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x62, 0x0a, 0x03, 0x47, 0x65, 0x74, 0x12,
	0x2c, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x70,
	0x72, 0x69, 0x76, 0x2e, 0x6f, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x43, 0x6c, 0x61, 0x69, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e,
	0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x70, 0x72, 0x69,
	0x76, 0x2e, 0x6f, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6c,
	0x61, 0x69, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x55, 0x42, 0x04,
	0x50, 0x41, 0x43, 0x53, 0x5a, 0x4d, 0x61, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2d, 0x74,
	0x65, 0x61, 0x6d, 0x2e, 0x72, 0x75, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x62, 0x69, 0x74,
	0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x2f, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x2d, 0x61,
	0x70, 0x69, 0x2f, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f,
	0x70, 0x72, 0x69, 0x76, 0x2f, 0x6f, 0x61, 0x75, 0x74, 0x68, 0x2f, 0x76, 0x31, 0x3b, 0x6f, 0x61,
	0x75, 0x74, 0x68, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_yandex_cloud_priv_oauth_v1_claim_service_proto_rawDescOnce sync.Once
	file_yandex_cloud_priv_oauth_v1_claim_service_proto_rawDescData = file_yandex_cloud_priv_oauth_v1_claim_service_proto_rawDesc
)

func file_yandex_cloud_priv_oauth_v1_claim_service_proto_rawDescGZIP() []byte {
	file_yandex_cloud_priv_oauth_v1_claim_service_proto_rawDescOnce.Do(func() {
		file_yandex_cloud_priv_oauth_v1_claim_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_yandex_cloud_priv_oauth_v1_claim_service_proto_rawDescData)
	})
	return file_yandex_cloud_priv_oauth_v1_claim_service_proto_rawDescData
}

var file_yandex_cloud_priv_oauth_v1_claim_service_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_yandex_cloud_priv_oauth_v1_claim_service_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_yandex_cloud_priv_oauth_v1_claim_service_proto_goTypes = []interface{}{
	(GetClaimsRequest_Claim)(0), // 0: yandex.cloud.priv.oauth.v1.GetClaimsRequest.Claim
	(*GetClaimsRequest)(nil),    // 1: yandex.cloud.priv.oauth.v1.GetClaimsRequest
	(*GetClaimsResponse)(nil),   // 2: yandex.cloud.priv.oauth.v1.GetClaimsResponse
	(*SubjectDetails)(nil),      // 3: yandex.cloud.priv.oauth.v1.SubjectDetails
	(*oauth.SubjectClaims)(nil), // 4: yandex.cloud.priv.oauth.SubjectClaims
}
var file_yandex_cloud_priv_oauth_v1_claim_service_proto_depIdxs = []int32{
	0, // 0: yandex.cloud.priv.oauth.v1.GetClaimsRequest.claims:type_name -> yandex.cloud.priv.oauth.v1.GetClaimsRequest.Claim
	3, // 1: yandex.cloud.priv.oauth.v1.GetClaimsResponse.subject_details:type_name -> yandex.cloud.priv.oauth.v1.SubjectDetails
	4, // 2: yandex.cloud.priv.oauth.v1.SubjectDetails.subject_claims:type_name -> yandex.cloud.priv.oauth.SubjectClaims
	1, // 3: yandex.cloud.priv.oauth.v1.ClaimService.Get:input_type -> yandex.cloud.priv.oauth.v1.GetClaimsRequest
	2, // 4: yandex.cloud.priv.oauth.v1.ClaimService.Get:output_type -> yandex.cloud.priv.oauth.v1.GetClaimsResponse
	4, // [4:5] is the sub-list for method output_type
	3, // [3:4] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_yandex_cloud_priv_oauth_v1_claim_service_proto_init() }
func file_yandex_cloud_priv_oauth_v1_claim_service_proto_init() {
	if File_yandex_cloud_priv_oauth_v1_claim_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_yandex_cloud_priv_oauth_v1_claim_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetClaimsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_priv_oauth_v1_claim_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetClaimsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_priv_oauth_v1_claim_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubjectDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_yandex_cloud_priv_oauth_v1_claim_service_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_yandex_cloud_priv_oauth_v1_claim_service_proto_goTypes,
		DependencyIndexes: file_yandex_cloud_priv_oauth_v1_claim_service_proto_depIdxs,
		EnumInfos:         file_yandex_cloud_priv_oauth_v1_claim_service_proto_enumTypes,
		MessageInfos:      file_yandex_cloud_priv_oauth_v1_claim_service_proto_msgTypes,
	}.Build()
	File_yandex_cloud_priv_oauth_v1_claim_service_proto = out.File
	file_yandex_cloud_priv_oauth_v1_claim_service_proto_rawDesc = nil
	file_yandex_cloud_priv_oauth_v1_claim_service_proto_goTypes = nil
	file_yandex_cloud_priv_oauth_v1_claim_service_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ClaimServiceClient is the client API for ClaimService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ClaimServiceClient interface {
	Get(ctx context.Context, in *GetClaimsRequest, opts ...grpc.CallOption) (*GetClaimsResponse, error)
}

type claimServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewClaimServiceClient(cc grpc.ClientConnInterface) ClaimServiceClient {
	return &claimServiceClient{cc}
}

func (c *claimServiceClient) Get(ctx context.Context, in *GetClaimsRequest, opts ...grpc.CallOption) (*GetClaimsResponse, error) {
	out := new(GetClaimsResponse)
	err := c.cc.Invoke(ctx, "/yandex.cloud.priv.oauth.v1.ClaimService/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ClaimServiceServer is the server API for ClaimService service.
type ClaimServiceServer interface {
	Get(context.Context, *GetClaimsRequest) (*GetClaimsResponse, error)
}

// UnimplementedClaimServiceServer can be embedded to have forward compatible implementations.
type UnimplementedClaimServiceServer struct {
}

func (*UnimplementedClaimServiceServer) Get(context.Context, *GetClaimsRequest) (*GetClaimsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Get not implemented")
}

func RegisterClaimServiceServer(s *grpc.Server, srv ClaimServiceServer) {
	s.RegisterService(&_ClaimService_serviceDesc, srv)
}

func _ClaimService_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetClaimsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClaimServiceServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/yandex.cloud.priv.oauth.v1.ClaimService/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClaimServiceServer).Get(ctx, req.(*GetClaimsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ClaimService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "yandex.cloud.priv.oauth.v1.ClaimService",
	HandlerType: (*ClaimServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Get",
			Handler:    _ClaimService_Get_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "yandex/cloud/priv/oauth/v1/claim_service.proto",
}
