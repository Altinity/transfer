// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.21.3
// source: yandex/cloud/priv/iam/v1/oauth_scope_service.proto

package iam

import (
	_ "github.com/doublecloud/tross/cloud/bitbucket/common-api/yandex/cloud/api"
	_ "github.com/doublecloud/tross/cloud/bitbucket/private-api/yandex/cloud/priv"
	operation "github.com/doublecloud/tross/cloud/bitbucket/private-api/yandex/cloud/priv/operation"
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	fieldmaskpb "google.golang.org/protobuf/types/known/fieldmaskpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ListOAuthScopesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageSize  int64  `protobuf:"varint,1,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	PageToken string `protobuf:"bytes,2,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
}

func (x *ListOAuthScopesRequest) Reset() {
	*x = ListOAuthScopesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_priv_iam_v1_oauth_scope_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListOAuthScopesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOAuthScopesRequest) ProtoMessage() {}

func (x *ListOAuthScopesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_priv_iam_v1_oauth_scope_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOAuthScopesRequest.ProtoReflect.Descriptor instead.
func (*ListOAuthScopesRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_priv_iam_v1_oauth_scope_service_proto_rawDescGZIP(), []int{0}
}

func (x *ListOAuthScopesRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListOAuthScopesRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

type ListOAuthScopesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OauthScopes   []*OAuthScopeListView `protobuf:"bytes,1,rep,name=oauth_scopes,json=oauthScopes,proto3" json:"oauth_scopes,omitempty"`
	NextPageToken string                `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
}

func (x *ListOAuthScopesResponse) Reset() {
	*x = ListOAuthScopesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_priv_iam_v1_oauth_scope_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListOAuthScopesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOAuthScopesResponse) ProtoMessage() {}

func (x *ListOAuthScopesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_priv_iam_v1_oauth_scope_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOAuthScopesResponse.ProtoReflect.Descriptor instead.
func (*ListOAuthScopesResponse) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_priv_iam_v1_oauth_scope_service_proto_rawDescGZIP(), []int{1}
}

func (x *ListOAuthScopesResponse) GetOauthScopes() []*OAuthScopeListView {
	if x != nil {
		return x.OauthScopes
	}
	return nil
}

func (x *ListOAuthScopesResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

type GetOAuthScopeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OauthScopeId string `protobuf:"bytes,1,opt,name=oauth_scope_id,json=oauthScopeId,proto3" json:"oauth_scope_id,omitempty"`
}

func (x *GetOAuthScopeRequest) Reset() {
	*x = GetOAuthScopeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_priv_iam_v1_oauth_scope_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOAuthScopeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOAuthScopeRequest) ProtoMessage() {}

func (x *GetOAuthScopeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_priv_iam_v1_oauth_scope_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOAuthScopeRequest.ProtoReflect.Descriptor instead.
func (*GetOAuthScopeRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_priv_iam_v1_oauth_scope_service_proto_rawDescGZIP(), []int{2}
}

func (x *GetOAuthScopeRequest) GetOauthScopeId() string {
	if x != nil {
		return x.OauthScopeId
	}
	return ""
}

type OAuthScopeListView struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	IsSystem bool   `protobuf:"varint,2,opt,name=is_system,json=isSystem,proto3" json:"is_system,omitempty"`
	Service  string `protobuf:"bytes,3,opt,name=service,proto3" json:"service,omitempty"`
}

func (x *OAuthScopeListView) Reset() {
	*x = OAuthScopeListView{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_priv_iam_v1_oauth_scope_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OAuthScopeListView) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OAuthScopeListView) ProtoMessage() {}

func (x *OAuthScopeListView) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_priv_iam_v1_oauth_scope_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OAuthScopeListView.ProtoReflect.Descriptor instead.
func (*OAuthScopeListView) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_priv_iam_v1_oauth_scope_service_proto_rawDescGZIP(), []int{3}
}

func (x *OAuthScopeListView) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *OAuthScopeListView) GetIsSystem() bool {
	if x != nil {
		return x.IsSystem
	}
	return false
}

func (x *OAuthScopeListView) GetService() string {
	if x != nil {
		return x.Service
	}
	return ""
}

type CreateOAuthScopeMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OauthScopeId string `protobuf:"bytes,1,opt,name=oauth_scope_id,json=oauthScopeId,proto3" json:"oauth_scope_id,omitempty"`
}

func (x *CreateOAuthScopeMetadata) Reset() {
	*x = CreateOAuthScopeMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_priv_iam_v1_oauth_scope_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateOAuthScopeMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOAuthScopeMetadata) ProtoMessage() {}

func (x *CreateOAuthScopeMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_priv_iam_v1_oauth_scope_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOAuthScopeMetadata.ProtoReflect.Descriptor instead.
func (*CreateOAuthScopeMetadata) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_priv_iam_v1_oauth_scope_service_proto_rawDescGZIP(), []int{4}
}

func (x *CreateOAuthScopeMetadata) GetOauthScopeId() string {
	if x != nil {
		return x.OauthScopeId
	}
	return ""
}

type UpdateOAuthScopeMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OauthScopeId string `protobuf:"bytes,1,opt,name=oauth_scope_id,json=oauthScopeId,proto3" json:"oauth_scope_id,omitempty"`
}

func (x *UpdateOAuthScopeMetadata) Reset() {
	*x = UpdateOAuthScopeMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_priv_iam_v1_oauth_scope_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateOAuthScopeMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateOAuthScopeMetadata) ProtoMessage() {}

func (x *UpdateOAuthScopeMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_priv_iam_v1_oauth_scope_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateOAuthScopeMetadata.ProtoReflect.Descriptor instead.
func (*UpdateOAuthScopeMetadata) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_priv_iam_v1_oauth_scope_service_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateOAuthScopeMetadata) GetOauthScopeId() string {
	if x != nil {
		return x.OauthScopeId
	}
	return ""
}

type DeleteOAuthScopeMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OauthScopeId string `protobuf:"bytes,1,opt,name=oauth_scope_id,json=oauthScopeId,proto3" json:"oauth_scope_id,omitempty"`
}

func (x *DeleteOAuthScopeMetadata) Reset() {
	*x = DeleteOAuthScopeMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_priv_iam_v1_oauth_scope_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteOAuthScopeMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteOAuthScopeMetadata) ProtoMessage() {}

func (x *DeleteOAuthScopeMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_priv_iam_v1_oauth_scope_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteOAuthScopeMetadata.ProtoReflect.Descriptor instead.
func (*DeleteOAuthScopeMetadata) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_priv_iam_v1_oauth_scope_service_proto_rawDescGZIP(), []int{6}
}

func (x *DeleteOAuthScopeMetadata) GetOauthScopeId() string {
	if x != nil {
		return x.OauthScopeId
	}
	return ""
}

type CreateOAuthScopeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OauthScopeId  string   `protobuf:"bytes,1,opt,name=oauth_scope_id,json=oauthScopeId,proto3" json:"oauth_scope_id,omitempty"`
	IsSystem      bool     `protobuf:"varint,2,opt,name=is_system,json=isSystem,proto3" json:"is_system,omitempty"`
	Service       string   `protobuf:"bytes,3,opt,name=service,proto3" json:"service,omitempty"`
	PermissionIds []string `protobuf:"bytes,4,rep,name=permission_ids,json=permissionIds,proto3" json:"permission_ids,omitempty"`
}

func (x *CreateOAuthScopeRequest) Reset() {
	*x = CreateOAuthScopeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_priv_iam_v1_oauth_scope_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateOAuthScopeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOAuthScopeRequest) ProtoMessage() {}

func (x *CreateOAuthScopeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_priv_iam_v1_oauth_scope_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOAuthScopeRequest.ProtoReflect.Descriptor instead.
func (*CreateOAuthScopeRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_priv_iam_v1_oauth_scope_service_proto_rawDescGZIP(), []int{7}
}

func (x *CreateOAuthScopeRequest) GetOauthScopeId() string {
	if x != nil {
		return x.OauthScopeId
	}
	return ""
}

func (x *CreateOAuthScopeRequest) GetIsSystem() bool {
	if x != nil {
		return x.IsSystem
	}
	return false
}

func (x *CreateOAuthScopeRequest) GetService() string {
	if x != nil {
		return x.Service
	}
	return ""
}

func (x *CreateOAuthScopeRequest) GetPermissionIds() []string {
	if x != nil {
		return x.PermissionIds
	}
	return nil
}

type UpdateOAuthScopeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OauthScopeId  string                 `protobuf:"bytes,1,opt,name=oauth_scope_id,json=oauthScopeId,proto3" json:"oauth_scope_id,omitempty"`
	UpdateMask    *fieldmaskpb.FieldMask `protobuf:"bytes,2,opt,name=update_mask,json=updateMask,proto3" json:"update_mask,omitempty"`
	IsSystem      bool                   `protobuf:"varint,3,opt,name=is_system,json=isSystem,proto3" json:"is_system,omitempty"`
	Service       string                 `protobuf:"bytes,4,opt,name=service,proto3" json:"service,omitempty"`
	PermissionIds []string               `protobuf:"bytes,5,rep,name=permission_ids,json=permissionIds,proto3" json:"permission_ids,omitempty"`
}

func (x *UpdateOAuthScopeRequest) Reset() {
	*x = UpdateOAuthScopeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_priv_iam_v1_oauth_scope_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateOAuthScopeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateOAuthScopeRequest) ProtoMessage() {}

func (x *UpdateOAuthScopeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_priv_iam_v1_oauth_scope_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateOAuthScopeRequest.ProtoReflect.Descriptor instead.
func (*UpdateOAuthScopeRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_priv_iam_v1_oauth_scope_service_proto_rawDescGZIP(), []int{8}
}

func (x *UpdateOAuthScopeRequest) GetOauthScopeId() string {
	if x != nil {
		return x.OauthScopeId
	}
	return ""
}

func (x *UpdateOAuthScopeRequest) GetUpdateMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.UpdateMask
	}
	return nil
}

func (x *UpdateOAuthScopeRequest) GetIsSystem() bool {
	if x != nil {
		return x.IsSystem
	}
	return false
}

func (x *UpdateOAuthScopeRequest) GetService() string {
	if x != nil {
		return x.Service
	}
	return ""
}

func (x *UpdateOAuthScopeRequest) GetPermissionIds() []string {
	if x != nil {
		return x.PermissionIds
	}
	return nil
}

type DeleteOAuthScopeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OauthScopeId string `protobuf:"bytes,1,opt,name=oauth_scope_id,json=oauthScopeId,proto3" json:"oauth_scope_id,omitempty"`
}

func (x *DeleteOAuthScopeRequest) Reset() {
	*x = DeleteOAuthScopeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_priv_iam_v1_oauth_scope_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteOAuthScopeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteOAuthScopeRequest) ProtoMessage() {}

func (x *DeleteOAuthScopeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_priv_iam_v1_oauth_scope_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteOAuthScopeRequest.ProtoReflect.Descriptor instead.
func (*DeleteOAuthScopeRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_priv_iam_v1_oauth_scope_service_proto_rawDescGZIP(), []int{9}
}

func (x *DeleteOAuthScopeRequest) GetOauthScopeId() string {
	if x != nil {
		return x.OauthScopeId
	}
	return ""
}

var File_yandex_cloud_priv_iam_v1_oauth_scope_service_proto protoreflect.FileDescriptor

var file_yandex_cloud_priv_iam_v1_oauth_scope_service_proto_rawDesc = []byte{
	0x0a, 0x32, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x70,
	0x72, 0x69, 0x76, 0x2f, 0x69, 0x61, 0x6d, 0x2f, 0x76, 0x31, 0x2f, 0x6f, 0x61, 0x75, 0x74, 0x68,
	0x5f, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x18, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x1a, 0x20,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x20, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x2a, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2f, 0x70, 0x72, 0x69, 0x76, 0x2f, 0x69, 0x61, 0x6d, 0x2f, 0x76, 0x31, 0x2f, 0x6f, 0x61, 0x75,
	0x74, 0x68, 0x5f, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2b,
	0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x70, 0x72, 0x69,
	0x76, 0x2f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x6f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x22, 0x79, 0x61, 0x6e,
	0x64, 0x65, 0x78, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x70, 0x72, 0x69, 0x76, 0x2f, 0x76,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x6c, 0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x41, 0x75, 0x74, 0x68, 0x53, 0x63, 0x6f, 0x70,
	0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x09, 0x70, 0x61, 0x67,
	0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x0a, 0xba, 0x89,
	0x31, 0x06, 0x30, 0x2d, 0x31, 0x30, 0x30, 0x30, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69,
	0x7a, 0x65, 0x12, 0x29, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xca, 0x89, 0x31, 0x06, 0x3c, 0x3d, 0x32, 0x30,
	0x30, 0x30, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x92, 0x01,
	0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x41, 0x75, 0x74, 0x68, 0x53, 0x63, 0x6f, 0x70, 0x65,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4f, 0x0a, 0x0c, 0x6f, 0x61, 0x75,
	0x74, 0x68, 0x5f, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x2c, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x70,
	0x72, 0x69, 0x76, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x41, 0x75, 0x74, 0x68,
	0x53, 0x63, 0x6f, 0x70, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x69, 0x65, 0x77, 0x52, 0x0b, 0x6f,
	0x61, 0x75, 0x74, 0x68, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x65,
	0x78, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x22, 0x42, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x4f, 0x41, 0x75, 0x74, 0x68, 0x53, 0x63,
	0x6f, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x0e, 0x6f, 0x61,
	0x75, 0x74, 0x68, 0x5f, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x04, 0xa8, 0x89, 0x31, 0x01, 0x52, 0x0c, 0x6f, 0x61, 0x75, 0x74, 0x68, 0x53,
	0x63, 0x6f, 0x70, 0x65, 0x49, 0x64, 0x22, 0x5b, 0x0a, 0x12, 0x4f, 0x41, 0x75, 0x74, 0x68, 0x53,
	0x63, 0x6f, 0x70, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x69, 0x65, 0x77, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09,
	0x69, 0x73, 0x5f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x08, 0x69, 0x73, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x22, 0x40, 0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x41, 0x75,
	0x74, 0x68, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12,
	0x24, 0x0a, 0x0e, 0x6f, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6f, 0x61, 0x75, 0x74, 0x68, 0x53, 0x63,
	0x6f, 0x70, 0x65, 0x49, 0x64, 0x22, 0x40, 0x0a, 0x18, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f,
	0x41, 0x75, 0x74, 0x68, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x12, 0x24, 0x0a, 0x0e, 0x6f, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x73, 0x63, 0x6f, 0x70, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6f, 0x61, 0x75, 0x74, 0x68,
	0x53, 0x63, 0x6f, 0x70, 0x65, 0x49, 0x64, 0x22, 0x40, 0x0a, 0x18, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x4f, 0x41, 0x75, 0x74, 0x68, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x12, 0x24, 0x0a, 0x0e, 0x6f, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x73, 0x63, 0x6f,
	0x70, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6f, 0x61, 0x75,
	0x74, 0x68, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x49, 0x64, 0x22, 0xbf, 0x01, 0x0a, 0x17, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x4f, 0x41, 0x75, 0x74, 0x68, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x0e, 0x6f, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x73,
	0x63, 0x6f, 0x70, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x04, 0xa8,
	0x89, 0x31, 0x01, 0x52, 0x0c, 0x6f, 0x61, 0x75, 0x74, 0x68, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x49,
	0x64, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x12, 0x1e,
	0x0a, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x04, 0xa8, 0x89, 0x31, 0x01, 0x52, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x3b,
	0x0a, 0x0e, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x73,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x42, 0x14, 0xc2, 0x89, 0x31, 0x07, 0x3c, 0x3d, 0x31, 0x30,
	0x30, 0x30, 0x30, 0xca, 0x89, 0x31, 0x05, 0x3c, 0x3d, 0x32, 0x35, 0x35, 0x52, 0x0d, 0x70, 0x65,
	0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x73, 0x22, 0xf6, 0x01, 0x0a, 0x17,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x41, 0x75, 0x74, 0x68, 0x53, 0x63, 0x6f, 0x70, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x0e, 0x6f, 0x61, 0x75, 0x74, 0x68,
	0x5f, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x04, 0xa8, 0x89, 0x31, 0x01, 0x52, 0x0c, 0x6f, 0x61, 0x75, 0x74, 0x68, 0x53, 0x63, 0x6f, 0x70,
	0x65, 0x49, 0x64, 0x12, 0x3b, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x6d, 0x61,
	0x73, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64,
	0x4d, 0x61, 0x73, 0x6b, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x73, 0x6b,
	0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x12, 0x18, 0x0a,
	0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x3b, 0x0a, 0x0e, 0x70, 0x65, 0x72, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x42,
	0x14, 0xc2, 0x89, 0x31, 0x07, 0x3c, 0x3d, 0x31, 0x30, 0x30, 0x30, 0x30, 0xca, 0x89, 0x31, 0x05,
	0x3c, 0x3d, 0x32, 0x35, 0x35, 0x52, 0x0d, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x73, 0x22, 0x45, 0x0a, 0x17, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x41,
	0x75, 0x74, 0x68, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x2a, 0x0a, 0x0e, 0x6f, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x04, 0xa8, 0x89, 0x31, 0x01, 0x52, 0x0c, 0x6f,
	0x61, 0x75, 0x74, 0x68, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x49, 0x64, 0x32, 0x9e, 0x05, 0x0a, 0x11,
	0x4f, 0x41, 0x75, 0x74, 0x68, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x5b, 0x0a, 0x03, 0x47, 0x65, 0x74, 0x12, 0x2e, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65,
	0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x2e, 0x69, 0x61, 0x6d,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x41, 0x75, 0x74, 0x68, 0x53, 0x63, 0x6f, 0x70,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65,
	0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x2e, 0x69, 0x61, 0x6d,
	0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x41, 0x75, 0x74, 0x68, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x12, 0x6b,
	0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x30, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x76,
	0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x41, 0x75, 0x74, 0x68, 0x53, 0x63, 0x6f, 0x70, 0x65,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65,
	0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x2e, 0x69, 0x61, 0x6d,
	0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x41, 0x75, 0x74, 0x68, 0x53, 0x63, 0x6f,
	0x70, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x8f, 0x01, 0x0a, 0x06,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x31, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x41, 0x75, 0x74, 0x68, 0x53, 0x63, 0x6f,
	0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x79, 0x61, 0x6e, 0x64,
	0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x2e, 0x6f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0x2a, 0xb2, 0xd2, 0x2a, 0x26, 0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f,
	0x41, 0x75, 0x74, 0x68, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x12, 0x0a, 0x4f, 0x41, 0x75, 0x74, 0x68, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x12, 0x8f, 0x01,
	0x0a, 0x06, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x31, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65,
	0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x2e, 0x69, 0x61, 0x6d,
	0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x41, 0x75, 0x74, 0x68, 0x53,
	0x63, 0x6f, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x79, 0x61,
	0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x2e,
	0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0x2a, 0xb2, 0xd2, 0x2a, 0x26, 0x0a, 0x18, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x4f, 0x41, 0x75, 0x74, 0x68, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x12, 0x0a, 0x4f, 0x41, 0x75, 0x74, 0x68, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x12,
	0x9a, 0x01, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x31, 0x2e, 0x79, 0x61, 0x6e,
	0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x2e, 0x69,
	0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x41, 0x75, 0x74,
	0x68, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e,
	0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x70, 0x72, 0x69,
	0x76, 0x2e, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x35, 0xb2, 0xd2, 0x2a, 0x31, 0x0a, 0x18, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x4f, 0x41, 0x75, 0x74, 0x68, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x15, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x42, 0x52, 0x42, 0x05,
	0x50, 0x4f, 0x41, 0x53, 0x53, 0x5a, 0x49, 0x61, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2d,
	0x74, 0x65, 0x61, 0x6d, 0x2e, 0x72, 0x75, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x62, 0x69,
	0x74, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x2f, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x2d,
	0x61, 0x70, 0x69, 0x2f, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2f, 0x70, 0x72, 0x69, 0x76, 0x2f, 0x69, 0x61, 0x6d, 0x2f, 0x76, 0x31, 0x3b, 0x69, 0x61, 0x6d,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_yandex_cloud_priv_iam_v1_oauth_scope_service_proto_rawDescOnce sync.Once
	file_yandex_cloud_priv_iam_v1_oauth_scope_service_proto_rawDescData = file_yandex_cloud_priv_iam_v1_oauth_scope_service_proto_rawDesc
)

func file_yandex_cloud_priv_iam_v1_oauth_scope_service_proto_rawDescGZIP() []byte {
	file_yandex_cloud_priv_iam_v1_oauth_scope_service_proto_rawDescOnce.Do(func() {
		file_yandex_cloud_priv_iam_v1_oauth_scope_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_yandex_cloud_priv_iam_v1_oauth_scope_service_proto_rawDescData)
	})
	return file_yandex_cloud_priv_iam_v1_oauth_scope_service_proto_rawDescData
}

var file_yandex_cloud_priv_iam_v1_oauth_scope_service_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_yandex_cloud_priv_iam_v1_oauth_scope_service_proto_goTypes = []interface{}{
	(*ListOAuthScopesRequest)(nil),   // 0: yandex.cloud.priv.iam.v1.ListOAuthScopesRequest
	(*ListOAuthScopesResponse)(nil),  // 1: yandex.cloud.priv.iam.v1.ListOAuthScopesResponse
	(*GetOAuthScopeRequest)(nil),     // 2: yandex.cloud.priv.iam.v1.GetOAuthScopeRequest
	(*OAuthScopeListView)(nil),       // 3: yandex.cloud.priv.iam.v1.OAuthScopeListView
	(*CreateOAuthScopeMetadata)(nil), // 4: yandex.cloud.priv.iam.v1.CreateOAuthScopeMetadata
	(*UpdateOAuthScopeMetadata)(nil), // 5: yandex.cloud.priv.iam.v1.UpdateOAuthScopeMetadata
	(*DeleteOAuthScopeMetadata)(nil), // 6: yandex.cloud.priv.iam.v1.DeleteOAuthScopeMetadata
	(*CreateOAuthScopeRequest)(nil),  // 7: yandex.cloud.priv.iam.v1.CreateOAuthScopeRequest
	(*UpdateOAuthScopeRequest)(nil),  // 8: yandex.cloud.priv.iam.v1.UpdateOAuthScopeRequest
	(*DeleteOAuthScopeRequest)(nil),  // 9: yandex.cloud.priv.iam.v1.DeleteOAuthScopeRequest
	(*fieldmaskpb.FieldMask)(nil),    // 10: google.protobuf.FieldMask
	(*OAuthScope)(nil),               // 11: yandex.cloud.priv.iam.v1.OAuthScope
	(*operation.Operation)(nil),      // 12: yandex.cloud.priv.operation.Operation
}
var file_yandex_cloud_priv_iam_v1_oauth_scope_service_proto_depIdxs = []int32{
	3,  // 0: yandex.cloud.priv.iam.v1.ListOAuthScopesResponse.oauth_scopes:type_name -> yandex.cloud.priv.iam.v1.OAuthScopeListView
	10, // 1: yandex.cloud.priv.iam.v1.UpdateOAuthScopeRequest.update_mask:type_name -> google.protobuf.FieldMask
	2,  // 2: yandex.cloud.priv.iam.v1.OAuthScopeService.Get:input_type -> yandex.cloud.priv.iam.v1.GetOAuthScopeRequest
	0,  // 3: yandex.cloud.priv.iam.v1.OAuthScopeService.List:input_type -> yandex.cloud.priv.iam.v1.ListOAuthScopesRequest
	7,  // 4: yandex.cloud.priv.iam.v1.OAuthScopeService.Create:input_type -> yandex.cloud.priv.iam.v1.CreateOAuthScopeRequest
	8,  // 5: yandex.cloud.priv.iam.v1.OAuthScopeService.Update:input_type -> yandex.cloud.priv.iam.v1.UpdateOAuthScopeRequest
	9,  // 6: yandex.cloud.priv.iam.v1.OAuthScopeService.Delete:input_type -> yandex.cloud.priv.iam.v1.DeleteOAuthScopeRequest
	11, // 7: yandex.cloud.priv.iam.v1.OAuthScopeService.Get:output_type -> yandex.cloud.priv.iam.v1.OAuthScope
	1,  // 8: yandex.cloud.priv.iam.v1.OAuthScopeService.List:output_type -> yandex.cloud.priv.iam.v1.ListOAuthScopesResponse
	12, // 9: yandex.cloud.priv.iam.v1.OAuthScopeService.Create:output_type -> yandex.cloud.priv.operation.Operation
	12, // 10: yandex.cloud.priv.iam.v1.OAuthScopeService.Update:output_type -> yandex.cloud.priv.operation.Operation
	12, // 11: yandex.cloud.priv.iam.v1.OAuthScopeService.Delete:output_type -> yandex.cloud.priv.operation.Operation
	7,  // [7:12] is the sub-list for method output_type
	2,  // [2:7] is the sub-list for method input_type
	2,  // [2:2] is the sub-list for extension type_name
	2,  // [2:2] is the sub-list for extension extendee
	0,  // [0:2] is the sub-list for field type_name
}

func init() { file_yandex_cloud_priv_iam_v1_oauth_scope_service_proto_init() }
func file_yandex_cloud_priv_iam_v1_oauth_scope_service_proto_init() {
	if File_yandex_cloud_priv_iam_v1_oauth_scope_service_proto != nil {
		return
	}
	file_yandex_cloud_priv_iam_v1_oauth_scope_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_yandex_cloud_priv_iam_v1_oauth_scope_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListOAuthScopesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_priv_iam_v1_oauth_scope_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListOAuthScopesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_priv_iam_v1_oauth_scope_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOAuthScopeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_priv_iam_v1_oauth_scope_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OAuthScopeListView); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_priv_iam_v1_oauth_scope_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateOAuthScopeMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_priv_iam_v1_oauth_scope_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateOAuthScopeMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_priv_iam_v1_oauth_scope_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteOAuthScopeMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_priv_iam_v1_oauth_scope_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateOAuthScopeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_priv_iam_v1_oauth_scope_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateOAuthScopeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_priv_iam_v1_oauth_scope_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteOAuthScopeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_yandex_cloud_priv_iam_v1_oauth_scope_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_yandex_cloud_priv_iam_v1_oauth_scope_service_proto_goTypes,
		DependencyIndexes: file_yandex_cloud_priv_iam_v1_oauth_scope_service_proto_depIdxs,
		MessageInfos:      file_yandex_cloud_priv_iam_v1_oauth_scope_service_proto_msgTypes,
	}.Build()
	File_yandex_cloud_priv_iam_v1_oauth_scope_service_proto = out.File
	file_yandex_cloud_priv_iam_v1_oauth_scope_service_proto_rawDesc = nil
	file_yandex_cloud_priv_iam_v1_oauth_scope_service_proto_goTypes = nil
	file_yandex_cloud_priv_iam_v1_oauth_scope_service_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// OAuthScopeServiceClient is the client API for OAuthScopeService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type OAuthScopeServiceClient interface {
	Get(ctx context.Context, in *GetOAuthScopeRequest, opts ...grpc.CallOption) (*OAuthScope, error)
	List(ctx context.Context, in *ListOAuthScopesRequest, opts ...grpc.CallOption) (*ListOAuthScopesResponse, error)
	Create(ctx context.Context, in *CreateOAuthScopeRequest, opts ...grpc.CallOption) (*operation.Operation, error)
	Update(ctx context.Context, in *UpdateOAuthScopeRequest, opts ...grpc.CallOption) (*operation.Operation, error)
	Delete(ctx context.Context, in *DeleteOAuthScopeRequest, opts ...grpc.CallOption) (*operation.Operation, error)
}

type oAuthScopeServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewOAuthScopeServiceClient(cc grpc.ClientConnInterface) OAuthScopeServiceClient {
	return &oAuthScopeServiceClient{cc}
}

func (c *oAuthScopeServiceClient) Get(ctx context.Context, in *GetOAuthScopeRequest, opts ...grpc.CallOption) (*OAuthScope, error) {
	out := new(OAuthScope)
	err := c.cc.Invoke(ctx, "/yandex.cloud.priv.iam.v1.OAuthScopeService/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *oAuthScopeServiceClient) List(ctx context.Context, in *ListOAuthScopesRequest, opts ...grpc.CallOption) (*ListOAuthScopesResponse, error) {
	out := new(ListOAuthScopesResponse)
	err := c.cc.Invoke(ctx, "/yandex.cloud.priv.iam.v1.OAuthScopeService/List", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *oAuthScopeServiceClient) Create(ctx context.Context, in *CreateOAuthScopeRequest, opts ...grpc.CallOption) (*operation.Operation, error) {
	out := new(operation.Operation)
	err := c.cc.Invoke(ctx, "/yandex.cloud.priv.iam.v1.OAuthScopeService/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *oAuthScopeServiceClient) Update(ctx context.Context, in *UpdateOAuthScopeRequest, opts ...grpc.CallOption) (*operation.Operation, error) {
	out := new(operation.Operation)
	err := c.cc.Invoke(ctx, "/yandex.cloud.priv.iam.v1.OAuthScopeService/Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *oAuthScopeServiceClient) Delete(ctx context.Context, in *DeleteOAuthScopeRequest, opts ...grpc.CallOption) (*operation.Operation, error) {
	out := new(operation.Operation)
	err := c.cc.Invoke(ctx, "/yandex.cloud.priv.iam.v1.OAuthScopeService/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// OAuthScopeServiceServer is the server API for OAuthScopeService service.
type OAuthScopeServiceServer interface {
	Get(context.Context, *GetOAuthScopeRequest) (*OAuthScope, error)
	List(context.Context, *ListOAuthScopesRequest) (*ListOAuthScopesResponse, error)
	Create(context.Context, *CreateOAuthScopeRequest) (*operation.Operation, error)
	Update(context.Context, *UpdateOAuthScopeRequest) (*operation.Operation, error)
	Delete(context.Context, *DeleteOAuthScopeRequest) (*operation.Operation, error)
}

// UnimplementedOAuthScopeServiceServer can be embedded to have forward compatible implementations.
type UnimplementedOAuthScopeServiceServer struct {
}

func (*UnimplementedOAuthScopeServiceServer) Get(context.Context, *GetOAuthScopeRequest) (*OAuthScope, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Get not implemented")
}
func (*UnimplementedOAuthScopeServiceServer) List(context.Context, *ListOAuthScopesRequest) (*ListOAuthScopesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method List not implemented")
}
func (*UnimplementedOAuthScopeServiceServer) Create(context.Context, *CreateOAuthScopeRequest) (*operation.Operation, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}
func (*UnimplementedOAuthScopeServiceServer) Update(context.Context, *UpdateOAuthScopeRequest) (*operation.Operation, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Update not implemented")
}
func (*UnimplementedOAuthScopeServiceServer) Delete(context.Context, *DeleteOAuthScopeRequest) (*operation.Operation, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Delete not implemented")
}

func RegisterOAuthScopeServiceServer(s *grpc.Server, srv OAuthScopeServiceServer) {
	s.RegisterService(&_OAuthScopeService_serviceDesc, srv)
}

func _OAuthScopeService_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetOAuthScopeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OAuthScopeServiceServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/yandex.cloud.priv.iam.v1.OAuthScopeService/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OAuthScopeServiceServer).Get(ctx, req.(*GetOAuthScopeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OAuthScopeService_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListOAuthScopesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OAuthScopeServiceServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/yandex.cloud.priv.iam.v1.OAuthScopeService/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OAuthScopeServiceServer).List(ctx, req.(*ListOAuthScopesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OAuthScopeService_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateOAuthScopeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OAuthScopeServiceServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/yandex.cloud.priv.iam.v1.OAuthScopeService/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OAuthScopeServiceServer).Create(ctx, req.(*CreateOAuthScopeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OAuthScopeService_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateOAuthScopeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OAuthScopeServiceServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/yandex.cloud.priv.iam.v1.OAuthScopeService/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OAuthScopeServiceServer).Update(ctx, req.(*UpdateOAuthScopeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OAuthScopeService_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteOAuthScopeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OAuthScopeServiceServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/yandex.cloud.priv.iam.v1.OAuthScopeService/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OAuthScopeServiceServer).Delete(ctx, req.(*DeleteOAuthScopeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _OAuthScopeService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "yandex.cloud.priv.iam.v1.OAuthScopeService",
	HandlerType: (*OAuthScopeServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Get",
			Handler:    _OAuthScopeService_Get_Handler,
		},
		{
			MethodName: "List",
			Handler:    _OAuthScopeService_List_Handler,
		},
		{
			MethodName: "Create",
			Handler:    _OAuthScopeService_Create_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _OAuthScopeService_Update_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _OAuthScopeService_Delete_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "yandex/cloud/priv/iam/v1/oauth_scope_service.proto",
}
