// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.21.3
// source: yandex/cloud/priv/iam/v1/iam_session_token_service.proto

package iam

import (
	_ "github.com/doublecloud/tross/cloud/bitbucket/private-api/yandex/cloud/priv"
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateSessionTokenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubjectId   string `protobuf:"bytes,1,opt,name=subject_id,json=subjectId,proto3" json:"subject_id,omitempty"`
	AccessKeyId string `protobuf:"bytes,2,opt,name=access_key_id,json=accessKeyId,proto3" json:"access_key_id,omitempty"`
	SessionName string `protobuf:"bytes,3,opt,name=session_name,json=sessionName,proto3" json:"session_name,omitempty"`
	Nonce       []byte `protobuf:"bytes,4,opt,name=nonce,proto3" json:"nonce,omitempty"`
	// The policy associated with the provided credentials. Only returned if session_token was sent.
	//
	// Types that are assignable to Policy:
	//
	//	*CreateSessionTokenRequest_AwsCompatible
	Policy   isCreateSessionTokenRequest_Policy `protobuf_oneof:"policy"`
	Duration *durationpb.Duration               `protobuf:"bytes,6,opt,name=duration,proto3" json:"duration,omitempty"`
}

func (x *CreateSessionTokenRequest) Reset() {
	*x = CreateSessionTokenRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_priv_iam_v1_iam_session_token_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSessionTokenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSessionTokenRequest) ProtoMessage() {}

func (x *CreateSessionTokenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_priv_iam_v1_iam_session_token_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSessionTokenRequest.ProtoReflect.Descriptor instead.
func (*CreateSessionTokenRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_priv_iam_v1_iam_session_token_service_proto_rawDescGZIP(), []int{0}
}

func (x *CreateSessionTokenRequest) GetSubjectId() string {
	if x != nil {
		return x.SubjectId
	}
	return ""
}

func (x *CreateSessionTokenRequest) GetAccessKeyId() string {
	if x != nil {
		return x.AccessKeyId
	}
	return ""
}

func (x *CreateSessionTokenRequest) GetSessionName() string {
	if x != nil {
		return x.SessionName
	}
	return ""
}

func (x *CreateSessionTokenRequest) GetNonce() []byte {
	if x != nil {
		return x.Nonce
	}
	return nil
}

func (m *CreateSessionTokenRequest) GetPolicy() isCreateSessionTokenRequest_Policy {
	if m != nil {
		return m.Policy
	}
	return nil
}

func (x *CreateSessionTokenRequest) GetAwsCompatible() string {
	if x, ok := x.GetPolicy().(*CreateSessionTokenRequest_AwsCompatible); ok {
		return x.AwsCompatible
	}
	return ""
}

func (x *CreateSessionTokenRequest) GetDuration() *durationpb.Duration {
	if x != nil {
		return x.Duration
	}
	return nil
}

type isCreateSessionTokenRequest_Policy interface {
	isCreateSessionTokenRequest_Policy()
}

type CreateSessionTokenRequest_AwsCompatible struct {
	// option (exactly_one) = true;
	// AWS-compatible policy in JSON format that you want to use as an inline session policy.
	AwsCompatible string `protobuf:"bytes,5,opt,name=aws_compatible,json=awsCompatible,proto3,oneof"`
}

func (*CreateSessionTokenRequest_AwsCompatible) isCreateSessionTokenRequest_Policy() {}

type CreateSessionTokenResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionToken string                 `protobuf:"bytes,1,opt,name=session_token,json=sessionToken,proto3" json:"session_token,omitempty"`
	IssuedAt     *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=issued_at,json=issuedAt,proto3" json:"issued_at,omitempty"`
	ExpiresAt    *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"`
}

func (x *CreateSessionTokenResponse) Reset() {
	*x = CreateSessionTokenResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_priv_iam_v1_iam_session_token_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSessionTokenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSessionTokenResponse) ProtoMessage() {}

func (x *CreateSessionTokenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_priv_iam_v1_iam_session_token_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSessionTokenResponse.ProtoReflect.Descriptor instead.
func (*CreateSessionTokenResponse) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_priv_iam_v1_iam_session_token_service_proto_rawDescGZIP(), []int{1}
}

func (x *CreateSessionTokenResponse) GetSessionToken() string {
	if x != nil {
		return x.SessionToken
	}
	return ""
}

func (x *CreateSessionTokenResponse) GetIssuedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.IssuedAt
	}
	return nil
}

func (x *CreateSessionTokenResponse) GetExpiresAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpiresAt
	}
	return nil
}

var File_yandex_cloud_priv_iam_v1_iam_session_token_service_proto protoreflect.FileDescriptor

var file_yandex_cloud_priv_iam_v1_iam_session_token_service_proto_rawDesc = []byte{
	0x0a, 0x38, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x70,
	0x72, 0x69, 0x76, 0x2f, 0x69, 0x61, 0x6d, 0x2f, 0x76, 0x31, 0x2f, 0x69, 0x61, 0x6d, 0x5f, 0x73,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x18, 0x79, 0x61, 0x6e, 0x64,
	0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x2e, 0x69, 0x61,
	0x6d, 0x2e, 0x76, 0x31, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x22, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2f, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x2f, 0x70, 0x72, 0x69, 0x76, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x21, 0x79, 0x61, 0x6e, 0x64, 0x65,
	0x78, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x70, 0x72, 0x69, 0x76, 0x2f, 0x73, 0x65, 0x6e,
	0x73, 0x69, 0x74, 0x69, 0x76, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xd6, 0x02, 0x0a,
	0x19, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2b, 0x0a, 0x0a, 0x73, 0x75,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0c,
	0xa8, 0x89, 0x31, 0x01, 0xca, 0x89, 0x31, 0x04, 0x31, 0x2d, 0x35, 0x30, 0x52, 0x09, 0x73, 0x75,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x30, 0x0a, 0x0d, 0x61, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0c,
	0xa8, 0x89, 0x31, 0x01, 0xca, 0x89, 0x31, 0x04, 0x31, 0x2d, 0x35, 0x30, 0x52, 0x0b, 0x61, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x49, 0x64, 0x12, 0x2f, 0x0a, 0x0c, 0x73, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x0c, 0xa8, 0x89, 0x31, 0x01, 0xca, 0x89, 0x31, 0x04, 0x31, 0x2d, 0x36, 0x34, 0x52, 0x0b, 0x73,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x05, 0x6e, 0x6f,
	0x6e, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x42, 0x0c, 0xa8, 0x89, 0x31, 0x01, 0xca,
	0x89, 0x31, 0x04, 0x31, 0x2d, 0x33, 0x32, 0x52, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x12, 0x33,
	0x0a, 0x0e, 0x61, 0x77, 0x73, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x74, 0x69, 0x62, 0x6c, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xca, 0x89, 0x31, 0x06, 0x3c, 0x3d, 0x32, 0x30,
	0x34, 0x38, 0x48, 0x00, 0x52, 0x0d, 0x61, 0x77, 0x73, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x74, 0x69,
	0x62, 0x6c, 0x65, 0x12, 0x46, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x42, 0x0f, 0xa8, 0x89, 0x31, 0x01, 0xba, 0x89, 0x31, 0x07, 0x31, 0x35, 0x6d, 0x2d, 0x31, 0x32,
	0x68, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x08, 0x0a, 0x06, 0x70,
	0x6f, 0x6c, 0x69, 0x63, 0x79, 0x22, 0xbf, 0x01, 0x0a, 0x1a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a, 0x0d, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xc8, 0x8f, 0x31,
	0x01, 0xd0, 0x8f, 0x31, 0x0a, 0x52, 0x0c, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x12, 0x37, 0x0a, 0x09, 0x69, 0x73, 0x73, 0x75, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x08, 0x69, 0x73, 0x73, 0x75, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a,
	0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x65, 0x78,
	0x70, 0x69, 0x72, 0x65, 0x73, 0x41, 0x74, 0x32, 0x8d, 0x01, 0x0a, 0x16, 0x49, 0x61, 0x6d, 0x53,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x73, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x33, 0x2e, 0x79,
	0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x70, 0x72, 0x69, 0x76,
	0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x34, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x70, 0x72, 0x69, 0x76, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x52, 0x42, 0x05, 0x50, 0x49, 0x53, 0x54, 0x53,
	0x5a, 0x49, 0x61, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2d, 0x74, 0x65, 0x61, 0x6d, 0x2e,
	0x72, 0x75, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x62, 0x69, 0x74, 0x62, 0x75, 0x63, 0x6b,
	0x65, 0x74, 0x2f, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x2d, 0x61, 0x70, 0x69, 0x2f, 0x79,
	0x61, 0x6e, 0x64, 0x65, 0x78, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x70, 0x72, 0x69, 0x76,
	0x2f, 0x69, 0x61, 0x6d, 0x2f, 0x76, 0x31, 0x3b, 0x69, 0x61, 0x6d, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_yandex_cloud_priv_iam_v1_iam_session_token_service_proto_rawDescOnce sync.Once
	file_yandex_cloud_priv_iam_v1_iam_session_token_service_proto_rawDescData = file_yandex_cloud_priv_iam_v1_iam_session_token_service_proto_rawDesc
)

func file_yandex_cloud_priv_iam_v1_iam_session_token_service_proto_rawDescGZIP() []byte {
	file_yandex_cloud_priv_iam_v1_iam_session_token_service_proto_rawDescOnce.Do(func() {
		file_yandex_cloud_priv_iam_v1_iam_session_token_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_yandex_cloud_priv_iam_v1_iam_session_token_service_proto_rawDescData)
	})
	return file_yandex_cloud_priv_iam_v1_iam_session_token_service_proto_rawDescData
}

var file_yandex_cloud_priv_iam_v1_iam_session_token_service_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_yandex_cloud_priv_iam_v1_iam_session_token_service_proto_goTypes = []interface{}{
	(*CreateSessionTokenRequest)(nil),  // 0: yandex.cloud.priv.iam.v1.CreateSessionTokenRequest
	(*CreateSessionTokenResponse)(nil), // 1: yandex.cloud.priv.iam.v1.CreateSessionTokenResponse
	(*durationpb.Duration)(nil),        // 2: google.protobuf.Duration
	(*timestamppb.Timestamp)(nil),      // 3: google.protobuf.Timestamp
}
var file_yandex_cloud_priv_iam_v1_iam_session_token_service_proto_depIdxs = []int32{
	2, // 0: yandex.cloud.priv.iam.v1.CreateSessionTokenRequest.duration:type_name -> google.protobuf.Duration
	3, // 1: yandex.cloud.priv.iam.v1.CreateSessionTokenResponse.issued_at:type_name -> google.protobuf.Timestamp
	3, // 2: yandex.cloud.priv.iam.v1.CreateSessionTokenResponse.expires_at:type_name -> google.protobuf.Timestamp
	0, // 3: yandex.cloud.priv.iam.v1.IamSessionTokenService.Create:input_type -> yandex.cloud.priv.iam.v1.CreateSessionTokenRequest
	1, // 4: yandex.cloud.priv.iam.v1.IamSessionTokenService.Create:output_type -> yandex.cloud.priv.iam.v1.CreateSessionTokenResponse
	4, // [4:5] is the sub-list for method output_type
	3, // [3:4] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_yandex_cloud_priv_iam_v1_iam_session_token_service_proto_init() }
func file_yandex_cloud_priv_iam_v1_iam_session_token_service_proto_init() {
	if File_yandex_cloud_priv_iam_v1_iam_session_token_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_yandex_cloud_priv_iam_v1_iam_session_token_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateSessionTokenRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_priv_iam_v1_iam_session_token_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateSessionTokenResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_yandex_cloud_priv_iam_v1_iam_session_token_service_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*CreateSessionTokenRequest_AwsCompatible)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_yandex_cloud_priv_iam_v1_iam_session_token_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_yandex_cloud_priv_iam_v1_iam_session_token_service_proto_goTypes,
		DependencyIndexes: file_yandex_cloud_priv_iam_v1_iam_session_token_service_proto_depIdxs,
		MessageInfos:      file_yandex_cloud_priv_iam_v1_iam_session_token_service_proto_msgTypes,
	}.Build()
	File_yandex_cloud_priv_iam_v1_iam_session_token_service_proto = out.File
	file_yandex_cloud_priv_iam_v1_iam_session_token_service_proto_rawDesc = nil
	file_yandex_cloud_priv_iam_v1_iam_session_token_service_proto_goTypes = nil
	file_yandex_cloud_priv_iam_v1_iam_session_token_service_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// IamSessionTokenServiceClient is the client API for IamSessionTokenService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type IamSessionTokenServiceClient interface {
	// only system IAM SA could be authorized to call this method
	Create(ctx context.Context, in *CreateSessionTokenRequest, opts ...grpc.CallOption) (*CreateSessionTokenResponse, error)
}

type iamSessionTokenServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewIamSessionTokenServiceClient(cc grpc.ClientConnInterface) IamSessionTokenServiceClient {
	return &iamSessionTokenServiceClient{cc}
}

func (c *iamSessionTokenServiceClient) Create(ctx context.Context, in *CreateSessionTokenRequest, opts ...grpc.CallOption) (*CreateSessionTokenResponse, error) {
	out := new(CreateSessionTokenResponse)
	err := c.cc.Invoke(ctx, "/yandex.cloud.priv.iam.v1.IamSessionTokenService/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// IamSessionTokenServiceServer is the server API for IamSessionTokenService service.
type IamSessionTokenServiceServer interface {
	// only system IAM SA could be authorized to call this method
	Create(context.Context, *CreateSessionTokenRequest) (*CreateSessionTokenResponse, error)
}

// UnimplementedIamSessionTokenServiceServer can be embedded to have forward compatible implementations.
type UnimplementedIamSessionTokenServiceServer struct {
}

func (*UnimplementedIamSessionTokenServiceServer) Create(context.Context, *CreateSessionTokenRequest) (*CreateSessionTokenResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}

func RegisterIamSessionTokenServiceServer(s *grpc.Server, srv IamSessionTokenServiceServer) {
	s.RegisterService(&_IamSessionTokenService_serviceDesc, srv)
}

func _IamSessionTokenService_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateSessionTokenRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IamSessionTokenServiceServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/yandex.cloud.priv.iam.v1.IamSessionTokenService/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IamSessionTokenServiceServer).Create(ctx, req.(*CreateSessionTokenRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _IamSessionTokenService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "yandex.cloud.priv.iam.v1.IamSessionTokenService",
	HandlerType: (*IamSessionTokenServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _IamSessionTokenService_Create_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "yandex/cloud/priv/iam/v1/iam_session_token_service.proto",
}
