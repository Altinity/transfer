// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.21.3
// source: yandex/cloud/priv/iam/v1/refresh_token_service.proto

package iam

import (
	_ "github.com/doublecloud/tross/cloud/bitbucket/common-api/yandex/cloud/api"
	_ "github.com/doublecloud/tross/cloud/bitbucket/private-api/yandex/cloud/priv"
	operation "github.com/doublecloud/tross/cloud/bitbucket/private-api/yandex/cloud/priv/operation"
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RefreshToken_ProtectionLevel int32

const (
	RefreshToken_PROTECTION_LEVEL_UNSPECIFIED RefreshToken_ProtectionLevel = 0
	RefreshToken_NO_PROTECTION                RefreshToken_ProtectionLevel = 1
	RefreshToken_INSECURE_KEY_DPOP            RefreshToken_ProtectionLevel = 2
	RefreshToken_SECURE_KEY_DPOP              RefreshToken_ProtectionLevel = 3
)

// Enum value maps for RefreshToken_ProtectionLevel.
var (
	RefreshToken_ProtectionLevel_name = map[int32]string{
		0: "PROTECTION_LEVEL_UNSPECIFIED",
		1: "NO_PROTECTION",
		2: "INSECURE_KEY_DPOP",
		3: "SECURE_KEY_DPOP",
	}
	RefreshToken_ProtectionLevel_value = map[string]int32{
		"PROTECTION_LEVEL_UNSPECIFIED": 0,
		"NO_PROTECTION":                1,
		"INSECURE_KEY_DPOP":            2,
		"SECURE_KEY_DPOP":              3,
	}
)

func (x RefreshToken_ProtectionLevel) Enum() *RefreshToken_ProtectionLevel {
	p := new(RefreshToken_ProtectionLevel)
	*p = x
	return p
}

func (x RefreshToken_ProtectionLevel) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RefreshToken_ProtectionLevel) Descriptor() protoreflect.EnumDescriptor {
	return file_yandex_cloud_priv_iam_v1_refresh_token_service_proto_enumTypes[0].Descriptor()
}

func (RefreshToken_ProtectionLevel) Type() protoreflect.EnumType {
	return &file_yandex_cloud_priv_iam_v1_refresh_token_service_proto_enumTypes[0]
}

func (x RefreshToken_ProtectionLevel) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RefreshToken_ProtectionLevel.Descriptor instead.
func (RefreshToken_ProtectionLevel) EnumDescriptor() ([]byte, []int) {
	return file_yandex_cloud_priv_iam_v1_refresh_token_service_proto_rawDescGZIP(), []int{2, 0}
}

type RevokeRefreshTokenMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubjectId       string   `protobuf:"bytes,1,opt,name=subject_id,json=subjectId,proto3" json:"subject_id,omitempty"`
	RefreshTokenIds []string `protobuf:"bytes,2,rep,name=refresh_token_ids,json=refreshTokenIds,proto3" json:"refresh_token_ids,omitempty"`
}

func (x *RevokeRefreshTokenMetadata) Reset() {
	*x = RevokeRefreshTokenMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_priv_iam_v1_refresh_token_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RevokeRefreshTokenMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RevokeRefreshTokenMetadata) ProtoMessage() {}

func (x *RevokeRefreshTokenMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_priv_iam_v1_refresh_token_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RevokeRefreshTokenMetadata.ProtoReflect.Descriptor instead.
func (*RevokeRefreshTokenMetadata) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_priv_iam_v1_refresh_token_service_proto_rawDescGZIP(), []int{0}
}

func (x *RevokeRefreshTokenMetadata) GetSubjectId() string {
	if x != nil {
		return x.SubjectId
	}
	return ""
}

func (x *RevokeRefreshTokenMetadata) GetRefreshTokenIds() []string {
	if x != nil {
		return x.RefreshTokenIds
	}
	return nil
}

type ListRefreshTokensForSubjectRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubjectId        string `protobuf:"bytes,1,opt,name=subject_id,json=subjectId,proto3" json:"subject_id,omitempty"`
	ClientInstanceId string `protobuf:"bytes,2,opt,name=client_instance_id,json=clientInstanceId,proto3" json:"client_instance_id,omitempty"`
	ClientId         string `protobuf:"bytes,3,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	PageSize         int64  `protobuf:"varint,4,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	PageToken        string `protobuf:"bytes,5,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	// A filter expression that filters refresh tokens listed in the response.
	//
	// The expression must specify:
	// 1. The field name. Currently you can use filtering only on [RefreshToken.client_instance_id], [RefreshToken.client_id] or [RefreshToken.protection_level] fields.
	// 2. The operator. An `=` operator can be used for all fields. An 'IN' operator can be used for [RefreshToken.protection_level].
	// 3. The value. The value must be in double quotes (`"`). Must be 3-63 characters long and match the regular expression `[a-zA-Z][_-a-zA-Z0-9]{1,61}[a-z0-9]`.
	// Example of a filter: `client_instance_id="clientInstanceId" AND protection_level IN ("INSECURE_KEY_DPOP", "SECURE_KEY_DPOP")`.
	Filter string `protobuf:"bytes,6,opt,name=filter,proto3" json:"filter,omitempty"`
}

func (x *ListRefreshTokensForSubjectRequest) Reset() {
	*x = ListRefreshTokensForSubjectRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_priv_iam_v1_refresh_token_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListRefreshTokensForSubjectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRefreshTokensForSubjectRequest) ProtoMessage() {}

func (x *ListRefreshTokensForSubjectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_priv_iam_v1_refresh_token_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRefreshTokensForSubjectRequest.ProtoReflect.Descriptor instead.
func (*ListRefreshTokensForSubjectRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_priv_iam_v1_refresh_token_service_proto_rawDescGZIP(), []int{1}
}

func (x *ListRefreshTokensForSubjectRequest) GetSubjectId() string {
	if x != nil {
		return x.SubjectId
	}
	return ""
}

func (x *ListRefreshTokensForSubjectRequest) GetClientInstanceId() string {
	if x != nil {
		return x.ClientInstanceId
	}
	return ""
}

func (x *ListRefreshTokensForSubjectRequest) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *ListRefreshTokensForSubjectRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListRefreshTokensForSubjectRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

func (x *ListRefreshTokensForSubjectRequest) GetFilter() string {
	if x != nil {
		return x.Filter
	}
	return ""
}

type RefreshToken struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               string                       `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ClientInstanceId string                       `protobuf:"bytes,2,opt,name=client_instance_id,json=clientInstanceId,proto3" json:"client_instance_id,omitempty"`
	ClientId         string                       `protobuf:"bytes,3,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	SubjectId        string                       `protobuf:"bytes,4,opt,name=subject_id,json=subjectId,proto3" json:"subject_id,omitempty"`
	CreatedAt        *timestamppb.Timestamp       `protobuf:"bytes,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	ExpireAt         *timestamppb.Timestamp       `protobuf:"bytes,6,opt,name=expire_at,json=expireAt,proto3" json:"expire_at,omitempty"`
	LastUseAt        *timestamppb.Timestamp       `protobuf:"bytes,7,opt,name=last_use_at,json=lastUseAt,proto3" json:"last_use_at,omitempty"`
	ProtectionLevel  RefreshToken_ProtectionLevel `protobuf:"varint,8,opt,name=protection_level,json=protectionLevel,proto3,enum=yandex.cloud.priv.iam.v1.RefreshToken_ProtectionLevel" json:"protection_level,omitempty"`
}

func (x *RefreshToken) Reset() {
	*x = RefreshToken{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_priv_iam_v1_refresh_token_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RefreshToken) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefreshToken) ProtoMessage() {}

func (x *RefreshToken) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_priv_iam_v1_refresh_token_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefreshToken.ProtoReflect.Descriptor instead.
func (*RefreshToken) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_priv_iam_v1_refresh_token_service_proto_rawDescGZIP(), []int{2}
}

func (x *RefreshToken) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *RefreshToken) GetClientInstanceId() string {
	if x != nil {
		return x.ClientInstanceId
	}
	return ""
}

func (x *RefreshToken) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *RefreshToken) GetSubjectId() string {
	if x != nil {
		return x.SubjectId
	}
	return ""
}

func (x *RefreshToken) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *RefreshToken) GetExpireAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpireAt
	}
	return nil
}

func (x *RefreshToken) GetLastUseAt() *timestamppb.Timestamp {
	if x != nil {
		return x.LastUseAt
	}
	return nil
}

func (x *RefreshToken) GetProtectionLevel() RefreshToken_ProtectionLevel {
	if x != nil {
		return x.ProtectionLevel
	}
	return RefreshToken_PROTECTION_LEVEL_UNSPECIFIED
}

type ListRefreshTokensResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RefreshTokens []*RefreshToken `protobuf:"bytes,1,rep,name=refresh_tokens,json=refreshTokens,proto3" json:"refresh_tokens,omitempty"`
	NextPageToken string          `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
}

func (x *ListRefreshTokensResponse) Reset() {
	*x = ListRefreshTokensResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_priv_iam_v1_refresh_token_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListRefreshTokensResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRefreshTokensResponse) ProtoMessage() {}

func (x *ListRefreshTokensResponse) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_priv_iam_v1_refresh_token_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRefreshTokensResponse.ProtoReflect.Descriptor instead.
func (*ListRefreshTokensResponse) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_priv_iam_v1_refresh_token_service_proto_rawDescGZIP(), []int{3}
}

func (x *ListRefreshTokensResponse) GetRefreshTokens() []*RefreshToken {
	if x != nil {
		return x.RefreshTokens
	}
	return nil
}

func (x *ListRefreshTokensResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

type RevokeRefreshTokenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Filter:
	//
	//	*RevokeRefreshTokenRequest_RefreshTokenId
	//	*RevokeRefreshTokenRequest_RefreshToken
	//	*RevokeRefreshTokenRequest_RevokeFilter
	Filter isRevokeRefreshTokenRequest_Filter `protobuf_oneof:"filter"`
}

func (x *RevokeRefreshTokenRequest) Reset() {
	*x = RevokeRefreshTokenRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_priv_iam_v1_refresh_token_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RevokeRefreshTokenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RevokeRefreshTokenRequest) ProtoMessage() {}

func (x *RevokeRefreshTokenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_priv_iam_v1_refresh_token_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RevokeRefreshTokenRequest.ProtoReflect.Descriptor instead.
func (*RevokeRefreshTokenRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_priv_iam_v1_refresh_token_service_proto_rawDescGZIP(), []int{4}
}

func (m *RevokeRefreshTokenRequest) GetFilter() isRevokeRefreshTokenRequest_Filter {
	if m != nil {
		return m.Filter
	}
	return nil
}

func (x *RevokeRefreshTokenRequest) GetRefreshTokenId() string {
	if x, ok := x.GetFilter().(*RevokeRefreshTokenRequest_RefreshTokenId); ok {
		return x.RefreshTokenId
	}
	return ""
}

func (x *RevokeRefreshTokenRequest) GetRefreshToken() string {
	if x, ok := x.GetFilter().(*RevokeRefreshTokenRequest_RefreshToken); ok {
		return x.RefreshToken
	}
	return ""
}

func (x *RevokeRefreshTokenRequest) GetRevokeFilter() *RevokeFilter {
	if x, ok := x.GetFilter().(*RevokeRefreshTokenRequest_RevokeFilter); ok {
		return x.RevokeFilter
	}
	return nil
}

type isRevokeRefreshTokenRequest_Filter interface {
	isRevokeRefreshTokenRequest_Filter()
}

type RevokeRefreshTokenRequest_RefreshTokenId struct {
	RefreshTokenId string `protobuf:"bytes,1,opt,name=refresh_token_id,json=refreshTokenId,proto3,oneof"`
}

type RevokeRefreshTokenRequest_RefreshToken struct {
	RefreshToken string `protobuf:"bytes,2,opt,name=refresh_token,json=refreshToken,proto3,oneof"`
}

type RevokeRefreshTokenRequest_RevokeFilter struct {
	RevokeFilter *RevokeFilter `protobuf:"bytes,3,opt,name=revoke_filter,json=revokeFilter,proto3,oneof"`
}

func (*RevokeRefreshTokenRequest_RefreshTokenId) isRevokeRefreshTokenRequest_Filter() {}

func (*RevokeRefreshTokenRequest_RefreshToken) isRevokeRefreshTokenRequest_Filter() {}

func (*RevokeRefreshTokenRequest_RevokeFilter) isRevokeRefreshTokenRequest_Filter() {}

type RevokeFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientId         string `protobuf:"bytes,2,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	SubjectId        string `protobuf:"bytes,3,opt,name=subject_id,json=subjectId,proto3" json:"subject_id,omitempty"`
	ClientInstanceId string `protobuf:"bytes,4,opt,name=client_instance_id,json=clientInstanceId,proto3" json:"client_instance_id,omitempty"`
}

func (x *RevokeFilter) Reset() {
	*x = RevokeFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_priv_iam_v1_refresh_token_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RevokeFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RevokeFilter) ProtoMessage() {}

func (x *RevokeFilter) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_priv_iam_v1_refresh_token_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RevokeFilter.ProtoReflect.Descriptor instead.
func (*RevokeFilter) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_priv_iam_v1_refresh_token_service_proto_rawDescGZIP(), []int{5}
}

func (x *RevokeFilter) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *RevokeFilter) GetSubjectId() string {
	if x != nil {
		return x.SubjectId
	}
	return ""
}

func (x *RevokeFilter) GetClientInstanceId() string {
	if x != nil {
		return x.ClientInstanceId
	}
	return ""
}

type RevokeRefreshTokenResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RefreshTokenIds []string `protobuf:"bytes,1,rep,name=refresh_token_ids,json=refreshTokenIds,proto3" json:"refresh_token_ids,omitempty"`
}

func (x *RevokeRefreshTokenResponse) Reset() {
	*x = RevokeRefreshTokenResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_priv_iam_v1_refresh_token_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RevokeRefreshTokenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RevokeRefreshTokenResponse) ProtoMessage() {}

func (x *RevokeRefreshTokenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_priv_iam_v1_refresh_token_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RevokeRefreshTokenResponse.ProtoReflect.Descriptor instead.
func (*RevokeRefreshTokenResponse) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_priv_iam_v1_refresh_token_service_proto_rawDescGZIP(), []int{6}
}

func (x *RevokeRefreshTokenResponse) GetRefreshTokenIds() []string {
	if x != nil {
		return x.RefreshTokenIds
	}
	return nil
}

var File_yandex_cloud_priv_iam_v1_refresh_token_service_proto protoreflect.FileDescriptor

var file_yandex_cloud_priv_iam_v1_refresh_token_service_proto_rawDesc = []byte{
	0x0a, 0x34, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x70,
	0x72, 0x69, 0x76, 0x2f, 0x69, 0x61, 0x6d, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x65, 0x66, 0x72, 0x65,
	0x73, 0x68, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x18, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x76, 0x31,
	0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x20, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x2b, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2f, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2f, 0x70, 0x72, 0x69, 0x76, 0x2f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x22, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x70,
	0x72, 0x69, 0x76, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x21, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2f, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2f, 0x70, 0x72, 0x69, 0x76, 0x2f, 0x73, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x76,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x67, 0x0a, 0x1a, 0x52, 0x65, 0x76, 0x6f, 0x6b,
	0x65, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x75, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x5f,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x0f, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x64, 0x73,
	0x22, 0xa6, 0x02, 0x0a, 0x22, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x46, 0x6f, 0x72, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x0a, 0x73, 0x75, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xca, 0x89, 0x31,
	0x04, 0x3c, 0x3d, 0x35, 0x30, 0x52, 0x09, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64,
	0x12, 0x38, 0x0a, 0x12, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xca, 0x89,
	0x31, 0x06, 0x3c, 0x3d, 0x31, 0x30, 0x30, 0x30, 0x52, 0x10, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x09, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xca,
	0x89, 0x31, 0x04, 0x3c, 0x3d, 0x35, 0x30, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49,
	0x64, 0x12, 0x27, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x03, 0x42, 0x0a, 0xba, 0x89, 0x31, 0x06, 0x30, 0x2d, 0x31, 0x30, 0x30, 0x30,
	0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x29, 0x0a, 0x0a, 0x70, 0x61,
	0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a,
	0xca, 0x89, 0x31, 0x06, 0x3c, 0x3d, 0x32, 0x30, 0x30, 0x30, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x22, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xca, 0x89, 0x31, 0x06, 0x3c, 0x3d, 0x31, 0x30, 0x30,
	0x30, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x22, 0x8f, 0x04, 0x0a, 0x0c, 0x52, 0x65,
	0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2c, 0x0a, 0x12, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x75, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x49, 0x64, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x37, 0x0a, 0x09, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x08,
	0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x41, 0x74, 0x12, 0x3a, 0x0a, 0x0b, 0x6c, 0x61, 0x73, 0x74,
	0x5f, 0x75, 0x73, 0x65, 0x5f, 0x61, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x55,
	0x73, 0x65, 0x41, 0x74, 0x12, 0x61, 0x0a, 0x10, 0x70, 0x72, 0x6f, 0x74, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x36,
	0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x70, 0x72,
	0x69, 0x76, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73,
	0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x0f, 0x70, 0x72, 0x6f, 0x74, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x22, 0x72, 0x0a, 0x0f, 0x50, 0x72, 0x6f, 0x74, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x20, 0x0a, 0x1c, 0x50, 0x52,
	0x4f, 0x54, 0x45, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4c, 0x45, 0x56, 0x45, 0x4c, 0x5f, 0x55,
	0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d,
	0x4e, 0x4f, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x45, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x01, 0x12,
	0x15, 0x0a, 0x11, 0x49, 0x4e, 0x53, 0x45, 0x43, 0x55, 0x52, 0x45, 0x5f, 0x4b, 0x45, 0x59, 0x5f,
	0x44, 0x50, 0x4f, 0x50, 0x10, 0x02, 0x12, 0x13, 0x0a, 0x0f, 0x53, 0x45, 0x43, 0x55, 0x52, 0x45,
	0x5f, 0x4b, 0x45, 0x59, 0x5f, 0x44, 0x50, 0x4f, 0x50, 0x10, 0x03, 0x22, 0x92, 0x01, 0x0a, 0x19,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4d, 0x0a, 0x0e, 0x72, 0x65, 0x66,
	0x72, 0x65, 0x73, 0x68, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x26, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x70, 0x72, 0x69, 0x76, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x66,
	0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x0d, 0x72, 0x65, 0x66, 0x72, 0x65,
	0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x65, 0x78, 0x74,
	0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x22, 0xeb, 0x01, 0x0a, 0x19, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x52, 0x65, 0x66, 0x72, 0x65,
	0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x34,
	0x0a, 0x10, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xca, 0x89, 0x31, 0x04, 0x3c, 0x3d,
	0x35, 0x30, 0x48, 0x00, 0x52, 0x0e, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x49, 0x64, 0x12, 0x39, 0x0a, 0x0d, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x5f,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x12, 0xca, 0x89, 0x31,
	0x06, 0x3c, 0x3d, 0x31, 0x30, 0x30, 0x30, 0xc8, 0x8f, 0x31, 0x01, 0xd0, 0x8f, 0x31, 0x06, 0x48,
	0x00, 0x52, 0x0c, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12,
	0x4d, 0x0a, 0x0d, 0x72, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x76,
	0x31, 0x2e, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x48, 0x00,
	0x52, 0x0c, 0x72, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x42, 0x0e,
	0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x04, 0x80, 0x83, 0x31, 0x01, 0x22, 0x98,
	0x01, 0x0a, 0x0c, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12,
	0x25, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x08, 0xca, 0x89, 0x31, 0x04, 0x3c, 0x3d, 0x35, 0x30, 0x52, 0x08, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0a, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xca, 0x89, 0x31, 0x04,
	0x3c, 0x3d, 0x35, 0x30, 0x52, 0x09, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12,
	0x38, 0x0a, 0x12, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xca, 0x89, 0x31,
	0x06, 0x3c, 0x3d, 0x31, 0x30, 0x30, 0x30, 0x52, 0x10, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x22, 0x48, 0x0a, 0x1a, 0x52, 0x65, 0x76,
	0x6f, 0x6b, 0x65, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x72, 0x65, 0x66, 0x72, 0x65,
	0x73, 0x68, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x0f, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x49, 0x64, 0x73, 0x32, 0xb6, 0x02, 0x0a, 0x13, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x79, 0x0a, 0x04, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x3c, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73,
	0x46, 0x6f, 0x72, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x33, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x70, 0x72, 0x69, 0x76, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0xa3, 0x01, 0x0a, 0x06, 0x52, 0x65, 0x76, 0x6f, 0x6b,
	0x65, 0x12, 0x33, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x70, 0x72, 0x69, 0x76, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x76,
	0x6f, 0x6b, 0x65, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x2e, 0x6f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x3c,
	0xb2, 0xd2, 0x2a, 0x38, 0x0a, 0x1a, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x52, 0x65, 0x66, 0x72,
	0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x12, 0x1a, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x52, 0x42, 0x05,
	0x50, 0x49, 0x52, 0x54, 0x53, 0x5a, 0x49, 0x61, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2d,
	0x74, 0x65, 0x61, 0x6d, 0x2e, 0x72, 0x75, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x62, 0x69,
	0x74, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x2f, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x2d,
	0x61, 0x70, 0x69, 0x2f, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2f, 0x70, 0x72, 0x69, 0x76, 0x2f, 0x69, 0x61, 0x6d, 0x2f, 0x76, 0x31, 0x3b, 0x69, 0x61, 0x6d,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_yandex_cloud_priv_iam_v1_refresh_token_service_proto_rawDescOnce sync.Once
	file_yandex_cloud_priv_iam_v1_refresh_token_service_proto_rawDescData = file_yandex_cloud_priv_iam_v1_refresh_token_service_proto_rawDesc
)

func file_yandex_cloud_priv_iam_v1_refresh_token_service_proto_rawDescGZIP() []byte {
	file_yandex_cloud_priv_iam_v1_refresh_token_service_proto_rawDescOnce.Do(func() {
		file_yandex_cloud_priv_iam_v1_refresh_token_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_yandex_cloud_priv_iam_v1_refresh_token_service_proto_rawDescData)
	})
	return file_yandex_cloud_priv_iam_v1_refresh_token_service_proto_rawDescData
}

var file_yandex_cloud_priv_iam_v1_refresh_token_service_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_yandex_cloud_priv_iam_v1_refresh_token_service_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_yandex_cloud_priv_iam_v1_refresh_token_service_proto_goTypes = []interface{}{
	(RefreshToken_ProtectionLevel)(0),          // 0: yandex.cloud.priv.iam.v1.RefreshToken.ProtectionLevel
	(*RevokeRefreshTokenMetadata)(nil),         // 1: yandex.cloud.priv.iam.v1.RevokeRefreshTokenMetadata
	(*ListRefreshTokensForSubjectRequest)(nil), // 2: yandex.cloud.priv.iam.v1.ListRefreshTokensForSubjectRequest
	(*RefreshToken)(nil),                       // 3: yandex.cloud.priv.iam.v1.RefreshToken
	(*ListRefreshTokensResponse)(nil),          // 4: yandex.cloud.priv.iam.v1.ListRefreshTokensResponse
	(*RevokeRefreshTokenRequest)(nil),          // 5: yandex.cloud.priv.iam.v1.RevokeRefreshTokenRequest
	(*RevokeFilter)(nil),                       // 6: yandex.cloud.priv.iam.v1.RevokeFilter
	(*RevokeRefreshTokenResponse)(nil),         // 7: yandex.cloud.priv.iam.v1.RevokeRefreshTokenResponse
	(*timestamppb.Timestamp)(nil),              // 8: google.protobuf.Timestamp
	(*operation.Operation)(nil),                // 9: yandex.cloud.priv.operation.Operation
}
var file_yandex_cloud_priv_iam_v1_refresh_token_service_proto_depIdxs = []int32{
	8, // 0: yandex.cloud.priv.iam.v1.RefreshToken.created_at:type_name -> google.protobuf.Timestamp
	8, // 1: yandex.cloud.priv.iam.v1.RefreshToken.expire_at:type_name -> google.protobuf.Timestamp
	8, // 2: yandex.cloud.priv.iam.v1.RefreshToken.last_use_at:type_name -> google.protobuf.Timestamp
	0, // 3: yandex.cloud.priv.iam.v1.RefreshToken.protection_level:type_name -> yandex.cloud.priv.iam.v1.RefreshToken.ProtectionLevel
	3, // 4: yandex.cloud.priv.iam.v1.ListRefreshTokensResponse.refresh_tokens:type_name -> yandex.cloud.priv.iam.v1.RefreshToken
	6, // 5: yandex.cloud.priv.iam.v1.RevokeRefreshTokenRequest.revoke_filter:type_name -> yandex.cloud.priv.iam.v1.RevokeFilter
	2, // 6: yandex.cloud.priv.iam.v1.RefreshTokenService.List:input_type -> yandex.cloud.priv.iam.v1.ListRefreshTokensForSubjectRequest
	5, // 7: yandex.cloud.priv.iam.v1.RefreshTokenService.Revoke:input_type -> yandex.cloud.priv.iam.v1.RevokeRefreshTokenRequest
	4, // 8: yandex.cloud.priv.iam.v1.RefreshTokenService.List:output_type -> yandex.cloud.priv.iam.v1.ListRefreshTokensResponse
	9, // 9: yandex.cloud.priv.iam.v1.RefreshTokenService.Revoke:output_type -> yandex.cloud.priv.operation.Operation
	8, // [8:10] is the sub-list for method output_type
	6, // [6:8] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_yandex_cloud_priv_iam_v1_refresh_token_service_proto_init() }
func file_yandex_cloud_priv_iam_v1_refresh_token_service_proto_init() {
	if File_yandex_cloud_priv_iam_v1_refresh_token_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_yandex_cloud_priv_iam_v1_refresh_token_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RevokeRefreshTokenMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_priv_iam_v1_refresh_token_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListRefreshTokensForSubjectRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_priv_iam_v1_refresh_token_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RefreshToken); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_priv_iam_v1_refresh_token_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListRefreshTokensResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_priv_iam_v1_refresh_token_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RevokeRefreshTokenRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_priv_iam_v1_refresh_token_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RevokeFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_priv_iam_v1_refresh_token_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RevokeRefreshTokenResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_yandex_cloud_priv_iam_v1_refresh_token_service_proto_msgTypes[4].OneofWrappers = []interface{}{
		(*RevokeRefreshTokenRequest_RefreshTokenId)(nil),
		(*RevokeRefreshTokenRequest_RefreshToken)(nil),
		(*RevokeRefreshTokenRequest_RevokeFilter)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_yandex_cloud_priv_iam_v1_refresh_token_service_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_yandex_cloud_priv_iam_v1_refresh_token_service_proto_goTypes,
		DependencyIndexes: file_yandex_cloud_priv_iam_v1_refresh_token_service_proto_depIdxs,
		EnumInfos:         file_yandex_cloud_priv_iam_v1_refresh_token_service_proto_enumTypes,
		MessageInfos:      file_yandex_cloud_priv_iam_v1_refresh_token_service_proto_msgTypes,
	}.Build()
	File_yandex_cloud_priv_iam_v1_refresh_token_service_proto = out.File
	file_yandex_cloud_priv_iam_v1_refresh_token_service_proto_rawDesc = nil
	file_yandex_cloud_priv_iam_v1_refresh_token_service_proto_goTypes = nil
	file_yandex_cloud_priv_iam_v1_refresh_token_service_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// RefreshTokenServiceClient is the client API for RefreshTokenService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RefreshTokenServiceClient interface {
	List(ctx context.Context, in *ListRefreshTokensForSubjectRequest, opts ...grpc.CallOption) (*ListRefreshTokensResponse, error)
	Revoke(ctx context.Context, in *RevokeRefreshTokenRequest, opts ...grpc.CallOption) (*operation.Operation, error)
}

type refreshTokenServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewRefreshTokenServiceClient(cc grpc.ClientConnInterface) RefreshTokenServiceClient {
	return &refreshTokenServiceClient{cc}
}

func (c *refreshTokenServiceClient) List(ctx context.Context, in *ListRefreshTokensForSubjectRequest, opts ...grpc.CallOption) (*ListRefreshTokensResponse, error) {
	out := new(ListRefreshTokensResponse)
	err := c.cc.Invoke(ctx, "/yandex.cloud.priv.iam.v1.RefreshTokenService/List", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *refreshTokenServiceClient) Revoke(ctx context.Context, in *RevokeRefreshTokenRequest, opts ...grpc.CallOption) (*operation.Operation, error) {
	out := new(operation.Operation)
	err := c.cc.Invoke(ctx, "/yandex.cloud.priv.iam.v1.RefreshTokenService/Revoke", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RefreshTokenServiceServer is the server API for RefreshTokenService service.
type RefreshTokenServiceServer interface {
	List(context.Context, *ListRefreshTokensForSubjectRequest) (*ListRefreshTokensResponse, error)
	Revoke(context.Context, *RevokeRefreshTokenRequest) (*operation.Operation, error)
}

// UnimplementedRefreshTokenServiceServer can be embedded to have forward compatible implementations.
type UnimplementedRefreshTokenServiceServer struct {
}

func (*UnimplementedRefreshTokenServiceServer) List(context.Context, *ListRefreshTokensForSubjectRequest) (*ListRefreshTokensResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method List not implemented")
}
func (*UnimplementedRefreshTokenServiceServer) Revoke(context.Context, *RevokeRefreshTokenRequest) (*operation.Operation, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Revoke not implemented")
}

func RegisterRefreshTokenServiceServer(s *grpc.Server, srv RefreshTokenServiceServer) {
	s.RegisterService(&_RefreshTokenService_serviceDesc, srv)
}

func _RefreshTokenService_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListRefreshTokensForSubjectRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RefreshTokenServiceServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/yandex.cloud.priv.iam.v1.RefreshTokenService/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RefreshTokenServiceServer).List(ctx, req.(*ListRefreshTokensForSubjectRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RefreshTokenService_Revoke_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RevokeRefreshTokenRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RefreshTokenServiceServer).Revoke(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/yandex.cloud.priv.iam.v1.RefreshTokenService/Revoke",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RefreshTokenServiceServer).Revoke(ctx, req.(*RevokeRefreshTokenRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _RefreshTokenService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "yandex.cloud.priv.iam.v1.RefreshTokenService",
	HandlerType: (*RefreshTokenServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "List",
			Handler:    _RefreshTokenService_List_Handler,
		},
		{
			MethodName: "Revoke",
			Handler:    _RefreshTokenService_Revoke_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "yandex/cloud/priv/iam/v1/refresh_token_service.proto",
}
