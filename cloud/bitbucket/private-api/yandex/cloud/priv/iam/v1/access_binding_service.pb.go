// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.21.3
// source: yandex/cloud/priv/iam/v1/access_binding_service.proto

package iam

import (
	_ "github.com/doublecloud/tross/cloud/bitbucket/common-api/yandex/cloud/api"
	_ "github.com/doublecloud/tross/cloud/bitbucket/common-api/yandex/cloud/api/tools"
	_ "github.com/doublecloud/tross/cloud/bitbucket/private-api/yandex/cloud/priv"
	operation "github.com/doublecloud/tross/cloud/bitbucket/private-api/yandex/cloud/priv/operation"
	v1 "github.com/doublecloud/tross/cloud/bitbucket/private-api/yandex/cloud/priv/servicecontrol/v1"
	context "context"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	errdetails "google.golang.org/genproto/googleapis/rpc/errdetails"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AccessBindingAction int32

const (
	AccessBindingAction_ACCESS_BINDING_ACTION_UNSPECIFIED AccessBindingAction = 0
	AccessBindingAction_ADD                               AccessBindingAction = 1
	AccessBindingAction_REMOVE                            AccessBindingAction = 2
)

// Enum value maps for AccessBindingAction.
var (
	AccessBindingAction_name = map[int32]string{
		0: "ACCESS_BINDING_ACTION_UNSPECIFIED",
		1: "ADD",
		2: "REMOVE",
	}
	AccessBindingAction_value = map[string]int32{
		"ACCESS_BINDING_ACTION_UNSPECIFIED": 0,
		"ADD":                               1,
		"REMOVE":                            2,
	}
)

func (x AccessBindingAction) Enum() *AccessBindingAction {
	p := new(AccessBindingAction)
	*p = x
	return p
}

func (x AccessBindingAction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AccessBindingAction) Descriptor() protoreflect.EnumDescriptor {
	return file_yandex_cloud_priv_iam_v1_access_binding_service_proto_enumTypes[0].Descriptor()
}

func (AccessBindingAction) Type() protoreflect.EnumType {
	return &file_yandex_cloud_priv_iam_v1_access_binding_service_proto_enumTypes[0]
}

func (x AccessBindingAction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AccessBindingAction.Descriptor instead.
func (AccessBindingAction) EnumDescriptor() ([]byte, []int) {
	return file_yandex_cloud_priv_iam_v1_access_binding_service_proto_rawDescGZIP(), []int{0}
}

// * `type = system, id = allUsers`: A special identifier that represents anyone.
//
//   - `type = system, id = allAuthenticatedUsers`: A special identifier that represents anyone
//     who is authenticated.
//
// * `type = userAccount, id = <cloud generated id>`
//
// * `type = federatedUser, id = <cloud generated id>`
//
// * `type = serviceAccount, id = <cloud generated id>`
//
// * `type = group, id = <cloud generated id>`
//
// * `type = invitee, id = <cloud generated id>`
type Subject struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Specifying subject type in Set/UpdateAccessBindings methods is deprecated.
	Type string `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *Subject) Reset() {
	*x = Subject{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_priv_iam_v1_access_binding_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Subject) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Subject) ProtoMessage() {}

func (x *Subject) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_priv_iam_v1_access_binding_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Subject.ProtoReflect.Descriptor instead.
func (*Subject) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_priv_iam_v1_access_binding_service_proto_rawDescGZIP(), []int{0}
}

func (x *Subject) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Subject) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type AccessBinding struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoleId    string   `protobuf:"bytes,1,opt,name=role_id,json=roleId,proto3" json:"role_id,omitempty"`
	Subject   *Subject `protobuf:"bytes,2,opt,name=subject,proto3" json:"subject,omitempty"`
	ManagedBy string   `protobuf:"bytes,3,opt,name=managed_by,json=managedBy,proto3" json:"managed_by,omitempty"`
}

func (x *AccessBinding) Reset() {
	*x = AccessBinding{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_priv_iam_v1_access_binding_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccessBinding) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccessBinding) ProtoMessage() {}

func (x *AccessBinding) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_priv_iam_v1_access_binding_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccessBinding.ProtoReflect.Descriptor instead.
func (*AccessBinding) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_priv_iam_v1_access_binding_service_proto_rawDescGZIP(), []int{1}
}

func (x *AccessBinding) GetRoleId() string {
	if x != nil {
		return x.RoleId
	}
	return ""
}

func (x *AccessBinding) GetSubject() *Subject {
	if x != nil {
		return x.Subject
	}
	return nil
}

func (x *AccessBinding) GetManagedBy() string {
	if x != nil {
		return x.ManagedBy
	}
	return ""
}

type ListAccessBindingsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResourceId   string `protobuf:"bytes,1,opt,name=resource_id,json=resourceId,proto3" json:"resource_id,omitempty"`
	ResourceType string `protobuf:"bytes,2,opt,name=resource_type,json=resourceType,proto3" json:"resource_type,omitempty"`
	// A flag allowing the service to determine that the original action was
	// initiated from services (private API) when [private_call] = true, or from
	// the public API when [private_call] = false. [private_call] = false adds
	// additional restrictions on the execution of the action (ex. the prohibition
	// of manipulating internal roles, internal roles are not returned in a result).
	// When proxying from the public API, this field MUST be mapped to false.
	PrivateCall bool   `protobuf:"varint,3,opt,name=private_call,json=privateCall,proto3" json:"private_call,omitempty"`
	PageSize    int64  `protobuf:"varint,4,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	PageToken   string `protobuf:"bytes,5,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
}

func (x *ListAccessBindingsRequest) Reset() {
	*x = ListAccessBindingsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_priv_iam_v1_access_binding_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAccessBindingsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAccessBindingsRequest) ProtoMessage() {}

func (x *ListAccessBindingsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_priv_iam_v1_access_binding_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAccessBindingsRequest.ProtoReflect.Descriptor instead.
func (*ListAccessBindingsRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_priv_iam_v1_access_binding_service_proto_rawDescGZIP(), []int{2}
}

func (x *ListAccessBindingsRequest) GetResourceId() string {
	if x != nil {
		return x.ResourceId
	}
	return ""
}

func (x *ListAccessBindingsRequest) GetResourceType() string {
	if x != nil {
		return x.ResourceType
	}
	return ""
}

func (x *ListAccessBindingsRequest) GetPrivateCall() bool {
	if x != nil {
		return x.PrivateCall
	}
	return false
}

func (x *ListAccessBindingsRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListAccessBindingsRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

type ListAccessBindingsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessBindings []*AccessBinding `protobuf:"bytes,1,rep,name=access_bindings,json=accessBindings,proto3" json:"access_bindings,omitempty"`
	NextPageToken  string           `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
}

func (x *ListAccessBindingsResponse) Reset() {
	*x = ListAccessBindingsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_priv_iam_v1_access_binding_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAccessBindingsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAccessBindingsResponse) ProtoMessage() {}

func (x *ListAccessBindingsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_priv_iam_v1_access_binding_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAccessBindingsResponse.ProtoReflect.Descriptor instead.
func (*ListAccessBindingsResponse) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_priv_iam_v1_access_binding_service_proto_rawDescGZIP(), []int{3}
}

func (x *ListAccessBindingsResponse) GetAccessBindings() []*AccessBinding {
	if x != nil {
		return x.AccessBindings
	}
	return nil
}

func (x *ListAccessBindingsResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

type SetAccessBindingsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Path to resource, from most to least specific according to resource hierarchy.
	// E.g. [storage.bucket, resource-manager.folder, resource-manager.cloud].
	// If specified, takes precedence over resource_id/resource_type.
	ResourcePath []*v1.Resource `protobuf:"bytes,5,rep,name=resource_path,json=resourcePath,proto3" json:"resource_path,omitempty"`
	// Access bindings to set.
	AccessBindings []*AccessBinding `protobuf:"bytes,4,rep,name=access_bindings,json=accessBindings,proto3" json:"access_bindings,omitempty"`
	// A flag allowing the service to determine that the original action was
	// initiated from services (private API) when [private_call] = true, or from
	// the public API when [private_call] = false. [private_call] = false adds
	// additional restrictions on the execution of the action (ex. the prohibition
	// of manipulating internal roles, throwing NotFoundException on an
	// internal role). When proxying from the public API,
	// this field MUST be mapped to false.
	PrivateCall bool `protobuf:"varint,3,opt,name=private_call,json=privateCall,proto3" json:"private_call,omitempty"`
	// If set, perform operation on behalf of subject with this id.
	OnBehalfOfSubjectId string `protobuf:"bytes,6,opt,name=on_behalf_of_subject_id,json=onBehalfOfSubjectId,proto3" json:"on_behalf_of_subject_id,omitempty"`
	// Legacy resource specifiers. Use resource_path instead.
	//
	// Deprecated: Marked as deprecated in yandex/cloud/priv/iam/v1/access_binding_service.proto.
	ResourceId string `protobuf:"bytes,1,opt,name=resource_id,json=resourceId,proto3" json:"resource_id,omitempty"`
	// Deprecated: Marked as deprecated in yandex/cloud/priv/iam/v1/access_binding_service.proto.
	ResourceType string `protobuf:"bytes,2,opt,name=resource_type,json=resourceType,proto3" json:"resource_type,omitempty"`
}

func (x *SetAccessBindingsRequest) Reset() {
	*x = SetAccessBindingsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_priv_iam_v1_access_binding_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetAccessBindingsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetAccessBindingsRequest) ProtoMessage() {}

func (x *SetAccessBindingsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_priv_iam_v1_access_binding_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetAccessBindingsRequest.ProtoReflect.Descriptor instead.
func (*SetAccessBindingsRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_priv_iam_v1_access_binding_service_proto_rawDescGZIP(), []int{4}
}

func (x *SetAccessBindingsRequest) GetResourcePath() []*v1.Resource {
	if x != nil {
		return x.ResourcePath
	}
	return nil
}

func (x *SetAccessBindingsRequest) GetAccessBindings() []*AccessBinding {
	if x != nil {
		return x.AccessBindings
	}
	return nil
}

func (x *SetAccessBindingsRequest) GetPrivateCall() bool {
	if x != nil {
		return x.PrivateCall
	}
	return false
}

func (x *SetAccessBindingsRequest) GetOnBehalfOfSubjectId() string {
	if x != nil {
		return x.OnBehalfOfSubjectId
	}
	return ""
}

// Deprecated: Marked as deprecated in yandex/cloud/priv/iam/v1/access_binding_service.proto.
func (x *SetAccessBindingsRequest) GetResourceId() string {
	if x != nil {
		return x.ResourceId
	}
	return ""
}

// Deprecated: Marked as deprecated in yandex/cloud/priv/iam/v1/access_binding_service.proto.
func (x *SetAccessBindingsRequest) GetResourceType() string {
	if x != nil {
		return x.ResourceType
	}
	return ""
}

type SetAccessBindingsMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResourceId          string         `protobuf:"bytes,1,opt,name=resource_id,json=resourceId,proto3" json:"resource_id,omitempty"`
	ResourceType        string         `protobuf:"bytes,2,opt,name=resource_type,json=resourceType,proto3" json:"resource_type,omitempty"`
	ResourcePath        []*v1.Resource `protobuf:"bytes,3,rep,name=resource_path,json=resourcePath,proto3" json:"resource_path,omitempty"`
	OnBehalfOfSubjectId string         `protobuf:"bytes,4,opt,name=on_behalf_of_subject_id,json=onBehalfOfSubjectId,proto3" json:"on_behalf_of_subject_id,omitempty"`
}

func (x *SetAccessBindingsMetadata) Reset() {
	*x = SetAccessBindingsMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_priv_iam_v1_access_binding_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetAccessBindingsMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetAccessBindingsMetadata) ProtoMessage() {}

func (x *SetAccessBindingsMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_priv_iam_v1_access_binding_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetAccessBindingsMetadata.ProtoReflect.Descriptor instead.
func (*SetAccessBindingsMetadata) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_priv_iam_v1_access_binding_service_proto_rawDescGZIP(), []int{5}
}

func (x *SetAccessBindingsMetadata) GetResourceId() string {
	if x != nil {
		return x.ResourceId
	}
	return ""
}

func (x *SetAccessBindingsMetadata) GetResourceType() string {
	if x != nil {
		return x.ResourceType
	}
	return ""
}

func (x *SetAccessBindingsMetadata) GetResourcePath() []*v1.Resource {
	if x != nil {
		return x.ResourcePath
	}
	return nil
}

func (x *SetAccessBindingsMetadata) GetOnBehalfOfSubjectId() string {
	if x != nil {
		return x.OnBehalfOfSubjectId
	}
	return ""
}

type UpdateAccessBindingsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Path to resource, from most to least specific according to resource hierarchy
	// E.g. [storage.bucket, resource-manager.folder, resource-manager.cloud].
	// If specified, takes precedence over resource_id/resource_type.
	ResourcePath []*v1.Resource `protobuf:"bytes,5,rep,name=resource_path,json=resourcePath,proto3" json:"resource_path,omitempty"`
	// Access bindings to add/remove.
	AccessBindingDeltas []*AccessBindingDelta `protobuf:"bytes,3,rep,name=access_binding_deltas,json=accessBindingDeltas,proto3" json:"access_binding_deltas,omitempty"`
	// A flag allowing the service to determine that the original action was
	// initiated from services (private API) when [private_call] = true, or from
	// the public API when [private_call] = false. [private_call] = false adds
	// additional restrictions on the execution of the action (ex. the prohibition
	// of manipulating internal roles, throwing NotFoundException on an
	// internal role). When proxying from the public API,
	// this field MUST be mapped to false.
	PrivateCall bool `protobuf:"varint,4,opt,name=private_call,json=privateCall,proto3" json:"private_call,omitempty"`
	// If set, perform operation on behalf of subject with this id.
	OnBehalfOfSubjectId string `protobuf:"bytes,6,opt,name=on_behalf_of_subject_id,json=onBehalfOfSubjectId,proto3" json:"on_behalf_of_subject_id,omitempty"`
	// Legacy resource specifiers. Use resource_path instead.
	//
	// Deprecated: Marked as deprecated in yandex/cloud/priv/iam/v1/access_binding_service.proto.
	ResourceId string `protobuf:"bytes,1,opt,name=resource_id,json=resourceId,proto3" json:"resource_id,omitempty"`
	// Deprecated: Marked as deprecated in yandex/cloud/priv/iam/v1/access_binding_service.proto.
	ResourceType string `protobuf:"bytes,2,opt,name=resource_type,json=resourceType,proto3" json:"resource_type,omitempty"`
}

func (x *UpdateAccessBindingsRequest) Reset() {
	*x = UpdateAccessBindingsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_priv_iam_v1_access_binding_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAccessBindingsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAccessBindingsRequest) ProtoMessage() {}

func (x *UpdateAccessBindingsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_priv_iam_v1_access_binding_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAccessBindingsRequest.ProtoReflect.Descriptor instead.
func (*UpdateAccessBindingsRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_priv_iam_v1_access_binding_service_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateAccessBindingsRequest) GetResourcePath() []*v1.Resource {
	if x != nil {
		return x.ResourcePath
	}
	return nil
}

func (x *UpdateAccessBindingsRequest) GetAccessBindingDeltas() []*AccessBindingDelta {
	if x != nil {
		return x.AccessBindingDeltas
	}
	return nil
}

func (x *UpdateAccessBindingsRequest) GetPrivateCall() bool {
	if x != nil {
		return x.PrivateCall
	}
	return false
}

func (x *UpdateAccessBindingsRequest) GetOnBehalfOfSubjectId() string {
	if x != nil {
		return x.OnBehalfOfSubjectId
	}
	return ""
}

// Deprecated: Marked as deprecated in yandex/cloud/priv/iam/v1/access_binding_service.proto.
func (x *UpdateAccessBindingsRequest) GetResourceId() string {
	if x != nil {
		return x.ResourceId
	}
	return ""
}

// Deprecated: Marked as deprecated in yandex/cloud/priv/iam/v1/access_binding_service.proto.
func (x *UpdateAccessBindingsRequest) GetResourceType() string {
	if x != nil {
		return x.ResourceType
	}
	return ""
}

type UpdateAccessBindingsMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResourceId          string         `protobuf:"bytes,1,opt,name=resource_id,json=resourceId,proto3" json:"resource_id,omitempty"`
	ResourceType        string         `protobuf:"bytes,2,opt,name=resource_type,json=resourceType,proto3" json:"resource_type,omitempty"`
	ResourcePath        []*v1.Resource `protobuf:"bytes,3,rep,name=resource_path,json=resourcePath,proto3" json:"resource_path,omitempty"`
	OnBehalfOfSubjectId string         `protobuf:"bytes,4,opt,name=on_behalf_of_subject_id,json=onBehalfOfSubjectId,proto3" json:"on_behalf_of_subject_id,omitempty"`
}

func (x *UpdateAccessBindingsMetadata) Reset() {
	*x = UpdateAccessBindingsMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_priv_iam_v1_access_binding_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAccessBindingsMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAccessBindingsMetadata) ProtoMessage() {}

func (x *UpdateAccessBindingsMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_priv_iam_v1_access_binding_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAccessBindingsMetadata.ProtoReflect.Descriptor instead.
func (*UpdateAccessBindingsMetadata) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_priv_iam_v1_access_binding_service_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateAccessBindingsMetadata) GetResourceId() string {
	if x != nil {
		return x.ResourceId
	}
	return ""
}

func (x *UpdateAccessBindingsMetadata) GetResourceType() string {
	if x != nil {
		return x.ResourceType
	}
	return ""
}

func (x *UpdateAccessBindingsMetadata) GetResourcePath() []*v1.Resource {
	if x != nil {
		return x.ResourcePath
	}
	return nil
}

func (x *UpdateAccessBindingsMetadata) GetOnBehalfOfSubjectId() string {
	if x != nil {
		return x.OnBehalfOfSubjectId
	}
	return ""
}

type AccessBindingDelta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Action        AccessBindingAction `protobuf:"varint,1,opt,name=action,proto3,enum=yandex.cloud.priv.iam.v1.AccessBindingAction" json:"action,omitempty"`
	AccessBinding *AccessBinding      `protobuf:"bytes,2,opt,name=access_binding,json=accessBinding,proto3" json:"access_binding,omitempty"`
}

func (x *AccessBindingDelta) Reset() {
	*x = AccessBindingDelta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_priv_iam_v1_access_binding_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccessBindingDelta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccessBindingDelta) ProtoMessage() {}

func (x *AccessBindingDelta) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_priv_iam_v1_access_binding_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccessBindingDelta.ProtoReflect.Descriptor instead.
func (*AccessBindingDelta) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_priv_iam_v1_access_binding_service_proto_rawDescGZIP(), []int{8}
}

func (x *AccessBindingDelta) GetAction() AccessBindingAction {
	if x != nil {
		return x.Action
	}
	return AccessBindingAction_ACCESS_BINDING_ACTION_UNSPECIFIED
}

func (x *AccessBindingDelta) GetAccessBinding() *AccessBinding {
	if x != nil {
		return x.AccessBinding
	}
	return nil
}

// Access bindings operation status. Returned as an element of google.rpc.Status.details.
// Returned only when a {set,update}AccessBindings() call is made on behalf of other subject,
// in which case the "code" and "message" values should be returned to that subject as the GRPC result
// of your service's {set,update}AccessBindings() method calls.
type AccessBindingsOperationStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// End-user facing GRPC status code.
	Code int64 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	// End-user facing message.
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// Private message details.
	Internal *errdetails.DebugInfo `protobuf:"bytes,3,opt,name=internal,proto3" json:"internal,omitempty"`
}

func (x *AccessBindingsOperationStatus) Reset() {
	*x = AccessBindingsOperationStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_priv_iam_v1_access_binding_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccessBindingsOperationStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccessBindingsOperationStatus) ProtoMessage() {}

func (x *AccessBindingsOperationStatus) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_priv_iam_v1_access_binding_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccessBindingsOperationStatus.ProtoReflect.Descriptor instead.
func (*AccessBindingsOperationStatus) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_priv_iam_v1_access_binding_service_proto_rawDescGZIP(), []int{9}
}

func (x *AccessBindingsOperationStatus) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *AccessBindingsOperationStatus) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *AccessBindingsOperationStatus) GetInternal() *errdetails.DebugInfo {
	if x != nil {
		return x.Internal
	}
	return nil
}

// Access bindings added or removed during this operation.
type AccessBindingsOperationDelta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessBindingDeltas []*AccessBindingDelta `protobuf:"bytes,1,rep,name=access_binding_deltas,json=accessBindingDeltas,proto3" json:"access_binding_deltas,omitempty"`
}

func (x *AccessBindingsOperationDelta) Reset() {
	*x = AccessBindingsOperationDelta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_priv_iam_v1_access_binding_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccessBindingsOperationDelta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccessBindingsOperationDelta) ProtoMessage() {}

func (x *AccessBindingsOperationDelta) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_priv_iam_v1_access_binding_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccessBindingsOperationDelta.ProtoReflect.Descriptor instead.
func (*AccessBindingsOperationDelta) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_priv_iam_v1_access_binding_service_proto_rawDescGZIP(), []int{10}
}

func (x *AccessBindingsOperationDelta) GetAccessBindingDeltas() []*AccessBindingDelta {
	if x != nil {
		return x.AccessBindingDeltas
	}
	return nil
}

// Deprecated in favor of above message.
type BindingsOperationStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Deprecated: Marked as deprecated in yandex/cloud/priv/iam/v1/access_binding_service.proto.
	Code int64 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	// Deprecated: Marked as deprecated in yandex/cloud/priv/iam/v1/access_binding_service.proto.
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// Deprecated: Marked as deprecated in yandex/cloud/priv/iam/v1/access_binding_service.proto.
	Internal *errdetails.DebugInfo `protobuf:"bytes,3,opt,name=internal,proto3" json:"internal,omitempty"`
}

func (x *BindingsOperationStatus) Reset() {
	*x = BindingsOperationStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_priv_iam_v1_access_binding_service_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BindingsOperationStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BindingsOperationStatus) ProtoMessage() {}

func (x *BindingsOperationStatus) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_priv_iam_v1_access_binding_service_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BindingsOperationStatus.ProtoReflect.Descriptor instead.
func (*BindingsOperationStatus) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_priv_iam_v1_access_binding_service_proto_rawDescGZIP(), []int{11}
}

// Deprecated: Marked as deprecated in yandex/cloud/priv/iam/v1/access_binding_service.proto.
func (x *BindingsOperationStatus) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

// Deprecated: Marked as deprecated in yandex/cloud/priv/iam/v1/access_binding_service.proto.
func (x *BindingsOperationStatus) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// Deprecated: Marked as deprecated in yandex/cloud/priv/iam/v1/access_binding_service.proto.
func (x *BindingsOperationStatus) GetInternal() *errdetails.DebugInfo {
	if x != nil {
		return x.Internal
	}
	return nil
}

type CheckLikelyPubliclyAccessibleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Resources to check.
	Resources []*v1.Resource `protobuf:"bytes,1,rep,name=resources,proto3" json:"resources,omitempty"`
}

func (x *CheckLikelyPubliclyAccessibleRequest) Reset() {
	*x = CheckLikelyPubliclyAccessibleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_priv_iam_v1_access_binding_service_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckLikelyPubliclyAccessibleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckLikelyPubliclyAccessibleRequest) ProtoMessage() {}

func (x *CheckLikelyPubliclyAccessibleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_priv_iam_v1_access_binding_service_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckLikelyPubliclyAccessibleRequest.ProtoReflect.Descriptor instead.
func (*CheckLikelyPubliclyAccessibleRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_priv_iam_v1_access_binding_service_proto_rawDescGZIP(), []int{12}
}

func (x *CheckLikelyPubliclyAccessibleRequest) GetResources() []*v1.Resource {
	if x != nil {
		return x.Resources
	}
	return nil
}

type CheckLikelyPubliclyAccessibleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Resources that are likely publicly accessible;
	Resources []*v1.Resource `protobuf:"bytes,1,rep,name=resources,proto3" json:"resources,omitempty"`
}

func (x *CheckLikelyPubliclyAccessibleResponse) Reset() {
	*x = CheckLikelyPubliclyAccessibleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_priv_iam_v1_access_binding_service_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckLikelyPubliclyAccessibleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckLikelyPubliclyAccessibleResponse) ProtoMessage() {}

func (x *CheckLikelyPubliclyAccessibleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_priv_iam_v1_access_binding_service_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckLikelyPubliclyAccessibleResponse.ProtoReflect.Descriptor instead.
func (*CheckLikelyPubliclyAccessibleResponse) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_priv_iam_v1_access_binding_service_proto_rawDescGZIP(), []int{13}
}

func (x *CheckLikelyPubliclyAccessibleResponse) GetResources() []*v1.Resource {
	if x != nil {
		return x.Resources
	}
	return nil
}

type ChangeTopLevelResourceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Path to resource.
	ResourcePath []*v1.Resource `protobuf:"bytes,1,rep,name=resource_path,json=resourcePath,proto3" json:"resource_path,omitempty"`
	// Top level resource to change to.
	TopLevelResource *v1.Resource `protobuf:"bytes,2,opt,name=top_level_resource,json=topLevelResource,proto3" json:"top_level_resource,omitempty"`
	// Dry run flag. When this flag is true, perform preliminary check instead. In case there are
	// access bindings that would be lost in the process, returned failed operation with code FAILED_PRECONDITION
	// will contain a ChangeTopLevelResourceDryRunErrorDetails error detail describing subjects whose
	// access bindings would be lost.
	DryRun bool `protobuf:"varint,3,opt,name=dry_run,json=dryRun,proto3" json:"dry_run,omitempty"`
	// Subject IDs whose bindings shouldn't be lost during processing request.
	RetainBindingsSubjectIds []string `protobuf:"bytes,4,rep,name=retain_bindings_subject_ids,json=retainBindingsSubjectIds,proto3" json:"retain_bindings_subject_ids,omitempty"`
}

func (x *ChangeTopLevelResourceRequest) Reset() {
	*x = ChangeTopLevelResourceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_priv_iam_v1_access_binding_service_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangeTopLevelResourceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeTopLevelResourceRequest) ProtoMessage() {}

func (x *ChangeTopLevelResourceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_priv_iam_v1_access_binding_service_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeTopLevelResourceRequest.ProtoReflect.Descriptor instead.
func (*ChangeTopLevelResourceRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_priv_iam_v1_access_binding_service_proto_rawDescGZIP(), []int{14}
}

func (x *ChangeTopLevelResourceRequest) GetResourcePath() []*v1.Resource {
	if x != nil {
		return x.ResourcePath
	}
	return nil
}

func (x *ChangeTopLevelResourceRequest) GetTopLevelResource() *v1.Resource {
	if x != nil {
		return x.TopLevelResource
	}
	return nil
}

func (x *ChangeTopLevelResourceRequest) GetDryRun() bool {
	if x != nil {
		return x.DryRun
	}
	return false
}

func (x *ChangeTopLevelResourceRequest) GetRetainBindingsSubjectIds() []string {
	if x != nil {
		return x.RetainBindingsSubjectIds
	}
	return nil
}

type ChangeTopLevelResourceMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResourcePath     []*v1.Resource `protobuf:"bytes,1,rep,name=resource_path,json=resourcePath,proto3" json:"resource_path,omitempty"`
	TopLevelResource *v1.Resource   `protobuf:"bytes,2,opt,name=top_level_resource,json=topLevelResource,proto3" json:"top_level_resource,omitempty"`
	DryRun           bool           `protobuf:"varint,3,opt,name=dry_run,json=dryRun,proto3" json:"dry_run,omitempty"`
}

func (x *ChangeTopLevelResourceMetadata) Reset() {
	*x = ChangeTopLevelResourceMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_priv_iam_v1_access_binding_service_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangeTopLevelResourceMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeTopLevelResourceMetadata) ProtoMessage() {}

func (x *ChangeTopLevelResourceMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_priv_iam_v1_access_binding_service_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeTopLevelResourceMetadata.ProtoReflect.Descriptor instead.
func (*ChangeTopLevelResourceMetadata) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_priv_iam_v1_access_binding_service_proto_rawDescGZIP(), []int{15}
}

func (x *ChangeTopLevelResourceMetadata) GetResourcePath() []*v1.Resource {
	if x != nil {
		return x.ResourcePath
	}
	return nil
}

func (x *ChangeTopLevelResourceMetadata) GetTopLevelResource() *v1.Resource {
	if x != nil {
		return x.TopLevelResource
	}
	return nil
}

func (x *ChangeTopLevelResourceMetadata) GetDryRun() bool {
	if x != nil {
		return x.DryRun
	}
	return false
}

type ChangeTopLevelResourceDryRunErrorDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Some of the public access bindings that would be lost when changing top level resource.
	// This list might be empty in case only system bindings are present.
	// These can be displayed to public end users.
	PublicAccessBindings []*ChangeTopLevelResourceDryRunErrorDetails_AccessBinding `protobuf:"bytes,1,rep,name=public_access_bindings,json=publicAccessBindings,proto3" json:"public_access_bindings,omitempty"`
	// Some of the system access bindings that would be lost when changing top level resource.
	// This list might be empty in case only public bindings are present.
	// These should only be displayed to staff members.
	// In case only system bindings are present, public end users should receive a vague
	// message like "cannot move access bindings", without any specifics.
	SystemAccessBindings []*ChangeTopLevelResourceDryRunErrorDetails_AccessBinding `protobuf:"bytes,2,rep,name=system_access_bindings,json=systemAccessBindings,proto3" json:"system_access_bindings,omitempty"`
}

func (x *ChangeTopLevelResourceDryRunErrorDetails) Reset() {
	*x = ChangeTopLevelResourceDryRunErrorDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_priv_iam_v1_access_binding_service_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangeTopLevelResourceDryRunErrorDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeTopLevelResourceDryRunErrorDetails) ProtoMessage() {}

func (x *ChangeTopLevelResourceDryRunErrorDetails) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_priv_iam_v1_access_binding_service_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeTopLevelResourceDryRunErrorDetails.ProtoReflect.Descriptor instead.
func (*ChangeTopLevelResourceDryRunErrorDetails) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_priv_iam_v1_access_binding_service_proto_rawDescGZIP(), []int{16}
}

func (x *ChangeTopLevelResourceDryRunErrorDetails) GetPublicAccessBindings() []*ChangeTopLevelResourceDryRunErrorDetails_AccessBinding {
	if x != nil {
		return x.PublicAccessBindings
	}
	return nil
}

func (x *ChangeTopLevelResourceDryRunErrorDetails) GetSystemAccessBindings() []*ChangeTopLevelResourceDryRunErrorDetails_AccessBinding {
	if x != nil {
		return x.SystemAccessBindings
	}
	return nil
}

type DeleteByTopLevelResourceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Subject IDs whose bindings are to be removed.
	SubjectIds []string `protobuf:"bytes,1,rep,name=subject_ids,json=subjectIds,proto3" json:"subject_ids,omitempty"`
	// Top level resource filter of access bindings.
	TopLevelResource *v1.Resource `protobuf:"bytes,2,opt,name=top_level_resource,json=topLevelResource,proto3" json:"top_level_resource,omitempty"`
	// If set, perform operation on behalf of subject with this id.
	OnBehalfOfSubjectId string `protobuf:"bytes,3,opt,name=on_behalf_of_subject_id,json=onBehalfOfSubjectId,proto3" json:"on_behalf_of_subject_id,omitempty"`
}

func (x *DeleteByTopLevelResourceRequest) Reset() {
	*x = DeleteByTopLevelResourceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_priv_iam_v1_access_binding_service_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteByTopLevelResourceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteByTopLevelResourceRequest) ProtoMessage() {}

func (x *DeleteByTopLevelResourceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_priv_iam_v1_access_binding_service_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteByTopLevelResourceRequest.ProtoReflect.Descriptor instead.
func (*DeleteByTopLevelResourceRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_priv_iam_v1_access_binding_service_proto_rawDescGZIP(), []int{17}
}

func (x *DeleteByTopLevelResourceRequest) GetSubjectIds() []string {
	if x != nil {
		return x.SubjectIds
	}
	return nil
}

func (x *DeleteByTopLevelResourceRequest) GetTopLevelResource() *v1.Resource {
	if x != nil {
		return x.TopLevelResource
	}
	return nil
}

func (x *DeleteByTopLevelResourceRequest) GetOnBehalfOfSubjectId() string {
	if x != nil {
		return x.OnBehalfOfSubjectId
	}
	return ""
}

type DeleteByTopLevelResourceMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubjectIds          []string     `protobuf:"bytes,1,rep,name=subject_ids,json=subjectIds,proto3" json:"subject_ids,omitempty"`
	TopLevelResource    *v1.Resource `protobuf:"bytes,2,opt,name=top_level_resource,json=topLevelResource,proto3" json:"top_level_resource,omitempty"`
	OnBehalfOfSubjectId string       `protobuf:"bytes,3,opt,name=on_behalf_of_subject_id,json=onBehalfOfSubjectId,proto3" json:"on_behalf_of_subject_id,omitempty"`
}

func (x *DeleteByTopLevelResourceMetadata) Reset() {
	*x = DeleteByTopLevelResourceMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_priv_iam_v1_access_binding_service_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteByTopLevelResourceMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteByTopLevelResourceMetadata) ProtoMessage() {}

func (x *DeleteByTopLevelResourceMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_priv_iam_v1_access_binding_service_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteByTopLevelResourceMetadata.ProtoReflect.Descriptor instead.
func (*DeleteByTopLevelResourceMetadata) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_priv_iam_v1_access_binding_service_proto_rawDescGZIP(), []int{18}
}

func (x *DeleteByTopLevelResourceMetadata) GetSubjectIds() []string {
	if x != nil {
		return x.SubjectIds
	}
	return nil
}

func (x *DeleteByTopLevelResourceMetadata) GetTopLevelResource() *v1.Resource {
	if x != nil {
		return x.TopLevelResource
	}
	return nil
}

func (x *DeleteByTopLevelResourceMetadata) GetOnBehalfOfSubjectId() string {
	if x != nil {
		return x.OnBehalfOfSubjectId
	}
	return ""
}

type DeleteByCloudRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CloudId string `protobuf:"bytes,1,opt,name=cloud_id,json=cloudId,proto3" json:"cloud_id,omitempty"`
}

func (x *DeleteByCloudRequest) Reset() {
	*x = DeleteByCloudRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_priv_iam_v1_access_binding_service_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteByCloudRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteByCloudRequest) ProtoMessage() {}

func (x *DeleteByCloudRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_priv_iam_v1_access_binding_service_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteByCloudRequest.ProtoReflect.Descriptor instead.
func (*DeleteByCloudRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_priv_iam_v1_access_binding_service_proto_rawDescGZIP(), []int{19}
}

func (x *DeleteByCloudRequest) GetCloudId() string {
	if x != nil {
		return x.CloudId
	}
	return ""
}

type DeleteByCloudMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CloudId string `protobuf:"bytes,1,opt,name=cloud_id,json=cloudId,proto3" json:"cloud_id,omitempty"`
}

func (x *DeleteByCloudMetadata) Reset() {
	*x = DeleteByCloudMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_priv_iam_v1_access_binding_service_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteByCloudMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteByCloudMetadata) ProtoMessage() {}

func (x *DeleteByCloudMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_priv_iam_v1_access_binding_service_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteByCloudMetadata.ProtoReflect.Descriptor instead.
func (*DeleteByCloudMetadata) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_priv_iam_v1_access_binding_service_proto_rawDescGZIP(), []int{20}
}

func (x *DeleteByCloudMetadata) GetCloudId() string {
	if x != nil {
		return x.CloudId
	}
	return ""
}

type DeleteByCloudResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeletedResourcesByType map[string]int64 `protobuf:"bytes,1,rep,name=deleted_resources_by_type,json=deletedResourcesByType,proto3" json:"deleted_resources_by_type,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (x *DeleteByCloudResponse) Reset() {
	*x = DeleteByCloudResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_priv_iam_v1_access_binding_service_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteByCloudResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteByCloudResponse) ProtoMessage() {}

func (x *DeleteByCloudResponse) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_priv_iam_v1_access_binding_service_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteByCloudResponse.ProtoReflect.Descriptor instead.
func (*DeleteByCloudResponse) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_priv_iam_v1_access_binding_service_proto_rawDescGZIP(), []int{21}
}

func (x *DeleteByCloudResponse) GetDeletedResourcesByType() map[string]int64 {
	if x != nil {
		return x.DeletedResourcesByType
	}
	return nil
}

type ChangeTopLevelResourceDryRunErrorDetails_AccessBinding struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoleId       string `protobuf:"bytes,1,opt,name=role_id,json=roleId,proto3" json:"role_id,omitempty"`
	SubjectId    string `protobuf:"bytes,2,opt,name=subject_id,json=subjectId,proto3" json:"subject_id,omitempty"`
	ResourceId   string `protobuf:"bytes,3,opt,name=resource_id,json=resourceId,proto3" json:"resource_id,omitempty"`
	ResourceType string `protobuf:"bytes,4,opt,name=resource_type,json=resourceType,proto3" json:"resource_type,omitempty"`
}

func (x *ChangeTopLevelResourceDryRunErrorDetails_AccessBinding) Reset() {
	*x = ChangeTopLevelResourceDryRunErrorDetails_AccessBinding{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_priv_iam_v1_access_binding_service_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangeTopLevelResourceDryRunErrorDetails_AccessBinding) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeTopLevelResourceDryRunErrorDetails_AccessBinding) ProtoMessage() {}

func (x *ChangeTopLevelResourceDryRunErrorDetails_AccessBinding) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_priv_iam_v1_access_binding_service_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeTopLevelResourceDryRunErrorDetails_AccessBinding.ProtoReflect.Descriptor instead.
func (*ChangeTopLevelResourceDryRunErrorDetails_AccessBinding) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_priv_iam_v1_access_binding_service_proto_rawDescGZIP(), []int{16, 0}
}

func (x *ChangeTopLevelResourceDryRunErrorDetails_AccessBinding) GetRoleId() string {
	if x != nil {
		return x.RoleId
	}
	return ""
}

func (x *ChangeTopLevelResourceDryRunErrorDetails_AccessBinding) GetSubjectId() string {
	if x != nil {
		return x.SubjectId
	}
	return ""
}

func (x *ChangeTopLevelResourceDryRunErrorDetails_AccessBinding) GetResourceId() string {
	if x != nil {
		return x.ResourceId
	}
	return ""
}

func (x *ChangeTopLevelResourceDryRunErrorDetails_AccessBinding) GetResourceType() string {
	if x != nil {
		return x.ResourceType
	}
	return ""
}

var File_yandex_cloud_priv_iam_v1_access_binding_service_proto protoreflect.FileDescriptor

var file_yandex_cloud_priv_iam_v1_access_binding_service_proto_rawDesc = []byte{
	0x0a, 0x35, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x70,
	0x72, 0x69, 0x76, 0x2f, 0x69, 0x61, 0x6d, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x5f, 0x62, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x18, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x76,
	0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e,
	0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x72, 0x70, 0x63, 0x2f, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x20, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x24, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x74, 0x6f, 0x6f, 0x6c, 0x73, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2b, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2f,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x70, 0x72, 0x69, 0x76, 0x2f, 0x6f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x32, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2f, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2f, 0x70, 0x72, 0x69, 0x76, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x22, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78,
	0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x70, 0x72, 0x69, 0x76, 0x2f, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x47, 0x0a, 0x07,
	0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x1d, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x0d, 0xa8, 0x89, 0x31, 0x01, 0xca, 0x89, 0x31, 0x05, 0x3c, 0x3d, 0x31,
	0x30, 0x30, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xca, 0x89, 0x31, 0x05, 0x3c, 0x3d, 0x31, 0x30, 0x30, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0xa2, 0x01, 0x0a, 0x0d, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x25, 0x0a, 0x07, 0x72, 0x6f, 0x6c, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0c, 0xa8, 0x89, 0x31, 0x01, 0xca, 0x89,
	0x31, 0x04, 0x3c, 0x3d, 0x35, 0x30, 0x52, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x41,
	0x0a, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x21, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x70,
	0x72, 0x69, 0x76, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x75, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x42, 0x04, 0xa8, 0x89, 0x31, 0x01, 0x52, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x12, 0x27, 0x0a, 0x0a, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xca, 0x89, 0x31, 0x04, 0x3c, 0x3d, 0x35, 0x30, 0x52,
	0x09, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x64, 0x42, 0x79, 0x22, 0xf5, 0x01, 0x0a, 0x19, 0x4c,
	0x69, 0x73, 0x74, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2d, 0x0a, 0x0b, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0c, 0xa8,
	0x89, 0x31, 0x01, 0xca, 0x89, 0x31, 0x04, 0x3c, 0x3d, 0x35, 0x30, 0x52, 0x0a, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x12, 0x32, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0d,
	0xa8, 0x89, 0x31, 0x01, 0xca, 0x89, 0x31, 0x05, 0x3c, 0x3d, 0x31, 0x30, 0x30, 0x52, 0x0c, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x70,
	0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0b, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x12, 0x27,
	0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x03, 0x42, 0x0a, 0xba, 0x89, 0x31, 0x06, 0x3c, 0x3d, 0x31, 0x30, 0x30, 0x30, 0x52, 0x08, 0x70,
	0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x29, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xca, 0x89, 0x31,
	0x06, 0x3c, 0x3d, 0x32, 0x30, 0x30, 0x30, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x22, 0x96, 0x01, 0x0a, 0x1a, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x50, 0x0a, 0x0f, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x62, 0x69, 0x6e, 0x64,
	0x69, 0x6e, 0x67, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x79, 0x61, 0x6e,
	0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x2e, 0x69,
	0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x42, 0x69, 0x6e, 0x64,
	0x69, 0x6e, 0x67, 0x52, 0x0e, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x42, 0x69, 0x6e, 0x64, 0x69,
	0x6e, 0x67, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65,
	0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e, 0x65,
	0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x99, 0x03, 0x0a, 0x18,
	0x53, 0x65, 0x74, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x5d, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x2d, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x70,
	0x72, 0x69, 0x76, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x42, 0x09,
	0xc2, 0x89, 0x31, 0x05, 0x31, 0x2d, 0x31, 0x30, 0x30, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x5c, 0x0a, 0x0f, 0x61, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x5f, 0x62, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x27, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x70, 0x72, 0x69, 0x76, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x42, 0x0a, 0xc2, 0x89, 0x31, 0x06, 0x3c,
	0x3d, 0x31, 0x30, 0x30, 0x30, 0x52, 0x0e, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x42, 0x69, 0x6e,
	0x64, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65,
	0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x70, 0x72, 0x69,
	0x76, 0x61, 0x74, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x12, 0x3e, 0x0a, 0x17, 0x6f, 0x6e, 0x5f, 0x62,
	0x65, 0x68, 0x61, 0x6c, 0x66, 0x5f, 0x6f, 0x66, 0x5f, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xca, 0x89, 0x31, 0x04, 0x3c,
	0x3d, 0x35, 0x30, 0x52, 0x13, 0x6f, 0x6e, 0x42, 0x65, 0x68, 0x61, 0x6c, 0x66, 0x4f, 0x66, 0x53,
	0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x2b, 0x0a, 0x0b, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xca,
	0x89, 0x31, 0x04, 0x3c, 0x3d, 0x35, 0x30, 0x18, 0x01, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x49, 0x64, 0x12, 0x30, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0b, 0xca, 0x89,
	0x31, 0x05, 0x3c, 0x3d, 0x31, 0x30, 0x30, 0x18, 0x01, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x22, 0xeb, 0x01, 0x0a, 0x19, 0x53, 0x65, 0x74, 0x41,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x73, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x52, 0x0a, 0x0d, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12,
	0x34, 0x0a, 0x17, 0x6f, 0x6e, 0x5f, 0x62, 0x65, 0x68, 0x61, 0x6c, 0x66, 0x5f, 0x6f, 0x66, 0x5f,
	0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x13, 0x6f, 0x6e, 0x42, 0x65, 0x68, 0x61, 0x6c, 0x66, 0x4f, 0x66, 0x53, 0x75, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x49, 0x64, 0x22, 0xac, 0x03, 0x0a, 0x1b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x5d, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x79,
	0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x70, 0x72, 0x69, 0x76,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2e,
	0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x42, 0x09, 0xc2, 0x89, 0x31,
	0x05, 0x31, 0x2d, 0x31, 0x30, 0x30, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x50, 0x61, 0x74, 0x68, 0x12, 0x6c, 0x0a, 0x15, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x62,
	0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x64, 0x65, 0x6c, 0x74, 0x61, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x41,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x44, 0x65, 0x6c, 0x74,
	0x61, 0x42, 0x0a, 0xc2, 0x89, 0x31, 0x06, 0x31, 0x2d, 0x31, 0x30, 0x30, 0x30, 0x52, 0x13, 0x61,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x44, 0x65, 0x6c, 0x74,
	0x61, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x5f, 0x63, 0x61,
	0x6c, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74,
	0x65, 0x43, 0x61, 0x6c, 0x6c, 0x12, 0x3e, 0x0a, 0x17, 0x6f, 0x6e, 0x5f, 0x62, 0x65, 0x68, 0x61,
	0x6c, 0x66, 0x5f, 0x6f, 0x66, 0x5f, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xca, 0x89, 0x31, 0x04, 0x3c, 0x3d, 0x35, 0x30,
	0x52, 0x13, 0x6f, 0x6e, 0x42, 0x65, 0x68, 0x61, 0x6c, 0x66, 0x4f, 0x66, 0x53, 0x75, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x2b, 0x0a, 0x0b, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xca, 0x89, 0x31, 0x04,
	0x3c, 0x3d, 0x35, 0x30, 0x18, 0x01, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x49, 0x64, 0x12, 0x30, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0b, 0xca, 0x89, 0x31, 0x05, 0x3c,
	0x3d, 0x31, 0x30, 0x30, 0x18, 0x01, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x22, 0xee, 0x01, 0x0a, 0x1c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x73, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x52, 0x0a, 0x0d, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12,
	0x34, 0x0a, 0x17, 0x6f, 0x6e, 0x5f, 0x62, 0x65, 0x68, 0x61, 0x6c, 0x66, 0x5f, 0x6f, 0x66, 0x5f,
	0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x13, 0x6f, 0x6e, 0x42, 0x65, 0x68, 0x61, 0x6c, 0x66, 0x4f, 0x66, 0x53, 0x75, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x49, 0x64, 0x22, 0xb7, 0x01, 0x0a, 0x12, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x44, 0x65, 0x6c, 0x74, 0x61, 0x12, 0x4b, 0x0a, 0x06,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2d, 0x2e, 0x79,
	0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x70, 0x72, 0x69, 0x76,
	0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x42, 0x69,
	0x6e, 0x64, 0x69, 0x6e, 0x67, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x04, 0xa8, 0x89, 0x31,
	0x01, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x54, 0x0a, 0x0e, 0x61, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x5f, 0x62, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x27, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x70, 0x72, 0x69, 0x76, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x42, 0x04, 0xa8, 0x89, 0x31, 0x01,
	0x52, 0x0d, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x22,
	0x80, 0x01, 0x0a, 0x1d, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e,
	0x67, 0x73, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x31, 0x0a, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x15, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x44,
	0x65, 0x62, 0x75, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x22, 0x80, 0x01, 0x0a, 0x1c, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x42, 0x69, 0x6e,
	0x64, 0x69, 0x6e, 0x67, 0x73, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65,
	0x6c, 0x74, 0x61, 0x12, 0x60, 0x0a, 0x15, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x62, 0x69,
	0x6e, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x64, 0x65, 0x6c, 0x74, 0x61, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x44, 0x65, 0x6c, 0x74, 0x61,
	0x52, 0x13, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x44,
	0x65, 0x6c, 0x74, 0x61, 0x73, 0x22, 0x86, 0x01, 0x0a, 0x17, 0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e,
	0x67, 0x73, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x16, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42,
	0x02, 0x18, 0x01, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x02, 0x18, 0x01, 0x52, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x35, 0x0a, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x44, 0x65, 0x62, 0x75, 0x67, 0x49, 0x6e, 0x66, 0x6f,
	0x42, 0x02, 0x18, 0x01, 0x52, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x22, 0x7f,
	0x0a, 0x24, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x4c, 0x69, 0x6b, 0x65, 0x6c, 0x79, 0x50, 0x75, 0x62,
	0x6c, 0x69, 0x63, 0x6c, 0x79, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x57, 0x0a, 0x09, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x79, 0x61, 0x6e, 0x64,
	0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x42, 0x0a, 0xc2, 0x89, 0x31, 0x06, 0x31, 0x2d,
	0x31, 0x30, 0x30, 0x30, 0x52, 0x09, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x22,
	0x74, 0x0a, 0x25, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x4c, 0x69, 0x6b, 0x65, 0x6c, 0x79, 0x50, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x6c, 0x79, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x69, 0x62, 0x6c, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4b, 0x0a, 0x09, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x79, 0x61,
	0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2e, 0x76,
	0x31, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x09, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x73, 0x22, 0xcd, 0x02, 0x0a, 0x1d, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x54, 0x6f, 0x70, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x5d, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d,
	0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x70, 0x72,
	0x69, 0x76, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f,
	0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x42, 0x09, 0xc2,
	0x89, 0x31, 0x05, 0x31, 0x2d, 0x31, 0x30, 0x30, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x61, 0x0a, 0x12, 0x74, 0x6f, 0x70, 0x5f, 0x6c, 0x65,
	0x76, 0x65, 0x6c, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x42, 0x04, 0xa8, 0x89, 0x31, 0x01, 0x52, 0x10, 0x74, 0x6f, 0x70, 0x4c, 0x65, 0x76, 0x65,
	0x6c, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x64, 0x72, 0x79,
	0x5f, 0x72, 0x75, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x64, 0x72, 0x79, 0x52,
	0x75, 0x6e, 0x12, 0x51, 0x0a, 0x1b, 0x72, 0x65, 0x74, 0x61, 0x69, 0x6e, 0x5f, 0x62, 0x69, 0x6e,
	0x64, 0x69, 0x6e, 0x67, 0x73, 0x5f, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64,
	0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x42, 0x12, 0xc2, 0x89, 0x31, 0x06, 0x3c, 0x3d, 0x31,
	0x30, 0x30, 0x30, 0xca, 0x89, 0x31, 0x04, 0x3c, 0x3d, 0x35, 0x30, 0x52, 0x18, 0x72, 0x65, 0x74,
	0x61, 0x69, 0x6e, 0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x73, 0x53, 0x75, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x49, 0x64, 0x73, 0x22, 0xea, 0x01, 0x0a, 0x1e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x54, 0x6f, 0x70, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x52, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x2d, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x70,
	0x72, 0x69, 0x76, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x0c,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x5b, 0x0a, 0x12,
	0x74, 0x6f, 0x70, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65,
	0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x10, 0x74, 0x6f, 0x70, 0x4c, 0x65, 0x76, 0x65,
	0x6c, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x64, 0x72, 0x79,
	0x5f, 0x72, 0x75, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x64, 0x72, 0x79, 0x52,
	0x75, 0x6e, 0x22, 0xe0, 0x03, 0x0a, 0x28, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x54, 0x6f, 0x70,
	0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x44, 0x72, 0x79,
	0x52, 0x75, 0x6e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12,
	0x90, 0x01, 0x0a, 0x16, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x61, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x5f, 0x62, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x50, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x70, 0x72, 0x69, 0x76, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x54, 0x6f, 0x70, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x44, 0x72, 0x79, 0x52, 0x75, 0x6e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x2e, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x42, 0x69, 0x6e, 0x64, 0x69,
	0x6e, 0x67, 0x42, 0x08, 0xc2, 0x89, 0x31, 0x04, 0x3c, 0x3d, 0x31, 0x30, 0x52, 0x14, 0x70, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e,
	0x67, 0x73, 0x12, 0x90, 0x01, 0x0a, 0x16, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x61, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x5f, 0x62, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x50, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x54, 0x6f, 0x70, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x44, 0x72, 0x79, 0x52, 0x75, 0x6e, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x2e, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x42, 0x69,
	0x6e, 0x64, 0x69, 0x6e, 0x67, 0x42, 0x08, 0xc2, 0x89, 0x31, 0x04, 0x3c, 0x3d, 0x31, 0x30, 0x52,
	0x14, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x42, 0x69, 0x6e,
	0x64, 0x69, 0x6e, 0x67, 0x73, 0x1a, 0x8d, 0x01, 0x0a, 0x0d, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6c, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64,
	0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12,
	0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64,
	0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x22, 0xef, 0x01, 0x0a, 0x1f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x42, 0x79, 0x54, 0x6f, 0x70, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x33, 0x0a, 0x0b, 0x73, 0x75, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x42, 0x12,
	0xc2, 0x89, 0x31, 0x06, 0x31, 0x2d, 0x31, 0x30, 0x30, 0x30, 0xca, 0x89, 0x31, 0x04, 0x3c, 0x3d,
	0x35, 0x30, 0x52, 0x0a, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x73, 0x12, 0x61,
	0x0a, 0x12, 0x74, 0x6f, 0x70, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x5f, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x79, 0x61, 0x6e,
	0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2e, 0x76, 0x31,
	0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x42, 0x04, 0xa8, 0x89, 0x31, 0x01, 0x52,
	0x10, 0x74, 0x6f, 0x70, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x12, 0x34, 0x0a, 0x17, 0x6f, 0x6e, 0x5f, 0x62, 0x65, 0x68, 0x61, 0x6c, 0x66, 0x5f, 0x6f,
	0x66, 0x5f, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x13, 0x6f, 0x6e, 0x42, 0x65, 0x68, 0x61, 0x6c, 0x66, 0x4f, 0x66, 0x53, 0x75,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x22, 0xd6, 0x01, 0x0a, 0x20, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x42, 0x79, 0x54, 0x6f, 0x70, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1f, 0x0a, 0x0b,
	0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x0a, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x73, 0x12, 0x5b, 0x0a,
	0x12, 0x74, 0x6f, 0x70, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x79, 0x61, 0x6e, 0x64,
	0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x10, 0x74, 0x6f, 0x70, 0x4c, 0x65, 0x76,
	0x65, 0x6c, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x34, 0x0a, 0x17, 0x6f, 0x6e,
	0x5f, 0x62, 0x65, 0x68, 0x61, 0x6c, 0x66, 0x5f, 0x6f, 0x66, 0x5f, 0x73, 0x75, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x6f, 0x6e, 0x42,
	0x65, 0x68, 0x61, 0x6c, 0x66, 0x4f, 0x66, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64,
	0x22, 0x3f, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x79, 0x43, 0x6c, 0x6f, 0x75,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x08, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0c, 0xa8, 0x89, 0x31, 0x01,
	0xca, 0x89, 0x31, 0x04, 0x3c, 0x3d, 0x35, 0x30, 0x52, 0x07, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x49,
	0x64, 0x22, 0x32, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x79, 0x43, 0x6c, 0x6f,
	0x75, 0x64, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x49, 0x64, 0x22, 0xeb, 0x01, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x42, 0x79, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x86, 0x01, 0x0a, 0x19, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x73, 0x5f, 0x62, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x4b, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x79, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x73, 0x42, 0x79, 0x54, 0x79, 0x70, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x16, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x73, 0x42, 0x79, 0x54, 0x79, 0x70, 0x65, 0x1a, 0x49, 0x0a, 0x1b, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x64, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x42, 0x79, 0x54, 0x79,
	0x70, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x2a, 0x51, 0x0a, 0x13, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x42, 0x69, 0x6e,
	0x64, 0x69, 0x6e, 0x67, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x25, 0x0a, 0x21, 0x41, 0x43,
	0x43, 0x45, 0x53, 0x53, 0x5f, 0x42, 0x49, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x5f, 0x41, 0x43, 0x54,
	0x49, 0x4f, 0x4e, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10,
	0x00, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x44, 0x44, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x52, 0x45,
	0x4d, 0x4f, 0x56, 0x45, 0x10, 0x02, 0x32, 0xc5, 0x0a, 0x0a, 0x14, 0x41, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0xab, 0x01, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x42, 0x69,
	0x6e, 0x64, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x33, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x76,
	0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x42, 0x69, 0x6e, 0x64,
	0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x34, 0x2e, 0x79, 0x61,
	0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x2e,
	0x69, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x2a, 0xca, 0xef, 0x20, 0x04, 0x0a, 0x02, 0x10, 0x01, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x1c, 0x12, 0x1a, 0x2f, 0x69, 0x61, 0x6d, 0x2f, 0x76, 0x31, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x41,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x73, 0x12, 0xda, 0x01,
	0x0a, 0x11, 0x53, 0x65, 0x74, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x42, 0x69, 0x6e, 0x64, 0x69,
	0x6e, 0x67, 0x73, 0x12, 0x32, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x65, 0x74, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x2e, 0x6f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0x69, 0xca, 0xef, 0x20, 0x04, 0x0a, 0x02, 0x10, 0x01, 0xb2, 0xd2, 0x2a, 0x39, 0x0a, 0x19, 0x53,
	0x65, 0x74, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x73,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x73, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x44, 0x65, 0x6c, 0x74, 0x61, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1e, 0x3a, 0x01, 0x2a, 0x22,
	0x19, 0x2f, 0x69, 0x61, 0x6d, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x65, 0x74, 0x41, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x73, 0x12, 0xe8, 0x01, 0x0a, 0x14, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x42, 0x69, 0x6e, 0x64, 0x69,
	0x6e, 0x67, 0x73, 0x12, 0x35, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x42, 0x69, 0x6e, 0x64, 0x69,
	0x6e, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x79, 0x61, 0x6e,
	0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x2e, 0x6f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0x71, 0xca, 0xef, 0x20, 0x06, 0x0a, 0x04, 0x10, 0x01, 0x28, 0x01, 0xb2, 0xd2,
	0x2a, 0x3c, 0x0a, 0x1c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x73, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x12, 0x1c, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x73,
	0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x6c, 0x74, 0x61, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x21, 0x3a, 0x01, 0x2a, 0x22, 0x1c, 0x2f, 0x69, 0x61, 0x6d, 0x2f, 0x76, 0x31,
	0x2f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x42, 0x69, 0x6e,
	0x64, 0x69, 0x6e, 0x67, 0x73, 0x12, 0xa0, 0x01, 0x0a, 0x1d, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x4c,
	0x69, 0x6b, 0x65, 0x6c, 0x79, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x6c, 0x79, 0x41, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x12, 0x3e, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x2e, 0x69, 0x61, 0x6d, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x4c, 0x69, 0x6b, 0x65, 0x6c, 0x79, 0x50, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x6c, 0x79, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x69, 0x62, 0x6c, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3f, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x2e, 0x69, 0x61, 0x6d, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x4c, 0x69, 0x6b, 0x65, 0x6c, 0x79, 0x50, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x6c, 0x79, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x69, 0x62, 0x6c, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0xb6, 0x01, 0x0a, 0x16, 0x43, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x54, 0x6f, 0x70, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x12, 0x37, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x54, 0x6f, 0x70, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x79,
	0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x70, 0x72, 0x69, 0x76,
	0x2e, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0x3b, 0xb2, 0xd2, 0x2a, 0x37, 0x0a, 0x1e, 0x43, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x54, 0x6f, 0x70, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x15, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x12, 0xbc, 0x01, 0x0a, 0x18, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x79, 0x54, 0x6f,
	0x70, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x39,
	0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x70, 0x72,
	0x69, 0x76, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x42, 0x79, 0x54, 0x6f, 0x70, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x79, 0x61, 0x6e, 0x64,
	0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x2e, 0x6f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0x3d, 0xb2, 0xd2, 0x2a, 0x39, 0x0a, 0x20, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42,
	0x79, 0x54, 0x6f, 0x70, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x15, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x12, 0x9b, 0x01, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x79, 0x43, 0x6c, 0x6f,
	0x75, 0x64, 0x12, 0x2e, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x42, 0x79, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x26, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x2e, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x32, 0xb2, 0xd2, 0x2a, 0x2e,
	0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x79, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42,
	0x79, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x51,
	0x42, 0x04, 0x50, 0x41, 0x42, 0x53, 0x5a, 0x49, 0x61, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78,
	0x2d, 0x74, 0x65, 0x61, 0x6d, 0x2e, 0x72, 0x75, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x62,
	0x69, 0x74, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x2f, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65,
	0x2d, 0x61, 0x70, 0x69, 0x2f, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2f, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2f, 0x70, 0x72, 0x69, 0x76, 0x2f, 0x69, 0x61, 0x6d, 0x2f, 0x76, 0x31, 0x3b, 0x69, 0x61,
	0x6d, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_yandex_cloud_priv_iam_v1_access_binding_service_proto_rawDescOnce sync.Once
	file_yandex_cloud_priv_iam_v1_access_binding_service_proto_rawDescData = file_yandex_cloud_priv_iam_v1_access_binding_service_proto_rawDesc
)

func file_yandex_cloud_priv_iam_v1_access_binding_service_proto_rawDescGZIP() []byte {
	file_yandex_cloud_priv_iam_v1_access_binding_service_proto_rawDescOnce.Do(func() {
		file_yandex_cloud_priv_iam_v1_access_binding_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_yandex_cloud_priv_iam_v1_access_binding_service_proto_rawDescData)
	})
	return file_yandex_cloud_priv_iam_v1_access_binding_service_proto_rawDescData
}

var file_yandex_cloud_priv_iam_v1_access_binding_service_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_yandex_cloud_priv_iam_v1_access_binding_service_proto_msgTypes = make([]protoimpl.MessageInfo, 24)
var file_yandex_cloud_priv_iam_v1_access_binding_service_proto_goTypes = []interface{}{
	(AccessBindingAction)(0),                                       // 0: yandex.cloud.priv.iam.v1.AccessBindingAction
	(*Subject)(nil),                                                // 1: yandex.cloud.priv.iam.v1.Subject
	(*AccessBinding)(nil),                                          // 2: yandex.cloud.priv.iam.v1.AccessBinding
	(*ListAccessBindingsRequest)(nil),                              // 3: yandex.cloud.priv.iam.v1.ListAccessBindingsRequest
	(*ListAccessBindingsResponse)(nil),                             // 4: yandex.cloud.priv.iam.v1.ListAccessBindingsResponse
	(*SetAccessBindingsRequest)(nil),                               // 5: yandex.cloud.priv.iam.v1.SetAccessBindingsRequest
	(*SetAccessBindingsMetadata)(nil),                              // 6: yandex.cloud.priv.iam.v1.SetAccessBindingsMetadata
	(*UpdateAccessBindingsRequest)(nil),                            // 7: yandex.cloud.priv.iam.v1.UpdateAccessBindingsRequest
	(*UpdateAccessBindingsMetadata)(nil),                           // 8: yandex.cloud.priv.iam.v1.UpdateAccessBindingsMetadata
	(*AccessBindingDelta)(nil),                                     // 9: yandex.cloud.priv.iam.v1.AccessBindingDelta
	(*AccessBindingsOperationStatus)(nil),                          // 10: yandex.cloud.priv.iam.v1.AccessBindingsOperationStatus
	(*AccessBindingsOperationDelta)(nil),                           // 11: yandex.cloud.priv.iam.v1.AccessBindingsOperationDelta
	(*BindingsOperationStatus)(nil),                                // 12: yandex.cloud.priv.iam.v1.BindingsOperationStatus
	(*CheckLikelyPubliclyAccessibleRequest)(nil),                   // 13: yandex.cloud.priv.iam.v1.CheckLikelyPubliclyAccessibleRequest
	(*CheckLikelyPubliclyAccessibleResponse)(nil),                  // 14: yandex.cloud.priv.iam.v1.CheckLikelyPubliclyAccessibleResponse
	(*ChangeTopLevelResourceRequest)(nil),                          // 15: yandex.cloud.priv.iam.v1.ChangeTopLevelResourceRequest
	(*ChangeTopLevelResourceMetadata)(nil),                         // 16: yandex.cloud.priv.iam.v1.ChangeTopLevelResourceMetadata
	(*ChangeTopLevelResourceDryRunErrorDetails)(nil),               // 17: yandex.cloud.priv.iam.v1.ChangeTopLevelResourceDryRunErrorDetails
	(*DeleteByTopLevelResourceRequest)(nil),                        // 18: yandex.cloud.priv.iam.v1.DeleteByTopLevelResourceRequest
	(*DeleteByTopLevelResourceMetadata)(nil),                       // 19: yandex.cloud.priv.iam.v1.DeleteByTopLevelResourceMetadata
	(*DeleteByCloudRequest)(nil),                                   // 20: yandex.cloud.priv.iam.v1.DeleteByCloudRequest
	(*DeleteByCloudMetadata)(nil),                                  // 21: yandex.cloud.priv.iam.v1.DeleteByCloudMetadata
	(*DeleteByCloudResponse)(nil),                                  // 22: yandex.cloud.priv.iam.v1.DeleteByCloudResponse
	(*ChangeTopLevelResourceDryRunErrorDetails_AccessBinding)(nil), // 23: yandex.cloud.priv.iam.v1.ChangeTopLevelResourceDryRunErrorDetails.AccessBinding
	nil,                          // 24: yandex.cloud.priv.iam.v1.DeleteByCloudResponse.DeletedResourcesByTypeEntry
	(*v1.Resource)(nil),          // 25: yandex.cloud.priv.servicecontrol.v1.Resource
	(*errdetails.DebugInfo)(nil), // 26: google.rpc.DebugInfo
	(*operation.Operation)(nil),  // 27: yandex.cloud.priv.operation.Operation
}
var file_yandex_cloud_priv_iam_v1_access_binding_service_proto_depIdxs = []int32{
	1,  // 0: yandex.cloud.priv.iam.v1.AccessBinding.subject:type_name -> yandex.cloud.priv.iam.v1.Subject
	2,  // 1: yandex.cloud.priv.iam.v1.ListAccessBindingsResponse.access_bindings:type_name -> yandex.cloud.priv.iam.v1.AccessBinding
	25, // 2: yandex.cloud.priv.iam.v1.SetAccessBindingsRequest.resource_path:type_name -> yandex.cloud.priv.servicecontrol.v1.Resource
	2,  // 3: yandex.cloud.priv.iam.v1.SetAccessBindingsRequest.access_bindings:type_name -> yandex.cloud.priv.iam.v1.AccessBinding
	25, // 4: yandex.cloud.priv.iam.v1.SetAccessBindingsMetadata.resource_path:type_name -> yandex.cloud.priv.servicecontrol.v1.Resource
	25, // 5: yandex.cloud.priv.iam.v1.UpdateAccessBindingsRequest.resource_path:type_name -> yandex.cloud.priv.servicecontrol.v1.Resource
	9,  // 6: yandex.cloud.priv.iam.v1.UpdateAccessBindingsRequest.access_binding_deltas:type_name -> yandex.cloud.priv.iam.v1.AccessBindingDelta
	25, // 7: yandex.cloud.priv.iam.v1.UpdateAccessBindingsMetadata.resource_path:type_name -> yandex.cloud.priv.servicecontrol.v1.Resource
	0,  // 8: yandex.cloud.priv.iam.v1.AccessBindingDelta.action:type_name -> yandex.cloud.priv.iam.v1.AccessBindingAction
	2,  // 9: yandex.cloud.priv.iam.v1.AccessBindingDelta.access_binding:type_name -> yandex.cloud.priv.iam.v1.AccessBinding
	26, // 10: yandex.cloud.priv.iam.v1.AccessBindingsOperationStatus.internal:type_name -> google.rpc.DebugInfo
	9,  // 11: yandex.cloud.priv.iam.v1.AccessBindingsOperationDelta.access_binding_deltas:type_name -> yandex.cloud.priv.iam.v1.AccessBindingDelta
	26, // 12: yandex.cloud.priv.iam.v1.BindingsOperationStatus.internal:type_name -> google.rpc.DebugInfo
	25, // 13: yandex.cloud.priv.iam.v1.CheckLikelyPubliclyAccessibleRequest.resources:type_name -> yandex.cloud.priv.servicecontrol.v1.Resource
	25, // 14: yandex.cloud.priv.iam.v1.CheckLikelyPubliclyAccessibleResponse.resources:type_name -> yandex.cloud.priv.servicecontrol.v1.Resource
	25, // 15: yandex.cloud.priv.iam.v1.ChangeTopLevelResourceRequest.resource_path:type_name -> yandex.cloud.priv.servicecontrol.v1.Resource
	25, // 16: yandex.cloud.priv.iam.v1.ChangeTopLevelResourceRequest.top_level_resource:type_name -> yandex.cloud.priv.servicecontrol.v1.Resource
	25, // 17: yandex.cloud.priv.iam.v1.ChangeTopLevelResourceMetadata.resource_path:type_name -> yandex.cloud.priv.servicecontrol.v1.Resource
	25, // 18: yandex.cloud.priv.iam.v1.ChangeTopLevelResourceMetadata.top_level_resource:type_name -> yandex.cloud.priv.servicecontrol.v1.Resource
	23, // 19: yandex.cloud.priv.iam.v1.ChangeTopLevelResourceDryRunErrorDetails.public_access_bindings:type_name -> yandex.cloud.priv.iam.v1.ChangeTopLevelResourceDryRunErrorDetails.AccessBinding
	23, // 20: yandex.cloud.priv.iam.v1.ChangeTopLevelResourceDryRunErrorDetails.system_access_bindings:type_name -> yandex.cloud.priv.iam.v1.ChangeTopLevelResourceDryRunErrorDetails.AccessBinding
	25, // 21: yandex.cloud.priv.iam.v1.DeleteByTopLevelResourceRequest.top_level_resource:type_name -> yandex.cloud.priv.servicecontrol.v1.Resource
	25, // 22: yandex.cloud.priv.iam.v1.DeleteByTopLevelResourceMetadata.top_level_resource:type_name -> yandex.cloud.priv.servicecontrol.v1.Resource
	24, // 23: yandex.cloud.priv.iam.v1.DeleteByCloudResponse.deleted_resources_by_type:type_name -> yandex.cloud.priv.iam.v1.DeleteByCloudResponse.DeletedResourcesByTypeEntry
	3,  // 24: yandex.cloud.priv.iam.v1.AccessBindingService.ListAccessBindings:input_type -> yandex.cloud.priv.iam.v1.ListAccessBindingsRequest
	5,  // 25: yandex.cloud.priv.iam.v1.AccessBindingService.SetAccessBindings:input_type -> yandex.cloud.priv.iam.v1.SetAccessBindingsRequest
	7,  // 26: yandex.cloud.priv.iam.v1.AccessBindingService.UpdateAccessBindings:input_type -> yandex.cloud.priv.iam.v1.UpdateAccessBindingsRequest
	13, // 27: yandex.cloud.priv.iam.v1.AccessBindingService.CheckLikelyPubliclyAccessible:input_type -> yandex.cloud.priv.iam.v1.CheckLikelyPubliclyAccessibleRequest
	15, // 28: yandex.cloud.priv.iam.v1.AccessBindingService.ChangeTopLevelResource:input_type -> yandex.cloud.priv.iam.v1.ChangeTopLevelResourceRequest
	18, // 29: yandex.cloud.priv.iam.v1.AccessBindingService.DeleteByTopLevelResource:input_type -> yandex.cloud.priv.iam.v1.DeleteByTopLevelResourceRequest
	20, // 30: yandex.cloud.priv.iam.v1.AccessBindingService.DeleteByCloud:input_type -> yandex.cloud.priv.iam.v1.DeleteByCloudRequest
	4,  // 31: yandex.cloud.priv.iam.v1.AccessBindingService.ListAccessBindings:output_type -> yandex.cloud.priv.iam.v1.ListAccessBindingsResponse
	27, // 32: yandex.cloud.priv.iam.v1.AccessBindingService.SetAccessBindings:output_type -> yandex.cloud.priv.operation.Operation
	27, // 33: yandex.cloud.priv.iam.v1.AccessBindingService.UpdateAccessBindings:output_type -> yandex.cloud.priv.operation.Operation
	14, // 34: yandex.cloud.priv.iam.v1.AccessBindingService.CheckLikelyPubliclyAccessible:output_type -> yandex.cloud.priv.iam.v1.CheckLikelyPubliclyAccessibleResponse
	27, // 35: yandex.cloud.priv.iam.v1.AccessBindingService.ChangeTopLevelResource:output_type -> yandex.cloud.priv.operation.Operation
	27, // 36: yandex.cloud.priv.iam.v1.AccessBindingService.DeleteByTopLevelResource:output_type -> yandex.cloud.priv.operation.Operation
	27, // 37: yandex.cloud.priv.iam.v1.AccessBindingService.DeleteByCloud:output_type -> yandex.cloud.priv.operation.Operation
	31, // [31:38] is the sub-list for method output_type
	24, // [24:31] is the sub-list for method input_type
	24, // [24:24] is the sub-list for extension type_name
	24, // [24:24] is the sub-list for extension extendee
	0,  // [0:24] is the sub-list for field type_name
}

func init() { file_yandex_cloud_priv_iam_v1_access_binding_service_proto_init() }
func file_yandex_cloud_priv_iam_v1_access_binding_service_proto_init() {
	if File_yandex_cloud_priv_iam_v1_access_binding_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_yandex_cloud_priv_iam_v1_access_binding_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Subject); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_priv_iam_v1_access_binding_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccessBinding); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_priv_iam_v1_access_binding_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAccessBindingsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_priv_iam_v1_access_binding_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAccessBindingsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_priv_iam_v1_access_binding_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetAccessBindingsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_priv_iam_v1_access_binding_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetAccessBindingsMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_priv_iam_v1_access_binding_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAccessBindingsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_priv_iam_v1_access_binding_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAccessBindingsMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_priv_iam_v1_access_binding_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccessBindingDelta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_priv_iam_v1_access_binding_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccessBindingsOperationStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_priv_iam_v1_access_binding_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccessBindingsOperationDelta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_priv_iam_v1_access_binding_service_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BindingsOperationStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_priv_iam_v1_access_binding_service_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckLikelyPubliclyAccessibleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_priv_iam_v1_access_binding_service_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckLikelyPubliclyAccessibleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_priv_iam_v1_access_binding_service_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangeTopLevelResourceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_priv_iam_v1_access_binding_service_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangeTopLevelResourceMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_priv_iam_v1_access_binding_service_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangeTopLevelResourceDryRunErrorDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_priv_iam_v1_access_binding_service_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteByTopLevelResourceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_priv_iam_v1_access_binding_service_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteByTopLevelResourceMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_priv_iam_v1_access_binding_service_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteByCloudRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_priv_iam_v1_access_binding_service_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteByCloudMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_priv_iam_v1_access_binding_service_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteByCloudResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_priv_iam_v1_access_binding_service_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangeTopLevelResourceDryRunErrorDetails_AccessBinding); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_yandex_cloud_priv_iam_v1_access_binding_service_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   24,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_yandex_cloud_priv_iam_v1_access_binding_service_proto_goTypes,
		DependencyIndexes: file_yandex_cloud_priv_iam_v1_access_binding_service_proto_depIdxs,
		EnumInfos:         file_yandex_cloud_priv_iam_v1_access_binding_service_proto_enumTypes,
		MessageInfos:      file_yandex_cloud_priv_iam_v1_access_binding_service_proto_msgTypes,
	}.Build()
	File_yandex_cloud_priv_iam_v1_access_binding_service_proto = out.File
	file_yandex_cloud_priv_iam_v1_access_binding_service_proto_rawDesc = nil
	file_yandex_cloud_priv_iam_v1_access_binding_service_proto_goTypes = nil
	file_yandex_cloud_priv_iam_v1_access_binding_service_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// AccessBindingServiceClient is the client API for AccessBindingService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AccessBindingServiceClient interface {
	ListAccessBindings(ctx context.Context, in *ListAccessBindingsRequest, opts ...grpc.CallOption) (*ListAccessBindingsResponse, error)
	SetAccessBindings(ctx context.Context, in *SetAccessBindingsRequest, opts ...grpc.CallOption) (*operation.Operation, error)
	UpdateAccessBindings(ctx context.Context, in *UpdateAccessBindingsRequest, opts ...grpc.CallOption) (*operation.Operation, error)
	CheckLikelyPubliclyAccessible(ctx context.Context, in *CheckLikelyPubliclyAccessibleRequest, opts ...grpc.CallOption) (*CheckLikelyPubliclyAccessibleResponse, error)
	ChangeTopLevelResource(ctx context.Context, in *ChangeTopLevelResourceRequest, opts ...grpc.CallOption) (*operation.Operation, error)
	DeleteByTopLevelResource(ctx context.Context, in *DeleteByTopLevelResourceRequest, opts ...grpc.CallOption) (*operation.Operation, error)
	DeleteByCloud(ctx context.Context, in *DeleteByCloudRequest, opts ...grpc.CallOption) (*operation.Operation, error)
}

type accessBindingServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewAccessBindingServiceClient(cc grpc.ClientConnInterface) AccessBindingServiceClient {
	return &accessBindingServiceClient{cc}
}

func (c *accessBindingServiceClient) ListAccessBindings(ctx context.Context, in *ListAccessBindingsRequest, opts ...grpc.CallOption) (*ListAccessBindingsResponse, error) {
	out := new(ListAccessBindingsResponse)
	err := c.cc.Invoke(ctx, "/yandex.cloud.priv.iam.v1.AccessBindingService/ListAccessBindings", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accessBindingServiceClient) SetAccessBindings(ctx context.Context, in *SetAccessBindingsRequest, opts ...grpc.CallOption) (*operation.Operation, error) {
	out := new(operation.Operation)
	err := c.cc.Invoke(ctx, "/yandex.cloud.priv.iam.v1.AccessBindingService/SetAccessBindings", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accessBindingServiceClient) UpdateAccessBindings(ctx context.Context, in *UpdateAccessBindingsRequest, opts ...grpc.CallOption) (*operation.Operation, error) {
	out := new(operation.Operation)
	err := c.cc.Invoke(ctx, "/yandex.cloud.priv.iam.v1.AccessBindingService/UpdateAccessBindings", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accessBindingServiceClient) CheckLikelyPubliclyAccessible(ctx context.Context, in *CheckLikelyPubliclyAccessibleRequest, opts ...grpc.CallOption) (*CheckLikelyPubliclyAccessibleResponse, error) {
	out := new(CheckLikelyPubliclyAccessibleResponse)
	err := c.cc.Invoke(ctx, "/yandex.cloud.priv.iam.v1.AccessBindingService/CheckLikelyPubliclyAccessible", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accessBindingServiceClient) ChangeTopLevelResource(ctx context.Context, in *ChangeTopLevelResourceRequest, opts ...grpc.CallOption) (*operation.Operation, error) {
	out := new(operation.Operation)
	err := c.cc.Invoke(ctx, "/yandex.cloud.priv.iam.v1.AccessBindingService/ChangeTopLevelResource", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accessBindingServiceClient) DeleteByTopLevelResource(ctx context.Context, in *DeleteByTopLevelResourceRequest, opts ...grpc.CallOption) (*operation.Operation, error) {
	out := new(operation.Operation)
	err := c.cc.Invoke(ctx, "/yandex.cloud.priv.iam.v1.AccessBindingService/DeleteByTopLevelResource", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accessBindingServiceClient) DeleteByCloud(ctx context.Context, in *DeleteByCloudRequest, opts ...grpc.CallOption) (*operation.Operation, error) {
	out := new(operation.Operation)
	err := c.cc.Invoke(ctx, "/yandex.cloud.priv.iam.v1.AccessBindingService/DeleteByCloud", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AccessBindingServiceServer is the server API for AccessBindingService service.
type AccessBindingServiceServer interface {
	ListAccessBindings(context.Context, *ListAccessBindingsRequest) (*ListAccessBindingsResponse, error)
	SetAccessBindings(context.Context, *SetAccessBindingsRequest) (*operation.Operation, error)
	UpdateAccessBindings(context.Context, *UpdateAccessBindingsRequest) (*operation.Operation, error)
	CheckLikelyPubliclyAccessible(context.Context, *CheckLikelyPubliclyAccessibleRequest) (*CheckLikelyPubliclyAccessibleResponse, error)
	ChangeTopLevelResource(context.Context, *ChangeTopLevelResourceRequest) (*operation.Operation, error)
	DeleteByTopLevelResource(context.Context, *DeleteByTopLevelResourceRequest) (*operation.Operation, error)
	DeleteByCloud(context.Context, *DeleteByCloudRequest) (*operation.Operation, error)
}

// UnimplementedAccessBindingServiceServer can be embedded to have forward compatible implementations.
type UnimplementedAccessBindingServiceServer struct {
}

func (*UnimplementedAccessBindingServiceServer) ListAccessBindings(context.Context, *ListAccessBindingsRequest) (*ListAccessBindingsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListAccessBindings not implemented")
}
func (*UnimplementedAccessBindingServiceServer) SetAccessBindings(context.Context, *SetAccessBindingsRequest) (*operation.Operation, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetAccessBindings not implemented")
}
func (*UnimplementedAccessBindingServiceServer) UpdateAccessBindings(context.Context, *UpdateAccessBindingsRequest) (*operation.Operation, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateAccessBindings not implemented")
}
func (*UnimplementedAccessBindingServiceServer) CheckLikelyPubliclyAccessible(context.Context, *CheckLikelyPubliclyAccessibleRequest) (*CheckLikelyPubliclyAccessibleResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CheckLikelyPubliclyAccessible not implemented")
}
func (*UnimplementedAccessBindingServiceServer) ChangeTopLevelResource(context.Context, *ChangeTopLevelResourceRequest) (*operation.Operation, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ChangeTopLevelResource not implemented")
}
func (*UnimplementedAccessBindingServiceServer) DeleteByTopLevelResource(context.Context, *DeleteByTopLevelResourceRequest) (*operation.Operation, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteByTopLevelResource not implemented")
}
func (*UnimplementedAccessBindingServiceServer) DeleteByCloud(context.Context, *DeleteByCloudRequest) (*operation.Operation, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteByCloud not implemented")
}

func RegisterAccessBindingServiceServer(s *grpc.Server, srv AccessBindingServiceServer) {
	s.RegisterService(&_AccessBindingService_serviceDesc, srv)
}

func _AccessBindingService_ListAccessBindings_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListAccessBindingsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccessBindingServiceServer).ListAccessBindings(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/yandex.cloud.priv.iam.v1.AccessBindingService/ListAccessBindings",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccessBindingServiceServer).ListAccessBindings(ctx, req.(*ListAccessBindingsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AccessBindingService_SetAccessBindings_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetAccessBindingsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccessBindingServiceServer).SetAccessBindings(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/yandex.cloud.priv.iam.v1.AccessBindingService/SetAccessBindings",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccessBindingServiceServer).SetAccessBindings(ctx, req.(*SetAccessBindingsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AccessBindingService_UpdateAccessBindings_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateAccessBindingsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccessBindingServiceServer).UpdateAccessBindings(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/yandex.cloud.priv.iam.v1.AccessBindingService/UpdateAccessBindings",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccessBindingServiceServer).UpdateAccessBindings(ctx, req.(*UpdateAccessBindingsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AccessBindingService_CheckLikelyPubliclyAccessible_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CheckLikelyPubliclyAccessibleRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccessBindingServiceServer).CheckLikelyPubliclyAccessible(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/yandex.cloud.priv.iam.v1.AccessBindingService/CheckLikelyPubliclyAccessible",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccessBindingServiceServer).CheckLikelyPubliclyAccessible(ctx, req.(*CheckLikelyPubliclyAccessibleRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AccessBindingService_ChangeTopLevelResource_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ChangeTopLevelResourceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccessBindingServiceServer).ChangeTopLevelResource(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/yandex.cloud.priv.iam.v1.AccessBindingService/ChangeTopLevelResource",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccessBindingServiceServer).ChangeTopLevelResource(ctx, req.(*ChangeTopLevelResourceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AccessBindingService_DeleteByTopLevelResource_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteByTopLevelResourceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccessBindingServiceServer).DeleteByTopLevelResource(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/yandex.cloud.priv.iam.v1.AccessBindingService/DeleteByTopLevelResource",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccessBindingServiceServer).DeleteByTopLevelResource(ctx, req.(*DeleteByTopLevelResourceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AccessBindingService_DeleteByCloud_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteByCloudRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccessBindingServiceServer).DeleteByCloud(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/yandex.cloud.priv.iam.v1.AccessBindingService/DeleteByCloud",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccessBindingServiceServer).DeleteByCloud(ctx, req.(*DeleteByCloudRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _AccessBindingService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "yandex.cloud.priv.iam.v1.AccessBindingService",
	HandlerType: (*AccessBindingServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListAccessBindings",
			Handler:    _AccessBindingService_ListAccessBindings_Handler,
		},
		{
			MethodName: "SetAccessBindings",
			Handler:    _AccessBindingService_SetAccessBindings_Handler,
		},
		{
			MethodName: "UpdateAccessBindings",
			Handler:    _AccessBindingService_UpdateAccessBindings_Handler,
		},
		{
			MethodName: "CheckLikelyPubliclyAccessible",
			Handler:    _AccessBindingService_CheckLikelyPubliclyAccessible_Handler,
		},
		{
			MethodName: "ChangeTopLevelResource",
			Handler:    _AccessBindingService_ChangeTopLevelResource_Handler,
		},
		{
			MethodName: "DeleteByTopLevelResource",
			Handler:    _AccessBindingService_DeleteByTopLevelResource_Handler,
		},
		{
			MethodName: "DeleteByCloud",
			Handler:    _AccessBindingService_DeleteByCloud_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "yandex/cloud/priv/iam/v1/access_binding_service.proto",
}
