// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.21.3
// source: yandex/cloud/priv/iam/v1/restriction_type_service.proto

package iam

import (
	_ "github.com/doublecloud/tross/cloud/bitbucket/common-api/yandex/cloud/api"
	_ "github.com/doublecloud/tross/cloud/bitbucket/private-api/yandex/cloud/priv"
	access "github.com/doublecloud/tross/cloud/bitbucket/private-api/yandex/cloud/priv/access"
	operation "github.com/doublecloud/tross/cloud/bitbucket/private-api/yandex/cloud/priv/operation"
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	fieldmaskpb "google.golang.org/protobuf/types/known/fieldmaskpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetRestrictionTypeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RestrictionTypeId string `protobuf:"bytes,1,opt,name=restriction_type_id,json=restrictionTypeId,proto3" json:"restriction_type_id,omitempty"`
}

func (x *GetRestrictionTypeRequest) Reset() {
	*x = GetRestrictionTypeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_priv_iam_v1_restriction_type_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRestrictionTypeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRestrictionTypeRequest) ProtoMessage() {}

func (x *GetRestrictionTypeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_priv_iam_v1_restriction_type_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRestrictionTypeRequest.ProtoReflect.Descriptor instead.
func (*GetRestrictionTypeRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_priv_iam_v1_restriction_type_service_proto_rawDescGZIP(), []int{0}
}

func (x *GetRestrictionTypeRequest) GetRestrictionTypeId() string {
	if x != nil {
		return x.RestrictionTypeId
	}
	return ""
}

type ListRestrictionTypesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RestrictionKind RestrictionKind `protobuf:"varint,1,opt,name=restriction_kind,json=restrictionKind,proto3,enum=yandex.cloud.priv.iam.v1.RestrictionKind" json:"restriction_kind,omitempty"`
	PageSize        int64           `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	PageToken       string          `protobuf:"bytes,4,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
}

func (x *ListRestrictionTypesRequest) Reset() {
	*x = ListRestrictionTypesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_priv_iam_v1_restriction_type_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListRestrictionTypesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRestrictionTypesRequest) ProtoMessage() {}

func (x *ListRestrictionTypesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_priv_iam_v1_restriction_type_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRestrictionTypesRequest.ProtoReflect.Descriptor instead.
func (*ListRestrictionTypesRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_priv_iam_v1_restriction_type_service_proto_rawDescGZIP(), []int{1}
}

func (x *ListRestrictionTypesRequest) GetRestrictionKind() RestrictionKind {
	if x != nil {
		return x.RestrictionKind
	}
	return RestrictionKind_RESTRICTION_KIND_UNSPECIFIED
}

func (x *ListRestrictionTypesRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListRestrictionTypesRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

type ListRestrictionTypesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RestrictionTypes []*RestrictionType `protobuf:"bytes,1,rep,name=restriction_types,json=restrictionTypes,proto3" json:"restriction_types,omitempty"`
	NextPageToken    string             `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
}

func (x *ListRestrictionTypesResponse) Reset() {
	*x = ListRestrictionTypesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_priv_iam_v1_restriction_type_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListRestrictionTypesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRestrictionTypesResponse) ProtoMessage() {}

func (x *ListRestrictionTypesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_priv_iam_v1_restriction_type_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRestrictionTypesResponse.ProtoReflect.Descriptor instead.
func (*ListRestrictionTypesResponse) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_priv_iam_v1_restriction_type_service_proto_rawDescGZIP(), []int{2}
}

func (x *ListRestrictionTypesResponse) GetRestrictionTypes() []*RestrictionType {
	if x != nil {
		return x.RestrictionTypes
	}
	return nil
}

func (x *ListRestrictionTypesResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

type CreateRestrictionTypeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RestrictionTypeId string `protobuf:"bytes,1,opt,name=restriction_type_id,json=restrictionTypeId,proto3" json:"restriction_type_id,omitempty"`
	// Types that are assignable to Type:
	//
	//	*CreateRestrictionTypeRequest_BlockPermissions_
	Type isCreateRestrictionTypeRequest_Type `protobuf_oneof:"type"`
}

func (x *CreateRestrictionTypeRequest) Reset() {
	*x = CreateRestrictionTypeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_priv_iam_v1_restriction_type_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRestrictionTypeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRestrictionTypeRequest) ProtoMessage() {}

func (x *CreateRestrictionTypeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_priv_iam_v1_restriction_type_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRestrictionTypeRequest.ProtoReflect.Descriptor instead.
func (*CreateRestrictionTypeRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_priv_iam_v1_restriction_type_service_proto_rawDescGZIP(), []int{3}
}

func (x *CreateRestrictionTypeRequest) GetRestrictionTypeId() string {
	if x != nil {
		return x.RestrictionTypeId
	}
	return ""
}

func (m *CreateRestrictionTypeRequest) GetType() isCreateRestrictionTypeRequest_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (x *CreateRestrictionTypeRequest) GetBlockPermissions() *CreateRestrictionTypeRequest_BlockPermissions {
	if x, ok := x.GetType().(*CreateRestrictionTypeRequest_BlockPermissions_); ok {
		return x.BlockPermissions
	}
	return nil
}

type isCreateRestrictionTypeRequest_Type interface {
	isCreateRestrictionTypeRequest_Type()
}

type CreateRestrictionTypeRequest_BlockPermissions_ struct {
	BlockPermissions *CreateRestrictionTypeRequest_BlockPermissions `protobuf:"bytes,2,opt,name=block_permissions,json=blockPermissions,proto3,oneof"`
}

func (*CreateRestrictionTypeRequest_BlockPermissions_) isCreateRestrictionTypeRequest_Type() {}

type CreateRestrictionTypeMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RestrictionTypeId string `protobuf:"bytes,1,opt,name=restriction_type_id,json=restrictionTypeId,proto3" json:"restriction_type_id,omitempty"`
}

func (x *CreateRestrictionTypeMetadata) Reset() {
	*x = CreateRestrictionTypeMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_priv_iam_v1_restriction_type_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRestrictionTypeMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRestrictionTypeMetadata) ProtoMessage() {}

func (x *CreateRestrictionTypeMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_priv_iam_v1_restriction_type_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRestrictionTypeMetadata.ProtoReflect.Descriptor instead.
func (*CreateRestrictionTypeMetadata) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_priv_iam_v1_restriction_type_service_proto_rawDescGZIP(), []int{4}
}

func (x *CreateRestrictionTypeMetadata) GetRestrictionTypeId() string {
	if x != nil {
		return x.RestrictionTypeId
	}
	return ""
}

type UpdateRestrictionTypeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RestrictionTypeId string                 `protobuf:"bytes,1,opt,name=restriction_type_id,json=restrictionTypeId,proto3" json:"restriction_type_id,omitempty"`
	UpdateMask        *fieldmaskpb.FieldMask `protobuf:"bytes,2,opt,name=update_mask,json=updateMask,proto3" json:"update_mask,omitempty"`
	// Types that are assignable to Type:
	//
	//	*UpdateRestrictionTypeRequest_BlockPermissions_
	Type isUpdateRestrictionTypeRequest_Type `protobuf_oneof:"type"`
}

func (x *UpdateRestrictionTypeRequest) Reset() {
	*x = UpdateRestrictionTypeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_priv_iam_v1_restriction_type_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateRestrictionTypeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRestrictionTypeRequest) ProtoMessage() {}

func (x *UpdateRestrictionTypeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_priv_iam_v1_restriction_type_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRestrictionTypeRequest.ProtoReflect.Descriptor instead.
func (*UpdateRestrictionTypeRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_priv_iam_v1_restriction_type_service_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateRestrictionTypeRequest) GetRestrictionTypeId() string {
	if x != nil {
		return x.RestrictionTypeId
	}
	return ""
}

func (x *UpdateRestrictionTypeRequest) GetUpdateMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.UpdateMask
	}
	return nil
}

func (m *UpdateRestrictionTypeRequest) GetType() isUpdateRestrictionTypeRequest_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (x *UpdateRestrictionTypeRequest) GetBlockPermissions() *UpdateRestrictionTypeRequest_BlockPermissions {
	if x, ok := x.GetType().(*UpdateRestrictionTypeRequest_BlockPermissions_); ok {
		return x.BlockPermissions
	}
	return nil
}

type isUpdateRestrictionTypeRequest_Type interface {
	isUpdateRestrictionTypeRequest_Type()
}

type UpdateRestrictionTypeRequest_BlockPermissions_ struct {
	BlockPermissions *UpdateRestrictionTypeRequest_BlockPermissions `protobuf:"bytes,3,opt,name=block_permissions,json=blockPermissions,proto3,oneof"`
}

func (*UpdateRestrictionTypeRequest_BlockPermissions_) isUpdateRestrictionTypeRequest_Type() {}

type UpdateRestrictionTypeMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RestrictionTypeId string `protobuf:"bytes,1,opt,name=restriction_type_id,json=restrictionTypeId,proto3" json:"restriction_type_id,omitempty"`
}

func (x *UpdateRestrictionTypeMetadata) Reset() {
	*x = UpdateRestrictionTypeMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_priv_iam_v1_restriction_type_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateRestrictionTypeMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRestrictionTypeMetadata) ProtoMessage() {}

func (x *UpdateRestrictionTypeMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_priv_iam_v1_restriction_type_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRestrictionTypeMetadata.ProtoReflect.Descriptor instead.
func (*UpdateRestrictionTypeMetadata) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_priv_iam_v1_restriction_type_service_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateRestrictionTypeMetadata) GetRestrictionTypeId() string {
	if x != nil {
		return x.RestrictionTypeId
	}
	return ""
}

type ListRestrictionTypeAccessBindingsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RestrictionTypeId string `protobuf:"bytes,1,opt,name=restriction_type_id,json=restrictionTypeId,proto3" json:"restriction_type_id,omitempty"`
	PageSize          int64  `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	PageToken         string `protobuf:"bytes,3,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
}

func (x *ListRestrictionTypeAccessBindingsRequest) Reset() {
	*x = ListRestrictionTypeAccessBindingsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_priv_iam_v1_restriction_type_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListRestrictionTypeAccessBindingsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRestrictionTypeAccessBindingsRequest) ProtoMessage() {}

func (x *ListRestrictionTypeAccessBindingsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_priv_iam_v1_restriction_type_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRestrictionTypeAccessBindingsRequest.ProtoReflect.Descriptor instead.
func (*ListRestrictionTypeAccessBindingsRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_priv_iam_v1_restriction_type_service_proto_rawDescGZIP(), []int{7}
}

func (x *ListRestrictionTypeAccessBindingsRequest) GetRestrictionTypeId() string {
	if x != nil {
		return x.RestrictionTypeId
	}
	return ""
}

func (x *ListRestrictionTypeAccessBindingsRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListRestrictionTypeAccessBindingsRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

type SetRestrictionTypeAccessBindingsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RestrictionTypeId string                  `protobuf:"bytes,1,opt,name=restriction_type_id,json=restrictionTypeId,proto3" json:"restriction_type_id,omitempty"`
	AccessBindings    []*access.AccessBinding `protobuf:"bytes,2,rep,name=access_bindings,json=accessBindings,proto3" json:"access_bindings,omitempty"`
}

func (x *SetRestrictionTypeAccessBindingsRequest) Reset() {
	*x = SetRestrictionTypeAccessBindingsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_priv_iam_v1_restriction_type_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetRestrictionTypeAccessBindingsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetRestrictionTypeAccessBindingsRequest) ProtoMessage() {}

func (x *SetRestrictionTypeAccessBindingsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_priv_iam_v1_restriction_type_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetRestrictionTypeAccessBindingsRequest.ProtoReflect.Descriptor instead.
func (*SetRestrictionTypeAccessBindingsRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_priv_iam_v1_restriction_type_service_proto_rawDescGZIP(), []int{8}
}

func (x *SetRestrictionTypeAccessBindingsRequest) GetRestrictionTypeId() string {
	if x != nil {
		return x.RestrictionTypeId
	}
	return ""
}

func (x *SetRestrictionTypeAccessBindingsRequest) GetAccessBindings() []*access.AccessBinding {
	if x != nil {
		return x.AccessBindings
	}
	return nil
}

type SetRestrictionTypeAccessBindingsMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RestrictionTypeId string                  `protobuf:"bytes,1,opt,name=restriction_type_id,json=restrictionTypeId,proto3" json:"restriction_type_id,omitempty"`
	AccessBindings    []*access.AccessBinding `protobuf:"bytes,2,rep,name=access_bindings,json=accessBindings,proto3" json:"access_bindings,omitempty"`
}

func (x *SetRestrictionTypeAccessBindingsMetadata) Reset() {
	*x = SetRestrictionTypeAccessBindingsMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_priv_iam_v1_restriction_type_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetRestrictionTypeAccessBindingsMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetRestrictionTypeAccessBindingsMetadata) ProtoMessage() {}

func (x *SetRestrictionTypeAccessBindingsMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_priv_iam_v1_restriction_type_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetRestrictionTypeAccessBindingsMetadata.ProtoReflect.Descriptor instead.
func (*SetRestrictionTypeAccessBindingsMetadata) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_priv_iam_v1_restriction_type_service_proto_rawDescGZIP(), []int{9}
}

func (x *SetRestrictionTypeAccessBindingsMetadata) GetRestrictionTypeId() string {
	if x != nil {
		return x.RestrictionTypeId
	}
	return ""
}

func (x *SetRestrictionTypeAccessBindingsMetadata) GetAccessBindings() []*access.AccessBinding {
	if x != nil {
		return x.AccessBindings
	}
	return nil
}

type UpdateRestrictionTypeAccessBindingsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RestrictionTypeId   string                       `protobuf:"bytes,1,opt,name=restriction_type_id,json=restrictionTypeId,proto3" json:"restriction_type_id,omitempty"`
	AccessBindingDeltas []*access.AccessBindingDelta `protobuf:"bytes,2,rep,name=access_binding_deltas,json=accessBindingDeltas,proto3" json:"access_binding_deltas,omitempty"`
}

func (x *UpdateRestrictionTypeAccessBindingsRequest) Reset() {
	*x = UpdateRestrictionTypeAccessBindingsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_priv_iam_v1_restriction_type_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateRestrictionTypeAccessBindingsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRestrictionTypeAccessBindingsRequest) ProtoMessage() {}

func (x *UpdateRestrictionTypeAccessBindingsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_priv_iam_v1_restriction_type_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRestrictionTypeAccessBindingsRequest.ProtoReflect.Descriptor instead.
func (*UpdateRestrictionTypeAccessBindingsRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_priv_iam_v1_restriction_type_service_proto_rawDescGZIP(), []int{10}
}

func (x *UpdateRestrictionTypeAccessBindingsRequest) GetRestrictionTypeId() string {
	if x != nil {
		return x.RestrictionTypeId
	}
	return ""
}

func (x *UpdateRestrictionTypeAccessBindingsRequest) GetAccessBindingDeltas() []*access.AccessBindingDelta {
	if x != nil {
		return x.AccessBindingDeltas
	}
	return nil
}

type UpdateRestrictionTypeAccessBindingsMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RestrictionTypeId   string                       `protobuf:"bytes,1,opt,name=restriction_type_id,json=restrictionTypeId,proto3" json:"restriction_type_id,omitempty"`
	AccessBindingDeltas []*access.AccessBindingDelta `protobuf:"bytes,2,rep,name=access_binding_deltas,json=accessBindingDeltas,proto3" json:"access_binding_deltas,omitempty"`
}

func (x *UpdateRestrictionTypeAccessBindingsMetadata) Reset() {
	*x = UpdateRestrictionTypeAccessBindingsMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_priv_iam_v1_restriction_type_service_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateRestrictionTypeAccessBindingsMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRestrictionTypeAccessBindingsMetadata) ProtoMessage() {}

func (x *UpdateRestrictionTypeAccessBindingsMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_priv_iam_v1_restriction_type_service_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRestrictionTypeAccessBindingsMetadata.ProtoReflect.Descriptor instead.
func (*UpdateRestrictionTypeAccessBindingsMetadata) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_priv_iam_v1_restriction_type_service_proto_rawDescGZIP(), []int{11}
}

func (x *UpdateRestrictionTypeAccessBindingsMetadata) GetRestrictionTypeId() string {
	if x != nil {
		return x.RestrictionTypeId
	}
	return ""
}

func (x *UpdateRestrictionTypeAccessBindingsMetadata) GetAccessBindingDeltas() []*access.AccessBindingDelta {
	if x != nil {
		return x.AccessBindingDeltas
	}
	return nil
}

type ListRestrictionTypeOperationsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RestrictionTypeId string `protobuf:"bytes,1,opt,name=restriction_type_id,json=restrictionTypeId,proto3" json:"restriction_type_id,omitempty"`
	PageSize          int64  `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	PageToken         string `protobuf:"bytes,3,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
}

func (x *ListRestrictionTypeOperationsRequest) Reset() {
	*x = ListRestrictionTypeOperationsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_priv_iam_v1_restriction_type_service_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListRestrictionTypeOperationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRestrictionTypeOperationsRequest) ProtoMessage() {}

func (x *ListRestrictionTypeOperationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_priv_iam_v1_restriction_type_service_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRestrictionTypeOperationsRequest.ProtoReflect.Descriptor instead.
func (*ListRestrictionTypeOperationsRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_priv_iam_v1_restriction_type_service_proto_rawDescGZIP(), []int{12}
}

func (x *ListRestrictionTypeOperationsRequest) GetRestrictionTypeId() string {
	if x != nil {
		return x.RestrictionTypeId
	}
	return ""
}

func (x *ListRestrictionTypeOperationsRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListRestrictionTypeOperationsRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

type ListRestrictionTypeOperationsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Operations    []*operation.Operation `protobuf:"bytes,1,rep,name=operations,proto3" json:"operations,omitempty"`
	NextPageToken string                 `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
}

func (x *ListRestrictionTypeOperationsResponse) Reset() {
	*x = ListRestrictionTypeOperationsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_priv_iam_v1_restriction_type_service_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListRestrictionTypeOperationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRestrictionTypeOperationsResponse) ProtoMessage() {}

func (x *ListRestrictionTypeOperationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_priv_iam_v1_restriction_type_service_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRestrictionTypeOperationsResponse.ProtoReflect.Descriptor instead.
func (*ListRestrictionTypeOperationsResponse) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_priv_iam_v1_restriction_type_service_proto_rawDescGZIP(), []int{13}
}

func (x *ListRestrictionTypeOperationsResponse) GetOperations() []*operation.Operation {
	if x != nil {
		return x.Operations
	}
	return nil
}

func (x *ListRestrictionTypeOperationsResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

type CreateRestrictionTypeRequest_BlockPermissions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoleMask                   string               `protobuf:"bytes,1,opt,name=role_mask,json=roleMask,proto3" json:"role_mask,omitempty"`
	DirectMask                 bool                 `protobuf:"varint,2,opt,name=direct_mask,json=directMask,proto3" json:"direct_mask,omitempty"`
	ServicesToStop             []string             `protobuf:"bytes,3,rep,name=services_to_stop,json=servicesToStop,proto3" json:"services_to_stop,omitempty"`
	ResourcesToStop            []string             `protobuf:"bytes,4,rep,name=resources_to_stop,json=resourcesToStop,proto3" json:"resources_to_stop,omitempty"`
	StopDelay                  *durationpb.Duration `protobuf:"bytes,5,opt,name=stop_delay,json=stopDelay,proto3" json:"stop_delay,omitempty"`
	DeletionInitiationInterval *durationpb.Duration `protobuf:"bytes,6,opt,name=deletion_initiation_interval,json=deletionInitiationInterval,proto3" json:"deletion_initiation_interval,omitempty"`
	DeletionDelay              *durationpb.Duration `protobuf:"bytes,7,opt,name=deletion_delay,json=deletionDelay,proto3" json:"deletion_delay,omitempty"`
}

func (x *CreateRestrictionTypeRequest_BlockPermissions) Reset() {
	*x = CreateRestrictionTypeRequest_BlockPermissions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_priv_iam_v1_restriction_type_service_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRestrictionTypeRequest_BlockPermissions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRestrictionTypeRequest_BlockPermissions) ProtoMessage() {}

func (x *CreateRestrictionTypeRequest_BlockPermissions) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_priv_iam_v1_restriction_type_service_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRestrictionTypeRequest_BlockPermissions.ProtoReflect.Descriptor instead.
func (*CreateRestrictionTypeRequest_BlockPermissions) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_priv_iam_v1_restriction_type_service_proto_rawDescGZIP(), []int{3, 0}
}

func (x *CreateRestrictionTypeRequest_BlockPermissions) GetRoleMask() string {
	if x != nil {
		return x.RoleMask
	}
	return ""
}

func (x *CreateRestrictionTypeRequest_BlockPermissions) GetDirectMask() bool {
	if x != nil {
		return x.DirectMask
	}
	return false
}

func (x *CreateRestrictionTypeRequest_BlockPermissions) GetServicesToStop() []string {
	if x != nil {
		return x.ServicesToStop
	}
	return nil
}

func (x *CreateRestrictionTypeRequest_BlockPermissions) GetResourcesToStop() []string {
	if x != nil {
		return x.ResourcesToStop
	}
	return nil
}

func (x *CreateRestrictionTypeRequest_BlockPermissions) GetStopDelay() *durationpb.Duration {
	if x != nil {
		return x.StopDelay
	}
	return nil
}

func (x *CreateRestrictionTypeRequest_BlockPermissions) GetDeletionInitiationInterval() *durationpb.Duration {
	if x != nil {
		return x.DeletionInitiationInterval
	}
	return nil
}

func (x *CreateRestrictionTypeRequest_BlockPermissions) GetDeletionDelay() *durationpb.Duration {
	if x != nil {
		return x.DeletionDelay
	}
	return nil
}

type UpdateRestrictionTypeRequest_BlockPermissions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoleMask                   string               `protobuf:"bytes,1,opt,name=role_mask,json=roleMask,proto3" json:"role_mask,omitempty"`
	DirectMask                 bool                 `protobuf:"varint,2,opt,name=direct_mask,json=directMask,proto3" json:"direct_mask,omitempty"`
	ServicesToStop             []string             `protobuf:"bytes,3,rep,name=services_to_stop,json=servicesToStop,proto3" json:"services_to_stop,omitempty"`
	ResourcesToStop            []string             `protobuf:"bytes,4,rep,name=resources_to_stop,json=resourcesToStop,proto3" json:"resources_to_stop,omitempty"`
	StopDelay                  *durationpb.Duration `protobuf:"bytes,5,opt,name=stop_delay,json=stopDelay,proto3" json:"stop_delay,omitempty"`
	DeletionInitiationInterval *durationpb.Duration `protobuf:"bytes,6,opt,name=deletion_initiation_interval,json=deletionInitiationInterval,proto3" json:"deletion_initiation_interval,omitempty"`
	DeletionDelay              *durationpb.Duration `protobuf:"bytes,7,opt,name=deletion_delay,json=deletionDelay,proto3" json:"deletion_delay,omitempty"`
}

func (x *UpdateRestrictionTypeRequest_BlockPermissions) Reset() {
	*x = UpdateRestrictionTypeRequest_BlockPermissions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_priv_iam_v1_restriction_type_service_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateRestrictionTypeRequest_BlockPermissions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRestrictionTypeRequest_BlockPermissions) ProtoMessage() {}

func (x *UpdateRestrictionTypeRequest_BlockPermissions) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_priv_iam_v1_restriction_type_service_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRestrictionTypeRequest_BlockPermissions.ProtoReflect.Descriptor instead.
func (*UpdateRestrictionTypeRequest_BlockPermissions) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_priv_iam_v1_restriction_type_service_proto_rawDescGZIP(), []int{5, 0}
}

func (x *UpdateRestrictionTypeRequest_BlockPermissions) GetRoleMask() string {
	if x != nil {
		return x.RoleMask
	}
	return ""
}

func (x *UpdateRestrictionTypeRequest_BlockPermissions) GetDirectMask() bool {
	if x != nil {
		return x.DirectMask
	}
	return false
}

func (x *UpdateRestrictionTypeRequest_BlockPermissions) GetServicesToStop() []string {
	if x != nil {
		return x.ServicesToStop
	}
	return nil
}

func (x *UpdateRestrictionTypeRequest_BlockPermissions) GetResourcesToStop() []string {
	if x != nil {
		return x.ResourcesToStop
	}
	return nil
}

func (x *UpdateRestrictionTypeRequest_BlockPermissions) GetStopDelay() *durationpb.Duration {
	if x != nil {
		return x.StopDelay
	}
	return nil
}

func (x *UpdateRestrictionTypeRequest_BlockPermissions) GetDeletionInitiationInterval() *durationpb.Duration {
	if x != nil {
		return x.DeletionInitiationInterval
	}
	return nil
}

func (x *UpdateRestrictionTypeRequest_BlockPermissions) GetDeletionDelay() *durationpb.Duration {
	if x != nil {
		return x.DeletionDelay
	}
	return nil
}

var File_yandex_cloud_priv_iam_v1_restriction_type_service_proto protoreflect.FileDescriptor

var file_yandex_cloud_priv_iam_v1_restriction_type_service_proto_rawDesc = []byte{
	0x0a, 0x37, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x70,
	0x72, 0x69, 0x76, 0x2f, 0x69, 0x61, 0x6d, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x65, 0x73, 0x74, 0x72,
	0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x18, 0x79, 0x61, 0x6e, 0x64, 0x65,
	0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x2e, 0x69, 0x61, 0x6d,
	0x2e, 0x76, 0x31, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2f, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x25, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2f,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x70, 0x72, 0x69, 0x76, 0x2f, 0x61, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x2f, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2f,
	0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x70, 0x72, 0x69,
	0x76, 0x2f, 0x69, 0x61, 0x6d, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x2b, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x70, 0x72,
	0x69, 0x76, 0x2f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x6f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x22, 0x79, 0x61,
	0x6e, 0x64, 0x65, 0x78, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x70, 0x72, 0x69, 0x76, 0x2f,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x5a, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3d, 0x0a,
	0x13, 0x72, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0d, 0xa8, 0x89, 0x31, 0x01,
	0xca, 0x89, 0x31, 0x05, 0x3c, 0x3d, 0x31, 0x30, 0x30, 0x52, 0x11, 0x72, 0x65, 0x73, 0x74, 0x72,
	0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x22, 0xc7, 0x01, 0x0a,
	0x1b, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x54, 0x79, 0x70, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x54, 0x0a, 0x10,
	0x72, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6b, 0x69, 0x6e, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x29, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x76,
	0x31, 0x2e, 0x52, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4b, 0x69, 0x6e,
	0x64, 0x52, 0x0f, 0x72, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4b, 0x69,
	0x6e, 0x64, 0x12, 0x27, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x42, 0x0a, 0xba, 0x89, 0x31, 0x06, 0x30, 0x2d, 0x31, 0x30, 0x30,
	0x30, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x29, 0x0a, 0x0a, 0x70,
	0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x0a, 0xca, 0x89, 0x31, 0x06, 0x3c, 0x3d, 0x32, 0x30, 0x30, 0x30, 0x52, 0x09, 0x70, 0x61, 0x67,
	0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x9e, 0x01, 0x0a, 0x1c, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x56, 0x0a, 0x11, 0x72, 0x65, 0x73, 0x74, 0x72,
	0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x29, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65,
	0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x10, 0x72,
	0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x73, 0x12,
	0x26, 0x0a, 0x0f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61,
	0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0xd8, 0x05, 0x0a, 0x1c, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3d, 0x0a, 0x13, 0x72, 0x65, 0x73, 0x74,
	0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0d, 0xa8, 0x89, 0x31, 0x01, 0xca, 0x89, 0x31, 0x05, 0x3c,
	0x3d, 0x31, 0x30, 0x30, 0x52, 0x11, 0x72, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x76, 0x0a, 0x11, 0x62, 0x6c, 0x6f, 0x63, 0x6b,
	0x5f, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x47, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
	0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x48, 0x00, 0x52, 0x10, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x1a,
	0xf2, 0x03, 0x0a, 0x10, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x73, 0x12, 0x2a, 0x0a, 0x09, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x6d, 0x61, 0x73,
	0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0d, 0xa8, 0x89, 0x31, 0x01, 0xca, 0x89, 0x31,
	0x05, 0x3c, 0x3d, 0x31, 0x30, 0x30, 0x52, 0x08, 0x72, 0x6f, 0x6c, 0x65, 0x4d, 0x61, 0x73, 0x6b,
	0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x4d, 0x61, 0x73,
	0x6b, 0x12, 0x3c, 0x0a, 0x10, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x5f, 0x74, 0x6f,
	0x5f, 0x73, 0x74, 0x6f, 0x70, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x42, 0x12, 0xc2, 0x89, 0x31,
	0x05, 0x3c, 0x3d, 0x31, 0x30, 0x30, 0xca, 0x89, 0x31, 0x05, 0x3c, 0x3d, 0x31, 0x30, 0x30, 0x52,
	0x0e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x54, 0x6f, 0x53, 0x74, 0x6f, 0x70, 0x12,
	0x3e, 0x0a, 0x11, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x5f, 0x74, 0x6f, 0x5f,
	0x73, 0x74, 0x6f, 0x70, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x42, 0x12, 0xc2, 0x89, 0x31, 0x05,
	0x3c, 0x3d, 0x31, 0x30, 0x30, 0xca, 0x89, 0x31, 0x05, 0x3c, 0x3d, 0x31, 0x30, 0x30, 0x52, 0x0f,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x54, 0x6f, 0x53, 0x74, 0x6f, 0x70, 0x12,
	0x4c, 0x0a, 0x0a, 0x73, 0x74, 0x6f, 0x70, 0x5f, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x12,
	0xba, 0x89, 0x31, 0x0e, 0x30, 0x73, 0x2d, 0x34, 0x32, 0x39, 0x31, 0x36, 0x36, 0x30, 0x38, 0x30,
	0x30, 0x73, 0x52, 0x09, 0x73, 0x74, 0x6f, 0x70, 0x44, 0x65, 0x6c, 0x61, 0x79, 0x12, 0x6f, 0x0a,
	0x1c, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x12,
	0xba, 0x89, 0x31, 0x0e, 0x30, 0x73, 0x2d, 0x34, 0x32, 0x39, 0x31, 0x36, 0x36, 0x30, 0x38, 0x30,
	0x30, 0x73, 0x52, 0x1a, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x69, 0x74,
	0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x12, 0x54,
	0x0a, 0x0e, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x65, 0x6c, 0x61, 0x79,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x42, 0x12, 0xba, 0x89, 0x31, 0x0e, 0x30, 0x73, 0x2d, 0x34, 0x32, 0x39, 0x31, 0x36, 0x36,
	0x30, 0x38, 0x30, 0x30, 0x73, 0x52, 0x0d, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x44,
	0x65, 0x6c, 0x61, 0x79, 0x42, 0x0c, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x04, 0x80, 0x83,
	0x31, 0x01, 0x22, 0x4f, 0x0a, 0x1d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x74,
	0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x12, 0x2e, 0x0a, 0x13, 0x72, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x11, 0x72, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70,
	0x65, 0x49, 0x64, 0x22, 0x91, 0x06, 0x0a, 0x1c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x3d, 0x0a, 0x13, 0x72, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x0d, 0xa8, 0x89, 0x31, 0x01, 0xca, 0x89, 0x31, 0x05, 0x3c, 0x3d, 0x31, 0x30, 0x30,
	0x52, 0x11, 0x72, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70,
	0x65, 0x49, 0x64, 0x12, 0x3b, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x6d, 0x61,
	0x73, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64,
	0x4d, 0x61, 0x73, 0x6b, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x73, 0x6b,
	0x12, 0x76, 0x0a, 0x11, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x47, 0x2e, 0x79, 0x61,
	0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x2e,
	0x69, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x73, 0x48, 0x00, 0x52, 0x10, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x50, 0x65, 0x72,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0xee, 0x03, 0x0a, 0x10, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x26, 0x0a,
	0x09, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x09, 0xca, 0x89, 0x31, 0x05, 0x3c, 0x3d, 0x31, 0x30, 0x30, 0x52, 0x08, 0x72, 0x6f, 0x6c,
	0x65, 0x4d, 0x61, 0x73, 0x6b, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x5f,
	0x6d, 0x61, 0x73, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x64, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x4d, 0x61, 0x73, 0x6b, 0x12, 0x3c, 0x0a, 0x10, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x5f, 0x74, 0x6f, 0x5f, 0x73, 0x74, 0x6f, 0x70, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09,
	0x42, 0x12, 0xc2, 0x89, 0x31, 0x05, 0x3c, 0x3d, 0x31, 0x30, 0x30, 0xca, 0x89, 0x31, 0x05, 0x3c,
	0x3d, 0x31, 0x30, 0x30, 0x52, 0x0e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x54, 0x6f,
	0x53, 0x74, 0x6f, 0x70, 0x12, 0x3e, 0x0a, 0x11, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x73, 0x5f, 0x74, 0x6f, 0x5f, 0x73, 0x74, 0x6f, 0x70, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x42,
	0x12, 0xc2, 0x89, 0x31, 0x05, 0x3c, 0x3d, 0x31, 0x30, 0x30, 0xca, 0x89, 0x31, 0x05, 0x3c, 0x3d,
	0x31, 0x30, 0x30, 0x52, 0x0f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x54, 0x6f,
	0x53, 0x74, 0x6f, 0x70, 0x12, 0x4c, 0x0a, 0x0a, 0x73, 0x74, 0x6f, 0x70, 0x5f, 0x64, 0x65, 0x6c,
	0x61, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x42, 0x12, 0xba, 0x89, 0x31, 0x0e, 0x30, 0x73, 0x2d, 0x34, 0x32, 0x39, 0x31,
	0x36, 0x36, 0x30, 0x38, 0x30, 0x30, 0x73, 0x52, 0x09, 0x73, 0x74, 0x6f, 0x70, 0x44, 0x65, 0x6c,
	0x61, 0x79, 0x12, 0x6f, 0x0a, 0x1c, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69,
	0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76,
	0x61, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x42, 0x12, 0xba, 0x89, 0x31, 0x0e, 0x30, 0x73, 0x2d, 0x34, 0x32, 0x39, 0x31,
	0x36, 0x36, 0x30, 0x38, 0x30, 0x30, 0x73, 0x52, 0x1a, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x76, 0x61, 0x6c, 0x12, 0x54, 0x0a, 0x0e, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x64, 0x65, 0x6c, 0x61, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x12, 0xba, 0x89, 0x31, 0x0e, 0x30, 0x73, 0x2d, 0x34,
	0x32, 0x39, 0x31, 0x36, 0x36, 0x30, 0x38, 0x30, 0x30, 0x73, 0x52, 0x0d, 0x64, 0x65, 0x6c, 0x65,
	0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x6c, 0x61, 0x79, 0x42, 0x0c, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x04, 0x80, 0x83, 0x31, 0x01, 0x22, 0x4f, 0x0a, 0x1d, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x2e, 0x0a, 0x13, 0x72, 0x65, 0x73, 0x74,
	0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x72, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x22, 0xbd, 0x01, 0x0a, 0x28, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65,
	0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3d, 0x0a, 0x13, 0x72, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x0d, 0xa8, 0x89, 0x31, 0x01, 0xca, 0x89, 0x31, 0x05, 0x3c, 0x3d, 0x31, 0x30,
	0x30, 0x52, 0x11, 0x72, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79,
	0x70, 0x65, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x42, 0x0a, 0xba, 0x89, 0x31, 0x06, 0x30, 0x2d, 0x31,
	0x30, 0x30, 0x30, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x29, 0x0a,
	0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x0a, 0xca, 0x89, 0x31, 0x06, 0x3c, 0x3d, 0x32, 0x30, 0x30, 0x30, 0x52, 0x09, 0x70,
	0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0xc6, 0x01, 0x0a, 0x27, 0x53, 0x65, 0x74,
	0x52, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x41,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x3d, 0x0a, 0x13, 0x72, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x0d, 0xa8, 0x89, 0x31, 0x01, 0xca, 0x89, 0x31, 0x05, 0x3c, 0x3d, 0x31, 0x30, 0x30,
	0x52, 0x11, 0x72, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70,
	0x65, 0x49, 0x64, 0x12, 0x5c, 0x0a, 0x0f, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x62, 0x69,
	0x6e, 0x64, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x79,
	0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x70, 0x72, 0x69, 0x76,
	0x2e, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x2e, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x42, 0x69,
	0x6e, 0x64, 0x69, 0x6e, 0x67, 0x42, 0x0a, 0xc2, 0x89, 0x31, 0x06, 0x3c, 0x3d, 0x31, 0x30, 0x30,
	0x30, 0x52, 0x0e, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67,
	0x73, 0x22, 0xac, 0x01, 0x0a, 0x28, 0x53, 0x65, 0x74, 0x52, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x42, 0x69,
	0x6e, 0x64, 0x69, 0x6e, 0x67, 0x73, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x2e,
	0x0a, 0x13, 0x72, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x72, 0x65, 0x73,
	0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x50,
	0x0a, 0x0f, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x62, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x2e, 0x61, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x2e, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67,
	0x52, 0x0e, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x73,
	0x22, 0xd9, 0x01, 0x0a, 0x2a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x74, 0x72,
	0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x3d, 0x0a, 0x13, 0x72, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0d, 0xa8, 0x89,
	0x31, 0x01, 0xca, 0x89, 0x31, 0x05, 0x3c, 0x3d, 0x31, 0x30, 0x30, 0x52, 0x11, 0x72, 0x65, 0x73,
	0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x6c,
	0x0a, 0x15, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x62, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67,
	0x5f, 0x64, 0x65, 0x6c, 0x74, 0x61, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e,
	0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x70, 0x72, 0x69,
	0x76, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x2e, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x42,
	0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x44, 0x65, 0x6c, 0x74, 0x61, 0x42, 0x0a, 0xc2, 0x89, 0x31,
	0x06, 0x31, 0x2d, 0x31, 0x30, 0x30, 0x30, 0x52, 0x13, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x42,
	0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x44, 0x65, 0x6c, 0x74, 0x61, 0x73, 0x22, 0xbf, 0x01, 0x0a,
	0x2b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x42, 0x69, 0x6e, 0x64,
	0x69, 0x6e, 0x67, 0x73, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x2e, 0x0a, 0x13,
	0x72, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x72, 0x65, 0x73, 0x74, 0x72,
	0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x60, 0x0a, 0x15,
	0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x62, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x64,
	0x65, 0x6c, 0x74, 0x61, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x79, 0x61,
	0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x2e,
	0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x2e, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x42, 0x69, 0x6e,
	0x64, 0x69, 0x6e, 0x67, 0x44, 0x65, 0x6c, 0x74, 0x61, 0x52, 0x13, 0x61, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x44, 0x65, 0x6c, 0x74, 0x61, 0x73, 0x22, 0xb9,
	0x01, 0x0a, 0x24, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3d, 0x0a, 0x13, 0x72, 0x65, 0x73, 0x74, 0x72,
	0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x0d, 0xa8, 0x89, 0x31, 0x01, 0xca, 0x89, 0x31, 0x05, 0x3c, 0x3d,
	0x31, 0x30, 0x30, 0x52, 0x11, 0x72, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73,
	0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x42, 0x0a, 0xba, 0x89, 0x31, 0x06, 0x30,
	0x2d, 0x31, 0x30, 0x30, 0x30, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12,
	0x29, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x0a, 0xca, 0x89, 0x31, 0x06, 0x3c, 0x3d, 0x32, 0x30, 0x30, 0x30, 0x52,
	0x09, 0x70, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x97, 0x01, 0x0a, 0x25, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79,
	0x70, 0x65, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x46, 0x0a, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65,
	0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x2e, 0x6f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x26, 0x0a, 0x0f,
	0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x32, 0x94, 0x0a, 0x0a, 0x16, 0x52, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x65, 0x0a, 0x03, 0x47, 0x65, 0x74, 0x12, 0x33, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x79, 0x61,
	0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x2e,
	0x69, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x75, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x35,
	0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x70, 0x72,
	0x69, 0x76, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x36, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x76, 0x31,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x54, 0x79, 0x70, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x9e, 0x01,
	0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x36, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65,
	0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x2e, 0x69, 0x61, 0x6d,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x74, 0x72, 0x69,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x26, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x70, 0x72, 0x69, 0x76, 0x2e, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x34, 0xb2, 0xd2, 0x2a, 0x30, 0x0a, 0x1d,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x54, 0x79, 0x70, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x0f, 0x52,
	0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x9e,
	0x01, 0x0a, 0x06, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x36, 0x2e, 0x79, 0x61, 0x6e, 0x64,
	0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x2e, 0x69, 0x61,
	0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x74, 0x72,
	0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x26, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x70, 0x72, 0x69, 0x76, 0x2e, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x34, 0xb2, 0xd2, 0x2a, 0x30, 0x0a,
	0x1d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x0f,
	0x52, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x8e, 0x01, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x42, 0x69,
	0x6e, 0x64, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x42, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x76,
	0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x54, 0x79, 0x70, 0x65, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x42, 0x69, 0x6e, 0x64, 0x69,
	0x6e, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x34, 0x2e, 0x79, 0x61, 0x6e,
	0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x2e, 0x61,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0xd4, 0x01, 0x0a, 0x11, 0x53, 0x65, 0x74, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x42, 0x69,
	0x6e, 0x64, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x41, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x65, 0x74, 0x52, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x54, 0x79, 0x70, 0x65, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e,
	0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x79, 0x61, 0x6e, 0x64,
	0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x2e, 0x6f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0x54, 0xb2, 0xd2, 0x2a, 0x50, 0x0a, 0x28, 0x53, 0x65, 0x74, 0x52, 0x65, 0x73, 0x74,
	0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x41, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x73, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x12, 0x24, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x2e, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x73, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0xdd, 0x01, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x73,
	0x12, 0x44, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x70, 0x72, 0x69, 0x76, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70,
	0x65, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x2e, 0x6f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x57,
	0xb2, 0xd2, 0x2a, 0x53, 0x0a, 0x2b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x74,
	0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x41, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x73, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x12, 0x24, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x2e, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x73, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x91, 0x01, 0x0a, 0x0e, 0x4c, 0x69, 0x73, 0x74,
	0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x3e, 0x2e, 0x79, 0x61, 0x6e,
	0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x2e, 0x69,
	0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x74, 0x72, 0x69,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3f, 0x2e, 0x79, 0x61, 0x6e,
	0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x2e, 0x69,
	0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x74, 0x72, 0x69,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x52, 0x42, 0x05, 0x50,
	0x52, 0x4e, 0x54, 0x53, 0x5a, 0x49, 0x61, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2d, 0x74,
	0x65, 0x61, 0x6d, 0x2e, 0x72, 0x75, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x62, 0x69, 0x74,
	0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x2f, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x2d, 0x61,
	0x70, 0x69, 0x2f, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f,
	0x70, 0x72, 0x69, 0x76, 0x2f, 0x69, 0x61, 0x6d, 0x2f, 0x76, 0x31, 0x3b, 0x69, 0x61, 0x6d, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_yandex_cloud_priv_iam_v1_restriction_type_service_proto_rawDescOnce sync.Once
	file_yandex_cloud_priv_iam_v1_restriction_type_service_proto_rawDescData = file_yandex_cloud_priv_iam_v1_restriction_type_service_proto_rawDesc
)

func file_yandex_cloud_priv_iam_v1_restriction_type_service_proto_rawDescGZIP() []byte {
	file_yandex_cloud_priv_iam_v1_restriction_type_service_proto_rawDescOnce.Do(func() {
		file_yandex_cloud_priv_iam_v1_restriction_type_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_yandex_cloud_priv_iam_v1_restriction_type_service_proto_rawDescData)
	})
	return file_yandex_cloud_priv_iam_v1_restriction_type_service_proto_rawDescData
}

var file_yandex_cloud_priv_iam_v1_restriction_type_service_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_yandex_cloud_priv_iam_v1_restriction_type_service_proto_goTypes = []interface{}{
	(*GetRestrictionTypeRequest)(nil),                     // 0: yandex.cloud.priv.iam.v1.GetRestrictionTypeRequest
	(*ListRestrictionTypesRequest)(nil),                   // 1: yandex.cloud.priv.iam.v1.ListRestrictionTypesRequest
	(*ListRestrictionTypesResponse)(nil),                  // 2: yandex.cloud.priv.iam.v1.ListRestrictionTypesResponse
	(*CreateRestrictionTypeRequest)(nil),                  // 3: yandex.cloud.priv.iam.v1.CreateRestrictionTypeRequest
	(*CreateRestrictionTypeMetadata)(nil),                 // 4: yandex.cloud.priv.iam.v1.CreateRestrictionTypeMetadata
	(*UpdateRestrictionTypeRequest)(nil),                  // 5: yandex.cloud.priv.iam.v1.UpdateRestrictionTypeRequest
	(*UpdateRestrictionTypeMetadata)(nil),                 // 6: yandex.cloud.priv.iam.v1.UpdateRestrictionTypeMetadata
	(*ListRestrictionTypeAccessBindingsRequest)(nil),      // 7: yandex.cloud.priv.iam.v1.ListRestrictionTypeAccessBindingsRequest
	(*SetRestrictionTypeAccessBindingsRequest)(nil),       // 8: yandex.cloud.priv.iam.v1.SetRestrictionTypeAccessBindingsRequest
	(*SetRestrictionTypeAccessBindingsMetadata)(nil),      // 9: yandex.cloud.priv.iam.v1.SetRestrictionTypeAccessBindingsMetadata
	(*UpdateRestrictionTypeAccessBindingsRequest)(nil),    // 10: yandex.cloud.priv.iam.v1.UpdateRestrictionTypeAccessBindingsRequest
	(*UpdateRestrictionTypeAccessBindingsMetadata)(nil),   // 11: yandex.cloud.priv.iam.v1.UpdateRestrictionTypeAccessBindingsMetadata
	(*ListRestrictionTypeOperationsRequest)(nil),          // 12: yandex.cloud.priv.iam.v1.ListRestrictionTypeOperationsRequest
	(*ListRestrictionTypeOperationsResponse)(nil),         // 13: yandex.cloud.priv.iam.v1.ListRestrictionTypeOperationsResponse
	(*CreateRestrictionTypeRequest_BlockPermissions)(nil), // 14: yandex.cloud.priv.iam.v1.CreateRestrictionTypeRequest.BlockPermissions
	(*UpdateRestrictionTypeRequest_BlockPermissions)(nil), // 15: yandex.cloud.priv.iam.v1.UpdateRestrictionTypeRequest.BlockPermissions
	(RestrictionKind)(0),                                  // 16: yandex.cloud.priv.iam.v1.RestrictionKind
	(*RestrictionType)(nil),                               // 17: yandex.cloud.priv.iam.v1.RestrictionType
	(*fieldmaskpb.FieldMask)(nil),                         // 18: google.protobuf.FieldMask
	(*access.AccessBinding)(nil),                          // 19: yandex.cloud.priv.access.AccessBinding
	(*access.AccessBindingDelta)(nil),                     // 20: yandex.cloud.priv.access.AccessBindingDelta
	(*operation.Operation)(nil),                           // 21: yandex.cloud.priv.operation.Operation
	(*durationpb.Duration)(nil),                           // 22: google.protobuf.Duration
	(*access.ListAccessBindingsResponse)(nil),             // 23: yandex.cloud.priv.access.ListAccessBindingsResponse
}
var file_yandex_cloud_priv_iam_v1_restriction_type_service_proto_depIdxs = []int32{
	16, // 0: yandex.cloud.priv.iam.v1.ListRestrictionTypesRequest.restriction_kind:type_name -> yandex.cloud.priv.iam.v1.RestrictionKind
	17, // 1: yandex.cloud.priv.iam.v1.ListRestrictionTypesResponse.restriction_types:type_name -> yandex.cloud.priv.iam.v1.RestrictionType
	14, // 2: yandex.cloud.priv.iam.v1.CreateRestrictionTypeRequest.block_permissions:type_name -> yandex.cloud.priv.iam.v1.CreateRestrictionTypeRequest.BlockPermissions
	18, // 3: yandex.cloud.priv.iam.v1.UpdateRestrictionTypeRequest.update_mask:type_name -> google.protobuf.FieldMask
	15, // 4: yandex.cloud.priv.iam.v1.UpdateRestrictionTypeRequest.block_permissions:type_name -> yandex.cloud.priv.iam.v1.UpdateRestrictionTypeRequest.BlockPermissions
	19, // 5: yandex.cloud.priv.iam.v1.SetRestrictionTypeAccessBindingsRequest.access_bindings:type_name -> yandex.cloud.priv.access.AccessBinding
	19, // 6: yandex.cloud.priv.iam.v1.SetRestrictionTypeAccessBindingsMetadata.access_bindings:type_name -> yandex.cloud.priv.access.AccessBinding
	20, // 7: yandex.cloud.priv.iam.v1.UpdateRestrictionTypeAccessBindingsRequest.access_binding_deltas:type_name -> yandex.cloud.priv.access.AccessBindingDelta
	20, // 8: yandex.cloud.priv.iam.v1.UpdateRestrictionTypeAccessBindingsMetadata.access_binding_deltas:type_name -> yandex.cloud.priv.access.AccessBindingDelta
	21, // 9: yandex.cloud.priv.iam.v1.ListRestrictionTypeOperationsResponse.operations:type_name -> yandex.cloud.priv.operation.Operation
	22, // 10: yandex.cloud.priv.iam.v1.CreateRestrictionTypeRequest.BlockPermissions.stop_delay:type_name -> google.protobuf.Duration
	22, // 11: yandex.cloud.priv.iam.v1.CreateRestrictionTypeRequest.BlockPermissions.deletion_initiation_interval:type_name -> google.protobuf.Duration
	22, // 12: yandex.cloud.priv.iam.v1.CreateRestrictionTypeRequest.BlockPermissions.deletion_delay:type_name -> google.protobuf.Duration
	22, // 13: yandex.cloud.priv.iam.v1.UpdateRestrictionTypeRequest.BlockPermissions.stop_delay:type_name -> google.protobuf.Duration
	22, // 14: yandex.cloud.priv.iam.v1.UpdateRestrictionTypeRequest.BlockPermissions.deletion_initiation_interval:type_name -> google.protobuf.Duration
	22, // 15: yandex.cloud.priv.iam.v1.UpdateRestrictionTypeRequest.BlockPermissions.deletion_delay:type_name -> google.protobuf.Duration
	0,  // 16: yandex.cloud.priv.iam.v1.RestrictionTypeService.Get:input_type -> yandex.cloud.priv.iam.v1.GetRestrictionTypeRequest
	1,  // 17: yandex.cloud.priv.iam.v1.RestrictionTypeService.List:input_type -> yandex.cloud.priv.iam.v1.ListRestrictionTypesRequest
	3,  // 18: yandex.cloud.priv.iam.v1.RestrictionTypeService.Create:input_type -> yandex.cloud.priv.iam.v1.CreateRestrictionTypeRequest
	5,  // 19: yandex.cloud.priv.iam.v1.RestrictionTypeService.Update:input_type -> yandex.cloud.priv.iam.v1.UpdateRestrictionTypeRequest
	7,  // 20: yandex.cloud.priv.iam.v1.RestrictionTypeService.ListAccessBindings:input_type -> yandex.cloud.priv.iam.v1.ListRestrictionTypeAccessBindingsRequest
	8,  // 21: yandex.cloud.priv.iam.v1.RestrictionTypeService.SetAccessBindings:input_type -> yandex.cloud.priv.iam.v1.SetRestrictionTypeAccessBindingsRequest
	10, // 22: yandex.cloud.priv.iam.v1.RestrictionTypeService.UpdateAccessBindings:input_type -> yandex.cloud.priv.iam.v1.UpdateRestrictionTypeAccessBindingsRequest
	12, // 23: yandex.cloud.priv.iam.v1.RestrictionTypeService.ListOperations:input_type -> yandex.cloud.priv.iam.v1.ListRestrictionTypeOperationsRequest
	17, // 24: yandex.cloud.priv.iam.v1.RestrictionTypeService.Get:output_type -> yandex.cloud.priv.iam.v1.RestrictionType
	2,  // 25: yandex.cloud.priv.iam.v1.RestrictionTypeService.List:output_type -> yandex.cloud.priv.iam.v1.ListRestrictionTypesResponse
	21, // 26: yandex.cloud.priv.iam.v1.RestrictionTypeService.Create:output_type -> yandex.cloud.priv.operation.Operation
	21, // 27: yandex.cloud.priv.iam.v1.RestrictionTypeService.Update:output_type -> yandex.cloud.priv.operation.Operation
	23, // 28: yandex.cloud.priv.iam.v1.RestrictionTypeService.ListAccessBindings:output_type -> yandex.cloud.priv.access.ListAccessBindingsResponse
	21, // 29: yandex.cloud.priv.iam.v1.RestrictionTypeService.SetAccessBindings:output_type -> yandex.cloud.priv.operation.Operation
	21, // 30: yandex.cloud.priv.iam.v1.RestrictionTypeService.UpdateAccessBindings:output_type -> yandex.cloud.priv.operation.Operation
	13, // 31: yandex.cloud.priv.iam.v1.RestrictionTypeService.ListOperations:output_type -> yandex.cloud.priv.iam.v1.ListRestrictionTypeOperationsResponse
	24, // [24:32] is the sub-list for method output_type
	16, // [16:24] is the sub-list for method input_type
	16, // [16:16] is the sub-list for extension type_name
	16, // [16:16] is the sub-list for extension extendee
	0,  // [0:16] is the sub-list for field type_name
}

func init() { file_yandex_cloud_priv_iam_v1_restriction_type_service_proto_init() }
func file_yandex_cloud_priv_iam_v1_restriction_type_service_proto_init() {
	if File_yandex_cloud_priv_iam_v1_restriction_type_service_proto != nil {
		return
	}
	file_yandex_cloud_priv_iam_v1_restriction_type_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_yandex_cloud_priv_iam_v1_restriction_type_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRestrictionTypeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_priv_iam_v1_restriction_type_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListRestrictionTypesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_priv_iam_v1_restriction_type_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListRestrictionTypesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_priv_iam_v1_restriction_type_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRestrictionTypeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_priv_iam_v1_restriction_type_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRestrictionTypeMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_priv_iam_v1_restriction_type_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateRestrictionTypeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_priv_iam_v1_restriction_type_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateRestrictionTypeMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_priv_iam_v1_restriction_type_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListRestrictionTypeAccessBindingsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_priv_iam_v1_restriction_type_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetRestrictionTypeAccessBindingsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_priv_iam_v1_restriction_type_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetRestrictionTypeAccessBindingsMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_priv_iam_v1_restriction_type_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateRestrictionTypeAccessBindingsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_priv_iam_v1_restriction_type_service_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateRestrictionTypeAccessBindingsMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_priv_iam_v1_restriction_type_service_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListRestrictionTypeOperationsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_priv_iam_v1_restriction_type_service_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListRestrictionTypeOperationsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_priv_iam_v1_restriction_type_service_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRestrictionTypeRequest_BlockPermissions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_priv_iam_v1_restriction_type_service_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateRestrictionTypeRequest_BlockPermissions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_yandex_cloud_priv_iam_v1_restriction_type_service_proto_msgTypes[3].OneofWrappers = []interface{}{
		(*CreateRestrictionTypeRequest_BlockPermissions_)(nil),
	}
	file_yandex_cloud_priv_iam_v1_restriction_type_service_proto_msgTypes[5].OneofWrappers = []interface{}{
		(*UpdateRestrictionTypeRequest_BlockPermissions_)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_yandex_cloud_priv_iam_v1_restriction_type_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_yandex_cloud_priv_iam_v1_restriction_type_service_proto_goTypes,
		DependencyIndexes: file_yandex_cloud_priv_iam_v1_restriction_type_service_proto_depIdxs,
		MessageInfos:      file_yandex_cloud_priv_iam_v1_restriction_type_service_proto_msgTypes,
	}.Build()
	File_yandex_cloud_priv_iam_v1_restriction_type_service_proto = out.File
	file_yandex_cloud_priv_iam_v1_restriction_type_service_proto_rawDesc = nil
	file_yandex_cloud_priv_iam_v1_restriction_type_service_proto_goTypes = nil
	file_yandex_cloud_priv_iam_v1_restriction_type_service_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// RestrictionTypeServiceClient is the client API for RestrictionTypeService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RestrictionTypeServiceClient interface {
	Get(ctx context.Context, in *GetRestrictionTypeRequest, opts ...grpc.CallOption) (*RestrictionType, error)
	List(ctx context.Context, in *ListRestrictionTypesRequest, opts ...grpc.CallOption) (*ListRestrictionTypesResponse, error)
	Create(ctx context.Context, in *CreateRestrictionTypeRequest, opts ...grpc.CallOption) (*operation.Operation, error)
	Update(ctx context.Context, in *UpdateRestrictionTypeRequest, opts ...grpc.CallOption) (*operation.Operation, error)
	ListAccessBindings(ctx context.Context, in *ListRestrictionTypeAccessBindingsRequest, opts ...grpc.CallOption) (*access.ListAccessBindingsResponse, error)
	SetAccessBindings(ctx context.Context, in *SetRestrictionTypeAccessBindingsRequest, opts ...grpc.CallOption) (*operation.Operation, error)
	UpdateAccessBindings(ctx context.Context, in *UpdateRestrictionTypeAccessBindingsRequest, opts ...grpc.CallOption) (*operation.Operation, error)
	ListOperations(ctx context.Context, in *ListRestrictionTypeOperationsRequest, opts ...grpc.CallOption) (*ListRestrictionTypeOperationsResponse, error)
}

type restrictionTypeServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewRestrictionTypeServiceClient(cc grpc.ClientConnInterface) RestrictionTypeServiceClient {
	return &restrictionTypeServiceClient{cc}
}

func (c *restrictionTypeServiceClient) Get(ctx context.Context, in *GetRestrictionTypeRequest, opts ...grpc.CallOption) (*RestrictionType, error) {
	out := new(RestrictionType)
	err := c.cc.Invoke(ctx, "/yandex.cloud.priv.iam.v1.RestrictionTypeService/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *restrictionTypeServiceClient) List(ctx context.Context, in *ListRestrictionTypesRequest, opts ...grpc.CallOption) (*ListRestrictionTypesResponse, error) {
	out := new(ListRestrictionTypesResponse)
	err := c.cc.Invoke(ctx, "/yandex.cloud.priv.iam.v1.RestrictionTypeService/List", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *restrictionTypeServiceClient) Create(ctx context.Context, in *CreateRestrictionTypeRequest, opts ...grpc.CallOption) (*operation.Operation, error) {
	out := new(operation.Operation)
	err := c.cc.Invoke(ctx, "/yandex.cloud.priv.iam.v1.RestrictionTypeService/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *restrictionTypeServiceClient) Update(ctx context.Context, in *UpdateRestrictionTypeRequest, opts ...grpc.CallOption) (*operation.Operation, error) {
	out := new(operation.Operation)
	err := c.cc.Invoke(ctx, "/yandex.cloud.priv.iam.v1.RestrictionTypeService/Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *restrictionTypeServiceClient) ListAccessBindings(ctx context.Context, in *ListRestrictionTypeAccessBindingsRequest, opts ...grpc.CallOption) (*access.ListAccessBindingsResponse, error) {
	out := new(access.ListAccessBindingsResponse)
	err := c.cc.Invoke(ctx, "/yandex.cloud.priv.iam.v1.RestrictionTypeService/ListAccessBindings", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *restrictionTypeServiceClient) SetAccessBindings(ctx context.Context, in *SetRestrictionTypeAccessBindingsRequest, opts ...grpc.CallOption) (*operation.Operation, error) {
	out := new(operation.Operation)
	err := c.cc.Invoke(ctx, "/yandex.cloud.priv.iam.v1.RestrictionTypeService/SetAccessBindings", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *restrictionTypeServiceClient) UpdateAccessBindings(ctx context.Context, in *UpdateRestrictionTypeAccessBindingsRequest, opts ...grpc.CallOption) (*operation.Operation, error) {
	out := new(operation.Operation)
	err := c.cc.Invoke(ctx, "/yandex.cloud.priv.iam.v1.RestrictionTypeService/UpdateAccessBindings", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *restrictionTypeServiceClient) ListOperations(ctx context.Context, in *ListRestrictionTypeOperationsRequest, opts ...grpc.CallOption) (*ListRestrictionTypeOperationsResponse, error) {
	out := new(ListRestrictionTypeOperationsResponse)
	err := c.cc.Invoke(ctx, "/yandex.cloud.priv.iam.v1.RestrictionTypeService/ListOperations", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RestrictionTypeServiceServer is the server API for RestrictionTypeService service.
type RestrictionTypeServiceServer interface {
	Get(context.Context, *GetRestrictionTypeRequest) (*RestrictionType, error)
	List(context.Context, *ListRestrictionTypesRequest) (*ListRestrictionTypesResponse, error)
	Create(context.Context, *CreateRestrictionTypeRequest) (*operation.Operation, error)
	Update(context.Context, *UpdateRestrictionTypeRequest) (*operation.Operation, error)
	ListAccessBindings(context.Context, *ListRestrictionTypeAccessBindingsRequest) (*access.ListAccessBindingsResponse, error)
	SetAccessBindings(context.Context, *SetRestrictionTypeAccessBindingsRequest) (*operation.Operation, error)
	UpdateAccessBindings(context.Context, *UpdateRestrictionTypeAccessBindingsRequest) (*operation.Operation, error)
	ListOperations(context.Context, *ListRestrictionTypeOperationsRequest) (*ListRestrictionTypeOperationsResponse, error)
}

// UnimplementedRestrictionTypeServiceServer can be embedded to have forward compatible implementations.
type UnimplementedRestrictionTypeServiceServer struct {
}

func (*UnimplementedRestrictionTypeServiceServer) Get(context.Context, *GetRestrictionTypeRequest) (*RestrictionType, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Get not implemented")
}
func (*UnimplementedRestrictionTypeServiceServer) List(context.Context, *ListRestrictionTypesRequest) (*ListRestrictionTypesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method List not implemented")
}
func (*UnimplementedRestrictionTypeServiceServer) Create(context.Context, *CreateRestrictionTypeRequest) (*operation.Operation, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}
func (*UnimplementedRestrictionTypeServiceServer) Update(context.Context, *UpdateRestrictionTypeRequest) (*operation.Operation, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Update not implemented")
}
func (*UnimplementedRestrictionTypeServiceServer) ListAccessBindings(context.Context, *ListRestrictionTypeAccessBindingsRequest) (*access.ListAccessBindingsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListAccessBindings not implemented")
}
func (*UnimplementedRestrictionTypeServiceServer) SetAccessBindings(context.Context, *SetRestrictionTypeAccessBindingsRequest) (*operation.Operation, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetAccessBindings not implemented")
}
func (*UnimplementedRestrictionTypeServiceServer) UpdateAccessBindings(context.Context, *UpdateRestrictionTypeAccessBindingsRequest) (*operation.Operation, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateAccessBindings not implemented")
}
func (*UnimplementedRestrictionTypeServiceServer) ListOperations(context.Context, *ListRestrictionTypeOperationsRequest) (*ListRestrictionTypeOperationsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListOperations not implemented")
}

func RegisterRestrictionTypeServiceServer(s *grpc.Server, srv RestrictionTypeServiceServer) {
	s.RegisterService(&_RestrictionTypeService_serviceDesc, srv)
}

func _RestrictionTypeService_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRestrictionTypeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RestrictionTypeServiceServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/yandex.cloud.priv.iam.v1.RestrictionTypeService/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RestrictionTypeServiceServer).Get(ctx, req.(*GetRestrictionTypeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RestrictionTypeService_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListRestrictionTypesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RestrictionTypeServiceServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/yandex.cloud.priv.iam.v1.RestrictionTypeService/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RestrictionTypeServiceServer).List(ctx, req.(*ListRestrictionTypesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RestrictionTypeService_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateRestrictionTypeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RestrictionTypeServiceServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/yandex.cloud.priv.iam.v1.RestrictionTypeService/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RestrictionTypeServiceServer).Create(ctx, req.(*CreateRestrictionTypeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RestrictionTypeService_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateRestrictionTypeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RestrictionTypeServiceServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/yandex.cloud.priv.iam.v1.RestrictionTypeService/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RestrictionTypeServiceServer).Update(ctx, req.(*UpdateRestrictionTypeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RestrictionTypeService_ListAccessBindings_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListRestrictionTypeAccessBindingsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RestrictionTypeServiceServer).ListAccessBindings(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/yandex.cloud.priv.iam.v1.RestrictionTypeService/ListAccessBindings",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RestrictionTypeServiceServer).ListAccessBindings(ctx, req.(*ListRestrictionTypeAccessBindingsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RestrictionTypeService_SetAccessBindings_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetRestrictionTypeAccessBindingsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RestrictionTypeServiceServer).SetAccessBindings(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/yandex.cloud.priv.iam.v1.RestrictionTypeService/SetAccessBindings",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RestrictionTypeServiceServer).SetAccessBindings(ctx, req.(*SetRestrictionTypeAccessBindingsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RestrictionTypeService_UpdateAccessBindings_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateRestrictionTypeAccessBindingsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RestrictionTypeServiceServer).UpdateAccessBindings(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/yandex.cloud.priv.iam.v1.RestrictionTypeService/UpdateAccessBindings",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RestrictionTypeServiceServer).UpdateAccessBindings(ctx, req.(*UpdateRestrictionTypeAccessBindingsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RestrictionTypeService_ListOperations_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListRestrictionTypeOperationsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RestrictionTypeServiceServer).ListOperations(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/yandex.cloud.priv.iam.v1.RestrictionTypeService/ListOperations",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RestrictionTypeServiceServer).ListOperations(ctx, req.(*ListRestrictionTypeOperationsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _RestrictionTypeService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "yandex.cloud.priv.iam.v1.RestrictionTypeService",
	HandlerType: (*RestrictionTypeServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Get",
			Handler:    _RestrictionTypeService_Get_Handler,
		},
		{
			MethodName: "List",
			Handler:    _RestrictionTypeService_List_Handler,
		},
		{
			MethodName: "Create",
			Handler:    _RestrictionTypeService_Create_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _RestrictionTypeService_Update_Handler,
		},
		{
			MethodName: "ListAccessBindings",
			Handler:    _RestrictionTypeService_ListAccessBindings_Handler,
		},
		{
			MethodName: "SetAccessBindings",
			Handler:    _RestrictionTypeService_SetAccessBindings_Handler,
		},
		{
			MethodName: "UpdateAccessBindings",
			Handler:    _RestrictionTypeService_UpdateAccessBindings_Handler,
		},
		{
			MethodName: "ListOperations",
			Handler:    _RestrictionTypeService_ListOperations_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "yandex/cloud/priv/iam/v1/restriction_type_service.proto",
}
