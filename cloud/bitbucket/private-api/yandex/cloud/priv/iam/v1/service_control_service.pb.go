// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.21.3
// source: yandex/cloud/priv/iam/v1/service_control_service.proto

package iam

import (
	_ "github.com/doublecloud/tross/cloud/bitbucket/common-api/yandex/cloud/api"
	_ "github.com/doublecloud/tross/cloud/bitbucket/private-api/yandex/cloud/priv"
	operation "github.com/doublecloud/tross/cloud/bitbucket/private-api/yandex/cloud/priv/operation"
	reference "github.com/doublecloud/tross/cloud/bitbucket/private-api/yandex/cloud/priv/reference"
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetServiceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServiceId        string    `protobuf:"bytes,1,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`
	Resource         *Resource `protobuf:"bytes,2,opt,name=resource,proto3" json:"resource,omitempty"`
	VisibilityBypass bool      `protobuf:"varint,3,opt,name=visibility_bypass,json=visibilityBypass,proto3" json:"visibility_bypass,omitempty"`
}

func (x *GetServiceRequest) Reset() {
	*x = GetServiceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_priv_iam_v1_service_control_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetServiceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServiceRequest) ProtoMessage() {}

func (x *GetServiceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_priv_iam_v1_service_control_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetServiceRequest.ProtoReflect.Descriptor instead.
func (*GetServiceRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_priv_iam_v1_service_control_service_proto_rawDescGZIP(), []int{0}
}

func (x *GetServiceRequest) GetServiceId() string {
	if x != nil {
		return x.ServiceId
	}
	return ""
}

func (x *GetServiceRequest) GetResource() *Resource {
	if x != nil {
		return x.Resource
	}
	return nil
}

func (x *GetServiceRequest) GetVisibilityBypass() bool {
	if x != nil {
		return x.VisibilityBypass
	}
	return false
}

type EnableServiceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServiceId        string    `protobuf:"bytes,1,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`
	Resource         *Resource `protobuf:"bytes,2,opt,name=resource,proto3" json:"resource,omitempty"`
	VisibilityBypass bool      `protobuf:"varint,3,opt,name=visibility_bypass,json=visibilityBypass,proto3" json:"visibility_bypass,omitempty"`
}

func (x *EnableServiceRequest) Reset() {
	*x = EnableServiceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_priv_iam_v1_service_control_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnableServiceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnableServiceRequest) ProtoMessage() {}

func (x *EnableServiceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_priv_iam_v1_service_control_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnableServiceRequest.ProtoReflect.Descriptor instead.
func (*EnableServiceRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_priv_iam_v1_service_control_service_proto_rawDescGZIP(), []int{1}
}

func (x *EnableServiceRequest) GetServiceId() string {
	if x != nil {
		return x.ServiceId
	}
	return ""
}

func (x *EnableServiceRequest) GetResource() *Resource {
	if x != nil {
		return x.Resource
	}
	return nil
}

func (x *EnableServiceRequest) GetVisibilityBypass() bool {
	if x != nil {
		return x.VisibilityBypass
	}
	return false
}

type EnableServiceMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServiceId string    `protobuf:"bytes,1,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`
	Resource  *Resource `protobuf:"bytes,2,opt,name=resource,proto3" json:"resource,omitempty"`
	Version   string    `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *EnableServiceMetadata) Reset() {
	*x = EnableServiceMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_priv_iam_v1_service_control_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnableServiceMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnableServiceMetadata) ProtoMessage() {}

func (x *EnableServiceMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_priv_iam_v1_service_control_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnableServiceMetadata.ProtoReflect.Descriptor instead.
func (*EnableServiceMetadata) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_priv_iam_v1_service_control_service_proto_rawDescGZIP(), []int{2}
}

func (x *EnableServiceMetadata) GetServiceId() string {
	if x != nil {
		return x.ServiceId
	}
	return ""
}

func (x *EnableServiceMetadata) GetResource() *Resource {
	if x != nil {
		return x.Resource
	}
	return nil
}

func (x *EnableServiceMetadata) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

type PauseServiceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServiceId        string    `protobuf:"bytes,1,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`
	Resource         *Resource `protobuf:"bytes,2,opt,name=resource,proto3" json:"resource,omitempty"`
	Force            bool      `protobuf:"varint,3,opt,name=force,proto3" json:"force,omitempty"`
	VisibilityBypass bool      `protobuf:"varint,4,opt,name=visibility_bypass,json=visibilityBypass,proto3" json:"visibility_bypass,omitempty"`
}

func (x *PauseServiceRequest) Reset() {
	*x = PauseServiceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_priv_iam_v1_service_control_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PauseServiceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PauseServiceRequest) ProtoMessage() {}

func (x *PauseServiceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_priv_iam_v1_service_control_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PauseServiceRequest.ProtoReflect.Descriptor instead.
func (*PauseServiceRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_priv_iam_v1_service_control_service_proto_rawDescGZIP(), []int{3}
}

func (x *PauseServiceRequest) GetServiceId() string {
	if x != nil {
		return x.ServiceId
	}
	return ""
}

func (x *PauseServiceRequest) GetResource() *Resource {
	if x != nil {
		return x.Resource
	}
	return nil
}

func (x *PauseServiceRequest) GetForce() bool {
	if x != nil {
		return x.Force
	}
	return false
}

func (x *PauseServiceRequest) GetVisibilityBypass() bool {
	if x != nil {
		return x.VisibilityBypass
	}
	return false
}

type PauseServiceMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServiceId string    `protobuf:"bytes,1,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`
	Resource  *Resource `protobuf:"bytes,2,opt,name=resource,proto3" json:"resource,omitempty"`
	Version   string    `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *PauseServiceMetadata) Reset() {
	*x = PauseServiceMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_priv_iam_v1_service_control_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PauseServiceMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PauseServiceMetadata) ProtoMessage() {}

func (x *PauseServiceMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_priv_iam_v1_service_control_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PauseServiceMetadata.ProtoReflect.Descriptor instead.
func (*PauseServiceMetadata) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_priv_iam_v1_service_control_service_proto_rawDescGZIP(), []int{4}
}

func (x *PauseServiceMetadata) GetServiceId() string {
	if x != nil {
		return x.ServiceId
	}
	return ""
}

func (x *PauseServiceMetadata) GetResource() *Resource {
	if x != nil {
		return x.Resource
	}
	return nil
}

func (x *PauseServiceMetadata) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

type ResumeServiceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServiceId        string    `protobuf:"bytes,1,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`
	Resource         *Resource `protobuf:"bytes,2,opt,name=resource,proto3" json:"resource,omitempty"`
	VisibilityBypass bool      `protobuf:"varint,3,opt,name=visibility_bypass,json=visibilityBypass,proto3" json:"visibility_bypass,omitempty"`
}

func (x *ResumeServiceRequest) Reset() {
	*x = ResumeServiceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_priv_iam_v1_service_control_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResumeServiceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResumeServiceRequest) ProtoMessage() {}

func (x *ResumeServiceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_priv_iam_v1_service_control_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResumeServiceRequest.ProtoReflect.Descriptor instead.
func (*ResumeServiceRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_priv_iam_v1_service_control_service_proto_rawDescGZIP(), []int{5}
}

func (x *ResumeServiceRequest) GetServiceId() string {
	if x != nil {
		return x.ServiceId
	}
	return ""
}

func (x *ResumeServiceRequest) GetResource() *Resource {
	if x != nil {
		return x.Resource
	}
	return nil
}

func (x *ResumeServiceRequest) GetVisibilityBypass() bool {
	if x != nil {
		return x.VisibilityBypass
	}
	return false
}

type ResumeServiceMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServiceId string    `protobuf:"bytes,1,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`
	Resource  *Resource `protobuf:"bytes,2,opt,name=resource,proto3" json:"resource,omitempty"`
	Version   string    `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *ResumeServiceMetadata) Reset() {
	*x = ResumeServiceMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_priv_iam_v1_service_control_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResumeServiceMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResumeServiceMetadata) ProtoMessage() {}

func (x *ResumeServiceMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_priv_iam_v1_service_control_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResumeServiceMetadata.ProtoReflect.Descriptor instead.
func (*ResumeServiceMetadata) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_priv_iam_v1_service_control_service_proto_rawDescGZIP(), []int{6}
}

func (x *ResumeServiceMetadata) GetServiceId() string {
	if x != nil {
		return x.ServiceId
	}
	return ""
}

func (x *ResumeServiceMetadata) GetResource() *Resource {
	if x != nil {
		return x.Resource
	}
	return nil
}

func (x *ResumeServiceMetadata) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

type DisableServiceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServiceId        string    `protobuf:"bytes,1,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`
	Resource         *Resource `protobuf:"bytes,2,opt,name=resource,proto3" json:"resource,omitempty"`
	VisibilityBypass bool      `protobuf:"varint,3,opt,name=visibility_bypass,json=visibilityBypass,proto3" json:"visibility_bypass,omitempty"`
}

func (x *DisableServiceRequest) Reset() {
	*x = DisableServiceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_priv_iam_v1_service_control_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DisableServiceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisableServiceRequest) ProtoMessage() {}

func (x *DisableServiceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_priv_iam_v1_service_control_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisableServiceRequest.ProtoReflect.Descriptor instead.
func (*DisableServiceRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_priv_iam_v1_service_control_service_proto_rawDescGZIP(), []int{7}
}

func (x *DisableServiceRequest) GetServiceId() string {
	if x != nil {
		return x.ServiceId
	}
	return ""
}

func (x *DisableServiceRequest) GetResource() *Resource {
	if x != nil {
		return x.Resource
	}
	return nil
}

func (x *DisableServiceRequest) GetVisibilityBypass() bool {
	if x != nil {
		return x.VisibilityBypass
	}
	return false
}

type DisableServiceMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServiceId string    `protobuf:"bytes,1,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`
	Resource  *Resource `protobuf:"bytes,2,opt,name=resource,proto3" json:"resource,omitempty"`
	Version   string    `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *DisableServiceMetadata) Reset() {
	*x = DisableServiceMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_priv_iam_v1_service_control_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DisableServiceMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisableServiceMetadata) ProtoMessage() {}

func (x *DisableServiceMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_priv_iam_v1_service_control_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisableServiceMetadata.ProtoReflect.Descriptor instead.
func (*DisableServiceMetadata) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_priv_iam_v1_service_control_service_proto_rawDescGZIP(), []int{8}
}

func (x *DisableServiceMetadata) GetServiceId() string {
	if x != nil {
		return x.ServiceId
	}
	return ""
}

func (x *DisableServiceMetadata) GetResource() *Resource {
	if x != nil {
		return x.Resource
	}
	return nil
}

func (x *DisableServiceMetadata) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

type DeleteServiceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServiceId string    `protobuf:"bytes,1,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`
	Resource  *Resource `protobuf:"bytes,2,opt,name=resource,proto3" json:"resource,omitempty"`
}

func (x *DeleteServiceRequest) Reset() {
	*x = DeleteServiceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_priv_iam_v1_service_control_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteServiceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteServiceRequest) ProtoMessage() {}

func (x *DeleteServiceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_priv_iam_v1_service_control_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteServiceRequest.ProtoReflect.Descriptor instead.
func (*DeleteServiceRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_priv_iam_v1_service_control_service_proto_rawDescGZIP(), []int{9}
}

func (x *DeleteServiceRequest) GetServiceId() string {
	if x != nil {
		return x.ServiceId
	}
	return ""
}

func (x *DeleteServiceRequest) GetResource() *Resource {
	if x != nil {
		return x.Resource
	}
	return nil
}

type DeleteServiceMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServiceId string    `protobuf:"bytes,1,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`
	Resource  *Resource `protobuf:"bytes,2,opt,name=resource,proto3" json:"resource,omitempty"`
}

func (x *DeleteServiceMetadata) Reset() {
	*x = DeleteServiceMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_priv_iam_v1_service_control_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteServiceMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteServiceMetadata) ProtoMessage() {}

func (x *DeleteServiceMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_priv_iam_v1_service_control_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteServiceMetadata.ProtoReflect.Descriptor instead.
func (*DeleteServiceMetadata) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_priv_iam_v1_service_control_service_proto_rawDescGZIP(), []int{10}
}

func (x *DeleteServiceMetadata) GetServiceId() string {
	if x != nil {
		return x.ServiceId
	}
	return ""
}

func (x *DeleteServiceMetadata) GetResource() *Resource {
	if x != nil {
		return x.Resource
	}
	return nil
}

type UpgradeServiceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServiceId string    `protobuf:"bytes,1,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`
	Resource  *Resource `protobuf:"bytes,2,opt,name=resource,proto3" json:"resource,omitempty"`
}

func (x *UpgradeServiceRequest) Reset() {
	*x = UpgradeServiceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_priv_iam_v1_service_control_service_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpgradeServiceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpgradeServiceRequest) ProtoMessage() {}

func (x *UpgradeServiceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_priv_iam_v1_service_control_service_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpgradeServiceRequest.ProtoReflect.Descriptor instead.
func (*UpgradeServiceRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_priv_iam_v1_service_control_service_proto_rawDescGZIP(), []int{11}
}

func (x *UpgradeServiceRequest) GetServiceId() string {
	if x != nil {
		return x.ServiceId
	}
	return ""
}

func (x *UpgradeServiceRequest) GetResource() *Resource {
	if x != nil {
		return x.Resource
	}
	return nil
}

type UpgradeServiceMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServiceId     string    `protobuf:"bytes,1,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`
	Resource      *Resource `protobuf:"bytes,2,opt,name=resource,proto3" json:"resource,omitempty"`
	Version       string    `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
	TargetVersion string    `protobuf:"bytes,4,opt,name=target_version,json=targetVersion,proto3" json:"target_version,omitempty"`
}

func (x *UpgradeServiceMetadata) Reset() {
	*x = UpgradeServiceMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_priv_iam_v1_service_control_service_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpgradeServiceMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpgradeServiceMetadata) ProtoMessage() {}

func (x *UpgradeServiceMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_priv_iam_v1_service_control_service_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpgradeServiceMetadata.ProtoReflect.Descriptor instead.
func (*UpgradeServiceMetadata) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_priv_iam_v1_service_control_service_proto_rawDescGZIP(), []int{12}
}

func (x *UpgradeServiceMetadata) GetServiceId() string {
	if x != nil {
		return x.ServiceId
	}
	return ""
}

func (x *UpgradeServiceMetadata) GetResource() *Resource {
	if x != nil {
		return x.Resource
	}
	return nil
}

func (x *UpgradeServiceMetadata) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *UpgradeServiceMetadata) GetTargetVersion() string {
	if x != nil {
		return x.TargetVersion
	}
	return ""
}

type UpgradeServicesMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServiceId    string                 `protobuf:"bytes,1,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`
	ResourceType string                 `protobuf:"bytes,2,opt,name=resource_type,json=resourceType,proto3" json:"resource_type,omitempty"`
	Upgraded     int64                  `protobuf:"varint,3,opt,name=upgraded,proto3" json:"upgraded,omitempty"`
	Skipped      int64                  `protobuf:"varint,4,opt,name=skipped,proto3" json:"skipped,omitempty"`
	CancelledBy  string                 `protobuf:"bytes,5,opt,name=cancelled_by,json=cancelledBy,proto3" json:"cancelled_by,omitempty"`
	CancelledAt  *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=cancelled_at,json=cancelledAt,proto3" json:"cancelled_at,omitempty"`
}

func (x *UpgradeServicesMetadata) Reset() {
	*x = UpgradeServicesMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_priv_iam_v1_service_control_service_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpgradeServicesMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpgradeServicesMetadata) ProtoMessage() {}

func (x *UpgradeServicesMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_priv_iam_v1_service_control_service_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpgradeServicesMetadata.ProtoReflect.Descriptor instead.
func (*UpgradeServicesMetadata) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_priv_iam_v1_service_control_service_proto_rawDescGZIP(), []int{13}
}

func (x *UpgradeServicesMetadata) GetServiceId() string {
	if x != nil {
		return x.ServiceId
	}
	return ""
}

func (x *UpgradeServicesMetadata) GetResourceType() string {
	if x != nil {
		return x.ResourceType
	}
	return ""
}

func (x *UpgradeServicesMetadata) GetUpgraded() int64 {
	if x != nil {
		return x.Upgraded
	}
	return 0
}

func (x *UpgradeServicesMetadata) GetSkipped() int64 {
	if x != nil {
		return x.Skipped
	}
	return 0
}

func (x *UpgradeServicesMetadata) GetCancelledBy() string {
	if x != nil {
		return x.CancelledBy
	}
	return ""
}

func (x *UpgradeServicesMetadata) GetCancelledAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CancelledAt
	}
	return nil
}

type ListServicesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Resource  *Resource `protobuf:"bytes,1,opt,name=resource,proto3" json:"resource,omitempty"`
	PageSize  int64     `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	PageToken string    `protobuf:"bytes,3,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	// A filter expression that filters services in the response.
	//
	// The expression must specify:
	//  1. The field name. Currently you can use filtering only on [Service.service_id], [Service.description] or [Service.status] fields.
	//  2. The operator.
	//     `=` and '!=' operators can be used for all fields.
	//     'contains' and 'not contains' operators can be used for [Service.service_id] and [Service.description].
	//     'IN' and 'NOT IN' operators can be used for [Service.status].
	//  3. The value. The value must be in double quotes (`"`).`.
	//
	// Examples of a filter: `
	//
	//	service_id = "example-service-id" AND status IN ("ENABLED", "PAUSED")`
	//	description not contains "Default" AND status != "ENABLED"
	Filter           string `protobuf:"bytes,4,opt,name=filter,proto3" json:"filter,omitempty"`
	VisibilityBypass bool   `protobuf:"varint,5,opt,name=visibility_bypass,json=visibilityBypass,proto3" json:"visibility_bypass,omitempty"`
}

func (x *ListServicesRequest) Reset() {
	*x = ListServicesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_priv_iam_v1_service_control_service_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListServicesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListServicesRequest) ProtoMessage() {}

func (x *ListServicesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_priv_iam_v1_service_control_service_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListServicesRequest.ProtoReflect.Descriptor instead.
func (*ListServicesRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_priv_iam_v1_service_control_service_proto_rawDescGZIP(), []int{14}
}

func (x *ListServicesRequest) GetResource() *Resource {
	if x != nil {
		return x.Resource
	}
	return nil
}

func (x *ListServicesRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListServicesRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

func (x *ListServicesRequest) GetFilter() string {
	if x != nil {
		return x.Filter
	}
	return ""
}

func (x *ListServicesRequest) GetVisibilityBypass() bool {
	if x != nil {
		return x.VisibilityBypass
	}
	return false
}

type ListServicesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Services      []*Service `protobuf:"bytes,1,rep,name=services,proto3" json:"services,omitempty"`
	NextPageToken string     `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
}

func (x *ListServicesResponse) Reset() {
	*x = ListServicesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_priv_iam_v1_service_control_service_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListServicesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListServicesResponse) ProtoMessage() {}

func (x *ListServicesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_priv_iam_v1_service_control_service_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListServicesResponse.ProtoReflect.Descriptor instead.
func (*ListServicesResponse) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_priv_iam_v1_service_control_service_proto_rawDescGZIP(), []int{15}
}

func (x *ListServicesResponse) GetServices() []*Service {
	if x != nil {
		return x.Services
	}
	return nil
}

func (x *ListServicesResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

type ListSystemFoldersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CloudId   string `protobuf:"bytes,1,opt,name=cloud_id,json=cloudId,proto3" json:"cloud_id,omitempty"`
	PageSize  int64  `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	PageToken string `protobuf:"bytes,3,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
}

func (x *ListSystemFoldersRequest) Reset() {
	*x = ListSystemFoldersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_priv_iam_v1_service_control_service_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSystemFoldersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSystemFoldersRequest) ProtoMessage() {}

func (x *ListSystemFoldersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_priv_iam_v1_service_control_service_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSystemFoldersRequest.ProtoReflect.Descriptor instead.
func (*ListSystemFoldersRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_priv_iam_v1_service_control_service_proto_rawDescGZIP(), []int{16}
}

func (x *ListSystemFoldersRequest) GetCloudId() string {
	if x != nil {
		return x.CloudId
	}
	return ""
}

func (x *ListSystemFoldersRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListSystemFoldersRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

type ListSystemFoldersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SystemFolders []*SystemFolder `protobuf:"bytes,1,rep,name=system_folders,json=systemFolders,proto3" json:"system_folders,omitempty"`
	NextPageToken string          `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
}

func (x *ListSystemFoldersResponse) Reset() {
	*x = ListSystemFoldersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_priv_iam_v1_service_control_service_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSystemFoldersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSystemFoldersResponse) ProtoMessage() {}

func (x *ListSystemFoldersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_priv_iam_v1_service_control_service_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSystemFoldersResponse.ProtoReflect.Descriptor instead.
func (*ListSystemFoldersResponse) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_priv_iam_v1_service_control_service_proto_rawDescGZIP(), []int{17}
}

func (x *ListSystemFoldersResponse) GetSystemFolders() []*SystemFolder {
	if x != nil {
		return x.SystemFolders
	}
	return nil
}

func (x *ListSystemFoldersResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

type ListSystemServiceAccountsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResourceType string `protobuf:"bytes,1,opt,name=resource_type,json=resourceType,proto3" json:"resource_type,omitempty"`
	PageSize     int64  `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	PageToken    string `protobuf:"bytes,3,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
}

func (x *ListSystemServiceAccountsRequest) Reset() {
	*x = ListSystemServiceAccountsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_priv_iam_v1_service_control_service_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSystemServiceAccountsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSystemServiceAccountsRequest) ProtoMessage() {}

func (x *ListSystemServiceAccountsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_priv_iam_v1_service_control_service_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSystemServiceAccountsRequest.ProtoReflect.Descriptor instead.
func (*ListSystemServiceAccountsRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_priv_iam_v1_service_control_service_proto_rawDescGZIP(), []int{18}
}

func (x *ListSystemServiceAccountsRequest) GetResourceType() string {
	if x != nil {
		return x.ResourceType
	}
	return ""
}

func (x *ListSystemServiceAccountsRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListSystemServiceAccountsRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

type ListSystemServiceAccountsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServiceAccountIds []string `protobuf:"bytes,1,rep,name=service_account_ids,json=serviceAccountIds,proto3" json:"service_account_ids,omitempty"`
	NextPageToken     string   `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
}

func (x *ListSystemServiceAccountsResponse) Reset() {
	*x = ListSystemServiceAccountsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_priv_iam_v1_service_control_service_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSystemServiceAccountsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSystemServiceAccountsResponse) ProtoMessage() {}

func (x *ListSystemServiceAccountsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_priv_iam_v1_service_control_service_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSystemServiceAccountsResponse.ProtoReflect.Descriptor instead.
func (*ListSystemServiceAccountsResponse) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_priv_iam_v1_service_control_service_proto_rawDescGZIP(), []int{19}
}

func (x *ListSystemServiceAccountsResponse) GetServiceAccountIds() []string {
	if x != nil {
		return x.ServiceAccountIds
	}
	return nil
}

func (x *ListSystemServiceAccountsResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

type DeleteSystemFolderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SystemFolderId string `protobuf:"bytes,1,opt,name=system_folder_id,json=systemFolderId,proto3" json:"system_folder_id,omitempty"`
}

func (x *DeleteSystemFolderRequest) Reset() {
	*x = DeleteSystemFolderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_priv_iam_v1_service_control_service_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteSystemFolderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSystemFolderRequest) ProtoMessage() {}

func (x *DeleteSystemFolderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_priv_iam_v1_service_control_service_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSystemFolderRequest.ProtoReflect.Descriptor instead.
func (*DeleteSystemFolderRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_priv_iam_v1_service_control_service_proto_rawDescGZIP(), []int{20}
}

func (x *DeleteSystemFolderRequest) GetSystemFolderId() string {
	if x != nil {
		return x.SystemFolderId
	}
	return ""
}

type DeleteSystemFolderMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SystemFolderId string `protobuf:"bytes,1,opt,name=system_folder_id,json=systemFolderId,proto3" json:"system_folder_id,omitempty"`
}

func (x *DeleteSystemFolderMetadata) Reset() {
	*x = DeleteSystemFolderMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_priv_iam_v1_service_control_service_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteSystemFolderMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSystemFolderMetadata) ProtoMessage() {}

func (x *DeleteSystemFolderMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_priv_iam_v1_service_control_service_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSystemFolderMetadata.ProtoReflect.Descriptor instead.
func (*DeleteSystemFolderMetadata) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_priv_iam_v1_service_control_service_proto_rawDescGZIP(), []int{21}
}

func (x *DeleteSystemFolderMetadata) GetSystemFolderId() string {
	if x != nil {
		return x.SystemFolderId
	}
	return ""
}

type ResolveServiceAgentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServiceId      string    `protobuf:"bytes,1,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`
	MicroserviceId string    `protobuf:"bytes,2,opt,name=microservice_id,json=microserviceId,proto3" json:"microservice_id,omitempty"`
	Resource       *Resource `protobuf:"bytes,3,opt,name=resource,proto3" json:"resource,omitempty"`
}

func (x *ResolveServiceAgentRequest) Reset() {
	*x = ResolveServiceAgentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_priv_iam_v1_service_control_service_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResolveServiceAgentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResolveServiceAgentRequest) ProtoMessage() {}

func (x *ResolveServiceAgentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_priv_iam_v1_service_control_service_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResolveServiceAgentRequest.ProtoReflect.Descriptor instead.
func (*ResolveServiceAgentRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_priv_iam_v1_service_control_service_proto_rawDescGZIP(), []int{22}
}

func (x *ResolveServiceAgentRequest) GetServiceId() string {
	if x != nil {
		return x.ServiceId
	}
	return ""
}

func (x *ResolveServiceAgentRequest) GetMicroserviceId() string {
	if x != nil {
		return x.MicroserviceId
	}
	return ""
}

func (x *ResolveServiceAgentRequest) GetResource() *Resource {
	if x != nil {
		return x.Resource
	}
	return nil
}

type SetupDelegationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServiceId              string    `protobuf:"bytes,1,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`
	MicroserviceId         string    `protobuf:"bytes,2,opt,name=microservice_id,json=microserviceId,proto3" json:"microservice_id,omitempty"`
	Resource               *Resource `protobuf:"bytes,3,opt,name=resource,proto3" json:"resource,omitempty"`
	TargetServiceAccountId string    `protobuf:"bytes,4,opt,name=target_service_account_id,json=targetServiceAccountId,proto3" json:"target_service_account_id,omitempty"`
	Referrer               *Resource `protobuf:"bytes,5,opt,name=referrer,proto3" json:"referrer,omitempty"`
	OnBehalfOfSubjectId    string    `protobuf:"bytes,6,opt,name=on_behalf_of_subject_id,json=onBehalfOfSubjectId,proto3" json:"on_behalf_of_subject_id,omitempty"`
	WithReferences         bool      `protobuf:"varint,7,opt,name=with_references,json=withReferences,proto3" json:"with_references,omitempty"`
}

func (x *SetupDelegationRequest) Reset() {
	*x = SetupDelegationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_priv_iam_v1_service_control_service_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetupDelegationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetupDelegationRequest) ProtoMessage() {}

func (x *SetupDelegationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_priv_iam_v1_service_control_service_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetupDelegationRequest.ProtoReflect.Descriptor instead.
func (*SetupDelegationRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_priv_iam_v1_service_control_service_proto_rawDescGZIP(), []int{23}
}

func (x *SetupDelegationRequest) GetServiceId() string {
	if x != nil {
		return x.ServiceId
	}
	return ""
}

func (x *SetupDelegationRequest) GetMicroserviceId() string {
	if x != nil {
		return x.MicroserviceId
	}
	return ""
}

func (x *SetupDelegationRequest) GetResource() *Resource {
	if x != nil {
		return x.Resource
	}
	return nil
}

func (x *SetupDelegationRequest) GetTargetServiceAccountId() string {
	if x != nil {
		return x.TargetServiceAccountId
	}
	return ""
}

func (x *SetupDelegationRequest) GetReferrer() *Resource {
	if x != nil {
		return x.Referrer
	}
	return nil
}

func (x *SetupDelegationRequest) GetOnBehalfOfSubjectId() string {
	if x != nil {
		return x.OnBehalfOfSubjectId
	}
	return ""
}

func (x *SetupDelegationRequest) GetWithReferences() bool {
	if x != nil {
		return x.WithReferences
	}
	return false
}

type SetupDelegationMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServiceId string    `protobuf:"bytes,1,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`
	Resource  *Resource `protobuf:"bytes,2,opt,name=resource,proto3" json:"resource,omitempty"`
}

func (x *SetupDelegationMetadata) Reset() {
	*x = SetupDelegationMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_priv_iam_v1_service_control_service_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetupDelegationMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetupDelegationMetadata) ProtoMessage() {}

func (x *SetupDelegationMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_priv_iam_v1_service_control_service_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetupDelegationMetadata.ProtoReflect.Descriptor instead.
func (*SetupDelegationMetadata) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_priv_iam_v1_service_control_service_proto_rawDescGZIP(), []int{24}
}

func (x *SetupDelegationMetadata) GetServiceId() string {
	if x != nil {
		return x.ServiceId
	}
	return ""
}

func (x *SetupDelegationMetadata) GetResource() *Resource {
	if x != nil {
		return x.Resource
	}
	return nil
}

type RevokeDelegationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServiceId              string    `protobuf:"bytes,1,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`
	MicroserviceId         string    `protobuf:"bytes,2,opt,name=microservice_id,json=microserviceId,proto3" json:"microservice_id,omitempty"`
	Resource               *Resource `protobuf:"bytes,3,opt,name=resource,proto3" json:"resource,omitempty"`
	TargetServiceAccountId string    `protobuf:"bytes,4,opt,name=target_service_account_id,json=targetServiceAccountId,proto3" json:"target_service_account_id,omitempty"`
	Referrer               *Resource `protobuf:"bytes,5,opt,name=referrer,proto3" json:"referrer,omitempty"`
	WithReferences         bool      `protobuf:"varint,6,opt,name=with_references,json=withReferences,proto3" json:"with_references,omitempty"`
}

func (x *RevokeDelegationRequest) Reset() {
	*x = RevokeDelegationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_priv_iam_v1_service_control_service_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RevokeDelegationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RevokeDelegationRequest) ProtoMessage() {}

func (x *RevokeDelegationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_priv_iam_v1_service_control_service_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RevokeDelegationRequest.ProtoReflect.Descriptor instead.
func (*RevokeDelegationRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_priv_iam_v1_service_control_service_proto_rawDescGZIP(), []int{25}
}

func (x *RevokeDelegationRequest) GetServiceId() string {
	if x != nil {
		return x.ServiceId
	}
	return ""
}

func (x *RevokeDelegationRequest) GetMicroserviceId() string {
	if x != nil {
		return x.MicroserviceId
	}
	return ""
}

func (x *RevokeDelegationRequest) GetResource() *Resource {
	if x != nil {
		return x.Resource
	}
	return nil
}

func (x *RevokeDelegationRequest) GetTargetServiceAccountId() string {
	if x != nil {
		return x.TargetServiceAccountId
	}
	return ""
}

func (x *RevokeDelegationRequest) GetReferrer() *Resource {
	if x != nil {
		return x.Referrer
	}
	return nil
}

func (x *RevokeDelegationRequest) GetWithReferences() bool {
	if x != nil {
		return x.WithReferences
	}
	return false
}

type RevokeDelegationMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServiceId string    `protobuf:"bytes,1,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`
	Resource  *Resource `protobuf:"bytes,2,opt,name=resource,proto3" json:"resource,omitempty"`
}

func (x *RevokeDelegationMetadata) Reset() {
	*x = RevokeDelegationMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_priv_iam_v1_service_control_service_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RevokeDelegationMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RevokeDelegationMetadata) ProtoMessage() {}

func (x *RevokeDelegationMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_priv_iam_v1_service_control_service_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RevokeDelegationMetadata.ProtoReflect.Descriptor instead.
func (*RevokeDelegationMetadata) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_priv_iam_v1_service_control_service_proto_rawDescGZIP(), []int{26}
}

func (x *RevokeDelegationMetadata) GetServiceId() string {
	if x != nil {
		return x.ServiceId
	}
	return ""
}

func (x *RevokeDelegationMetadata) GetResource() *Resource {
	if x != nil {
		return x.Resource
	}
	return nil
}

type ListServiceReferencesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServiceId string    `protobuf:"bytes,1,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`
	Resource  *Resource `protobuf:"bytes,2,opt,name=resource,proto3" json:"resource,omitempty"`
	PageSize  int64     `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	PageToken string    `protobuf:"bytes,4,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
}

func (x *ListServiceReferencesRequest) Reset() {
	*x = ListServiceReferencesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_priv_iam_v1_service_control_service_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListServiceReferencesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListServiceReferencesRequest) ProtoMessage() {}

func (x *ListServiceReferencesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_priv_iam_v1_service_control_service_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListServiceReferencesRequest.ProtoReflect.Descriptor instead.
func (*ListServiceReferencesRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_priv_iam_v1_service_control_service_proto_rawDescGZIP(), []int{27}
}

func (x *ListServiceReferencesRequest) GetServiceId() string {
	if x != nil {
		return x.ServiceId
	}
	return ""
}

func (x *ListServiceReferencesRequest) GetResource() *Resource {
	if x != nil {
		return x.Resource
	}
	return nil
}

func (x *ListServiceReferencesRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListServiceReferencesRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

type ListServiceReferencesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	References    []*reference.Reference `protobuf:"bytes,1,rep,name=references,proto3" json:"references,omitempty"`
	NextPageToken string                 `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
}

func (x *ListServiceReferencesResponse) Reset() {
	*x = ListServiceReferencesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_priv_iam_v1_service_control_service_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListServiceReferencesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListServiceReferencesResponse) ProtoMessage() {}

func (x *ListServiceReferencesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_priv_iam_v1_service_control_service_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListServiceReferencesResponse.ProtoReflect.Descriptor instead.
func (*ListServiceReferencesResponse) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_priv_iam_v1_service_control_service_proto_rawDescGZIP(), []int{28}
}

func (x *ListServiceReferencesResponse) GetReferences() []*reference.Reference {
	if x != nil {
		return x.References
	}
	return nil
}

func (x *ListServiceReferencesResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

type UpdateServiceReferencesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServiceId          string                 `protobuf:"bytes,1,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`
	Resource           *Resource              `protobuf:"bytes,2,opt,name=resource,proto3" json:"resource,omitempty"`
	ReferenceAdditions []*reference.Reference `protobuf:"bytes,3,rep,name=reference_additions,json=referenceAdditions,proto3" json:"reference_additions,omitempty"`
	ReferenceDeletions []*reference.Reference `protobuf:"bytes,4,rep,name=reference_deletions,json=referenceDeletions,proto3" json:"reference_deletions,omitempty"`
}

func (x *UpdateServiceReferencesRequest) Reset() {
	*x = UpdateServiceReferencesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_priv_iam_v1_service_control_service_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateServiceReferencesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateServiceReferencesRequest) ProtoMessage() {}

func (x *UpdateServiceReferencesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_priv_iam_v1_service_control_service_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateServiceReferencesRequest.ProtoReflect.Descriptor instead.
func (*UpdateServiceReferencesRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_priv_iam_v1_service_control_service_proto_rawDescGZIP(), []int{29}
}

func (x *UpdateServiceReferencesRequest) GetServiceId() string {
	if x != nil {
		return x.ServiceId
	}
	return ""
}

func (x *UpdateServiceReferencesRequest) GetResource() *Resource {
	if x != nil {
		return x.Resource
	}
	return nil
}

func (x *UpdateServiceReferencesRequest) GetReferenceAdditions() []*reference.Reference {
	if x != nil {
		return x.ReferenceAdditions
	}
	return nil
}

func (x *UpdateServiceReferencesRequest) GetReferenceDeletions() []*reference.Reference {
	if x != nil {
		return x.ReferenceDeletions
	}
	return nil
}

type UpdateServiceReferencesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateServiceReferencesResponse) Reset() {
	*x = UpdateServiceReferencesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_priv_iam_v1_service_control_service_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateServiceReferencesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateServiceReferencesResponse) ProtoMessage() {}

func (x *UpdateServiceReferencesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_priv_iam_v1_service_control_service_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateServiceReferencesResponse.ProtoReflect.Descriptor instead.
func (*UpdateServiceReferencesResponse) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_priv_iam_v1_service_control_service_proto_rawDescGZIP(), []int{30}
}

type UpdateServiceReferencesMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServiceId string    `protobuf:"bytes,1,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`
	Resource  *Resource `protobuf:"bytes,2,opt,name=resource,proto3" json:"resource,omitempty"`
}

func (x *UpdateServiceReferencesMetadata) Reset() {
	*x = UpdateServiceReferencesMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_priv_iam_v1_service_control_service_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateServiceReferencesMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateServiceReferencesMetadata) ProtoMessage() {}

func (x *UpdateServiceReferencesMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_priv_iam_v1_service_control_service_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateServiceReferencesMetadata.ProtoReflect.Descriptor instead.
func (*UpdateServiceReferencesMetadata) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_priv_iam_v1_service_control_service_proto_rawDescGZIP(), []int{31}
}

func (x *UpdateServiceReferencesMetadata) GetServiceId() string {
	if x != nil {
		return x.ServiceId
	}
	return ""
}

func (x *UpdateServiceReferencesMetadata) GetResource() *Resource {
	if x != nil {
		return x.Resource
	}
	return nil
}

type GetServiceControlSettingsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Resource *Resource `protobuf:"bytes,1,opt,name=resource,proto3" json:"resource,omitempty"`
}

func (x *GetServiceControlSettingsRequest) Reset() {
	*x = GetServiceControlSettingsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_priv_iam_v1_service_control_service_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetServiceControlSettingsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServiceControlSettingsRequest) ProtoMessage() {}

func (x *GetServiceControlSettingsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_priv_iam_v1_service_control_service_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetServiceControlSettingsRequest.ProtoReflect.Descriptor instead.
func (*GetServiceControlSettingsRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_priv_iam_v1_service_control_service_proto_rawDescGZIP(), []int{32}
}

func (x *GetServiceControlSettingsRequest) GetResource() *Resource {
	if x != nil {
		return x.Resource
	}
	return nil
}

type UpdateServiceControlSettingsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Resource                   *Resource                   `protobuf:"bytes,1,opt,name=resource,proto3" json:"resource,omitempty"`
	ServicesAutoEnableSettings *ServicesAutoEnableSettings `protobuf:"bytes,2,opt,name=services_auto_enable_settings,json=servicesAutoEnableSettings,proto3" json:"services_auto_enable_settings,omitempty"`
}

func (x *UpdateServiceControlSettingsRequest) Reset() {
	*x = UpdateServiceControlSettingsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_priv_iam_v1_service_control_service_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateServiceControlSettingsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateServiceControlSettingsRequest) ProtoMessage() {}

func (x *UpdateServiceControlSettingsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_priv_iam_v1_service_control_service_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateServiceControlSettingsRequest.ProtoReflect.Descriptor instead.
func (*UpdateServiceControlSettingsRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_priv_iam_v1_service_control_service_proto_rawDescGZIP(), []int{33}
}

func (x *UpdateServiceControlSettingsRequest) GetResource() *Resource {
	if x != nil {
		return x.Resource
	}
	return nil
}

func (x *UpdateServiceControlSettingsRequest) GetServicesAutoEnableSettings() *ServicesAutoEnableSettings {
	if x != nil {
		return x.ServicesAutoEnableSettings
	}
	return nil
}

type UpdateServiceControlSettingsMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Resource *Resource `protobuf:"bytes,1,opt,name=resource,proto3" json:"resource,omitempty"`
}

func (x *UpdateServiceControlSettingsMetadata) Reset() {
	*x = UpdateServiceControlSettingsMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_priv_iam_v1_service_control_service_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateServiceControlSettingsMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateServiceControlSettingsMetadata) ProtoMessage() {}

func (x *UpdateServiceControlSettingsMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_priv_iam_v1_service_control_service_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateServiceControlSettingsMetadata.ProtoReflect.Descriptor instead.
func (*UpdateServiceControlSettingsMetadata) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_priv_iam_v1_service_control_service_proto_rawDescGZIP(), []int{34}
}

func (x *UpdateServiceControlSettingsMetadata) GetResource() *Resource {
	if x != nil {
		return x.Resource
	}
	return nil
}

type ListServiceControlSettingsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Resource  *Resource `protobuf:"bytes,1,opt,name=resource,proto3" json:"resource,omitempty"`
	PageSize  int64     `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	PageToken string    `protobuf:"bytes,3,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
}

func (x *ListServiceControlSettingsRequest) Reset() {
	*x = ListServiceControlSettingsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_priv_iam_v1_service_control_service_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListServiceControlSettingsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListServiceControlSettingsRequest) ProtoMessage() {}

func (x *ListServiceControlSettingsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_priv_iam_v1_service_control_service_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListServiceControlSettingsRequest.ProtoReflect.Descriptor instead.
func (*ListServiceControlSettingsRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_priv_iam_v1_service_control_service_proto_rawDescGZIP(), []int{35}
}

func (x *ListServiceControlSettingsRequest) GetResource() *Resource {
	if x != nil {
		return x.Resource
	}
	return nil
}

func (x *ListServiceControlSettingsRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListServiceControlSettingsRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

type ListServiceControlSettingsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServiceControlSettings []*ServiceControlSettings `protobuf:"bytes,1,rep,name=service_control_settings,json=serviceControlSettings,proto3" json:"service_control_settings,omitempty"`
	NextPageToken          string                    `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
}

func (x *ListServiceControlSettingsResponse) Reset() {
	*x = ListServiceControlSettingsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_priv_iam_v1_service_control_service_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListServiceControlSettingsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListServiceControlSettingsResponse) ProtoMessage() {}

func (x *ListServiceControlSettingsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_priv_iam_v1_service_control_service_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListServiceControlSettingsResponse.ProtoReflect.Descriptor instead.
func (*ListServiceControlSettingsResponse) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_priv_iam_v1_service_control_service_proto_rawDescGZIP(), []int{36}
}

func (x *ListServiceControlSettingsResponse) GetServiceControlSettings() []*ServiceControlSettings {
	if x != nil {
		return x.ServiceControlSettings
	}
	return nil
}

func (x *ListServiceControlSettingsResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

type DeleteServiceControlSettingsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Resource *Resource `protobuf:"bytes,1,opt,name=resource,proto3" json:"resource,omitempty"`
}

func (x *DeleteServiceControlSettingsRequest) Reset() {
	*x = DeleteServiceControlSettingsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_priv_iam_v1_service_control_service_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteServiceControlSettingsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteServiceControlSettingsRequest) ProtoMessage() {}

func (x *DeleteServiceControlSettingsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_priv_iam_v1_service_control_service_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteServiceControlSettingsRequest.ProtoReflect.Descriptor instead.
func (*DeleteServiceControlSettingsRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_priv_iam_v1_service_control_service_proto_rawDescGZIP(), []int{37}
}

func (x *DeleteServiceControlSettingsRequest) GetResource() *Resource {
	if x != nil {
		return x.Resource
	}
	return nil
}

type DeleteServiceControlSettingsMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Resource *Resource `protobuf:"bytes,1,opt,name=resource,proto3" json:"resource,omitempty"`
}

func (x *DeleteServiceControlSettingsMetadata) Reset() {
	*x = DeleteServiceControlSettingsMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_priv_iam_v1_service_control_service_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteServiceControlSettingsMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteServiceControlSettingsMetadata) ProtoMessage() {}

func (x *DeleteServiceControlSettingsMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_priv_iam_v1_service_control_service_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteServiceControlSettingsMetadata.ProtoReflect.Descriptor instead.
func (*DeleteServiceControlSettingsMetadata) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_priv_iam_v1_service_control_service_proto_rawDescGZIP(), []int{38}
}

func (x *DeleteServiceControlSettingsMetadata) GetResource() *Resource {
	if x != nil {
		return x.Resource
	}
	return nil
}

type EnsureServicesEnabledRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServiceIds          []string  `protobuf:"bytes,1,rep,name=service_ids,json=serviceIds,proto3" json:"service_ids,omitempty"`
	Resource            *Resource `protobuf:"bytes,2,opt,name=resource,proto3" json:"resource,omitempty"`
	OnBehalfOfSubjectId string    `protobuf:"bytes,3,opt,name=on_behalf_of_subject_id,json=onBehalfOfSubjectId,proto3" json:"on_behalf_of_subject_id,omitempty"`
}

func (x *EnsureServicesEnabledRequest) Reset() {
	*x = EnsureServicesEnabledRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_priv_iam_v1_service_control_service_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnsureServicesEnabledRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnsureServicesEnabledRequest) ProtoMessage() {}

func (x *EnsureServicesEnabledRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_priv_iam_v1_service_control_service_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnsureServicesEnabledRequest.ProtoReflect.Descriptor instead.
func (*EnsureServicesEnabledRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_priv_iam_v1_service_control_service_proto_rawDescGZIP(), []int{39}
}

func (x *EnsureServicesEnabledRequest) GetServiceIds() []string {
	if x != nil {
		return x.ServiceIds
	}
	return nil
}

func (x *EnsureServicesEnabledRequest) GetResource() *Resource {
	if x != nil {
		return x.Resource
	}
	return nil
}

func (x *EnsureServicesEnabledRequest) GetOnBehalfOfSubjectId() string {
	if x != nil {
		return x.OnBehalfOfSubjectId
	}
	return ""
}

type EnsureServicesEnabledMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServiceIds []string  `protobuf:"bytes,1,rep,name=service_ids,json=serviceIds,proto3" json:"service_ids,omitempty"`
	Resource   *Resource `protobuf:"bytes,2,opt,name=resource,proto3" json:"resource,omitempty"`
}

func (x *EnsureServicesEnabledMetadata) Reset() {
	*x = EnsureServicesEnabledMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_priv_iam_v1_service_control_service_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnsureServicesEnabledMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnsureServicesEnabledMetadata) ProtoMessage() {}

func (x *EnsureServicesEnabledMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_priv_iam_v1_service_control_service_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnsureServicesEnabledMetadata.ProtoReflect.Descriptor instead.
func (*EnsureServicesEnabledMetadata) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_priv_iam_v1_service_control_service_proto_rawDescGZIP(), []int{40}
}

func (x *EnsureServicesEnabledMetadata) GetServiceIds() []string {
	if x != nil {
		return x.ServiceIds
	}
	return nil
}

func (x *EnsureServicesEnabledMetadata) GetResource() *Resource {
	if x != nil {
		return x.Resource
	}
	return nil
}

type EnsureServicesEnabledResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Services []*Service `protobuf:"bytes,1,rep,name=services,proto3" json:"services,omitempty"`
}

func (x *EnsureServicesEnabledResponse) Reset() {
	*x = EnsureServicesEnabledResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_priv_iam_v1_service_control_service_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnsureServicesEnabledResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnsureServicesEnabledResponse) ProtoMessage() {}

func (x *EnsureServicesEnabledResponse) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_priv_iam_v1_service_control_service_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnsureServicesEnabledResponse.ProtoReflect.Descriptor instead.
func (*EnsureServicesEnabledResponse) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_priv_iam_v1_service_control_service_proto_rawDescGZIP(), []int{41}
}

func (x *EnsureServicesEnabledResponse) GetServices() []*Service {
	if x != nil {
		return x.Services
	}
	return nil
}

type CanEnsureServicesEnabledRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServiceIds          []string  `protobuf:"bytes,1,rep,name=service_ids,json=serviceIds,proto3" json:"service_ids,omitempty"`
	Resource            *Resource `protobuf:"bytes,2,opt,name=resource,proto3" json:"resource,omitempty"`
	OnBehalfOfSubjectId string    `protobuf:"bytes,3,opt,name=on_behalf_of_subject_id,json=onBehalfOfSubjectId,proto3" json:"on_behalf_of_subject_id,omitempty"`
}

func (x *CanEnsureServicesEnabledRequest) Reset() {
	*x = CanEnsureServicesEnabledRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_priv_iam_v1_service_control_service_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CanEnsureServicesEnabledRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CanEnsureServicesEnabledRequest) ProtoMessage() {}

func (x *CanEnsureServicesEnabledRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_priv_iam_v1_service_control_service_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CanEnsureServicesEnabledRequest.ProtoReflect.Descriptor instead.
func (*CanEnsureServicesEnabledRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_priv_iam_v1_service_control_service_proto_rawDescGZIP(), []int{42}
}

func (x *CanEnsureServicesEnabledRequest) GetServiceIds() []string {
	if x != nil {
		return x.ServiceIds
	}
	return nil
}

func (x *CanEnsureServicesEnabledRequest) GetResource() *Resource {
	if x != nil {
		return x.Resource
	}
	return nil
}

func (x *CanEnsureServicesEnabledRequest) GetOnBehalfOfSubjectId() string {
	if x != nil {
		return x.OnBehalfOfSubjectId
	}
	return ""
}

type CanEnsureServicesEnabledResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CanEnsureServicesEnabledResponse) Reset() {
	*x = CanEnsureServicesEnabledResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_priv_iam_v1_service_control_service_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CanEnsureServicesEnabledResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CanEnsureServicesEnabledResponse) ProtoMessage() {}

func (x *CanEnsureServicesEnabledResponse) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_priv_iam_v1_service_control_service_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CanEnsureServicesEnabledResponse.ProtoReflect.Descriptor instead.
func (*CanEnsureServicesEnabledResponse) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_priv_iam_v1_service_control_service_proto_rawDescGZIP(), []int{43}
}

type FindServiceAgentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServiceId      string    `protobuf:"bytes,1,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`
	MicroserviceId string    `protobuf:"bytes,2,opt,name=microservice_id,json=microserviceId,proto3" json:"microservice_id,omitempty"`
	Resource       *Resource `protobuf:"bytes,3,opt,name=resource,proto3" json:"resource,omitempty"`
}

func (x *FindServiceAgentRequest) Reset() {
	*x = FindServiceAgentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_priv_iam_v1_service_control_service_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindServiceAgentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindServiceAgentRequest) ProtoMessage() {}

func (x *FindServiceAgentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_priv_iam_v1_service_control_service_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindServiceAgentRequest.ProtoReflect.Descriptor instead.
func (*FindServiceAgentRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_priv_iam_v1_service_control_service_proto_rawDescGZIP(), []int{44}
}

func (x *FindServiceAgentRequest) GetServiceId() string {
	if x != nil {
		return x.ServiceId
	}
	return ""
}

func (x *FindServiceAgentRequest) GetMicroserviceId() string {
	if x != nil {
		return x.MicroserviceId
	}
	return ""
}

func (x *FindServiceAgentRequest) GetResource() *Resource {
	if x != nil {
		return x.Resource
	}
	return nil
}

type ListServiceOperationsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServiceId        string    `protobuf:"bytes,1,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`
	Resource         *Resource `protobuf:"bytes,2,opt,name=resource,proto3" json:"resource,omitempty"`
	PageSize         int64     `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	PageToken        string    `protobuf:"bytes,4,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	VisibilityBypass bool      `protobuf:"varint,5,opt,name=visibility_bypass,json=visibilityBypass,proto3" json:"visibility_bypass,omitempty"`
}

func (x *ListServiceOperationsRequest) Reset() {
	*x = ListServiceOperationsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_priv_iam_v1_service_control_service_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListServiceOperationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListServiceOperationsRequest) ProtoMessage() {}

func (x *ListServiceOperationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_priv_iam_v1_service_control_service_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListServiceOperationsRequest.ProtoReflect.Descriptor instead.
func (*ListServiceOperationsRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_priv_iam_v1_service_control_service_proto_rawDescGZIP(), []int{45}
}

func (x *ListServiceOperationsRequest) GetServiceId() string {
	if x != nil {
		return x.ServiceId
	}
	return ""
}

func (x *ListServiceOperationsRequest) GetResource() *Resource {
	if x != nil {
		return x.Resource
	}
	return nil
}

func (x *ListServiceOperationsRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListServiceOperationsRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

func (x *ListServiceOperationsRequest) GetVisibilityBypass() bool {
	if x != nil {
		return x.VisibilityBypass
	}
	return false
}

type ListServiceOperationsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Operations    []*operation.Operation `protobuf:"bytes,1,rep,name=operations,proto3" json:"operations,omitempty"`
	NextPageToken string                 `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
}

func (x *ListServiceOperationsResponse) Reset() {
	*x = ListServiceOperationsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_priv_iam_v1_service_control_service_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListServiceOperationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListServiceOperationsResponse) ProtoMessage() {}

func (x *ListServiceOperationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_priv_iam_v1_service_control_service_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListServiceOperationsResponse.ProtoReflect.Descriptor instead.
func (*ListServiceOperationsResponse) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_priv_iam_v1_service_control_service_proto_rawDescGZIP(), []int{46}
}

func (x *ListServiceOperationsResponse) GetOperations() []*operation.Operation {
	if x != nil {
		return x.Operations
	}
	return nil
}

func (x *ListServiceOperationsResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

var File_yandex_cloud_priv_iam_v1_service_control_service_proto protoreflect.FileDescriptor

var file_yandex_cloud_priv_iam_v1_service_control_service_proto_rawDesc = []byte{
	0x0a, 0x36, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x70,
	0x72, 0x69, 0x76, 0x2f, 0x69, 0x61, 0x6d, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x18, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x2e, 0x69, 0x61, 0x6d, 0x2e,
	0x76, 0x31, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2f, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x27, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2f, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x2f, 0x70, 0x72, 0x69, 0x76, 0x2f, 0x69, 0x61, 0x6d, 0x2f, 0x76, 0x31, 0x2f,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2e,
	0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x70, 0x72, 0x69,
	0x76, 0x2f, 0x69, 0x61, 0x6d, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2b,
	0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x70, 0x72, 0x69,
	0x76, 0x2f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x6f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2b, 0x79, 0x61, 0x6e,
	0x64, 0x65, 0x78, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x70, 0x72, 0x69, 0x76, 0x2f, 0x72,
	0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x2f, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e,
	0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x22, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78,
	0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x70, 0x72, 0x69, 0x76, 0x2f, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb3, 0x01, 0x0a,
	0x11, 0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x2b, 0x0a, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0c, 0xa8, 0x89, 0x31, 0x01, 0xca, 0x89, 0x31, 0x04,
	0x3c, 0x3d, 0x35, 0x30, 0x52, 0x09, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12,
	0x44, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x22, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x70, 0x72, 0x69, 0x76, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x42, 0x04, 0xa8, 0x89, 0x31, 0x01, 0x52, 0x08, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x2b, 0x0a, 0x11, 0x76, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c,
	0x69, 0x74, 0x79, 0x5f, 0x62, 0x79, 0x70, 0x61, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x10, 0x76, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x42, 0x79, 0x70, 0x61,
	0x73, 0x73, 0x22, 0xb6, 0x01, 0x0a, 0x14, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2b, 0x0a, 0x0a, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x0c, 0xa8, 0x89, 0x31, 0x01, 0xca, 0x89, 0x31, 0x04, 0x3c, 0x3d, 0x35, 0x30, 0x52, 0x09, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x44, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x79, 0x61, 0x6e,
	0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x2e, 0x69,
	0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x42, 0x04,
	0xa8, 0x89, 0x31, 0x01, 0x52, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x2b,
	0x0a, 0x11, 0x76, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x5f, 0x62, 0x79, 0x70,
	0x61, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x76, 0x69, 0x73, 0x69, 0x62,
	0x69, 0x6c, 0x69, 0x74, 0x79, 0x42, 0x79, 0x70, 0x61, 0x73, 0x73, 0x22, 0x90, 0x01, 0x0a, 0x15,
	0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x49, 0x64, 0x12, 0x3e, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x76,
	0x31, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x08, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0xcb,
	0x01, 0x0a, 0x13, 0x50, 0x61, 0x75, 0x73, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2b, 0x0a, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0c, 0xa8, 0x89, 0x31, 0x01,
	0xca, 0x89, 0x31, 0x04, 0x3c, 0x3d, 0x35, 0x30, 0x52, 0x09, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x49, 0x64, 0x12, 0x44, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x76, 0x31,
	0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x42, 0x04, 0xa8, 0x89, 0x31, 0x01, 0x52,
	0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x6f, 0x72,
	0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x12,
	0x2b, 0x0a, 0x11, 0x76, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x5f, 0x62, 0x79,
	0x70, 0x61, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x76, 0x69, 0x73, 0x69,
	0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x42, 0x79, 0x70, 0x61, 0x73, 0x73, 0x22, 0x8f, 0x01, 0x0a,
	0x14, 0x50, 0x61, 0x75, 0x73, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x49, 0x64, 0x12, 0x3e, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x76,
	0x31, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x08, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0xb6,
	0x01, 0x0a, 0x14, 0x52, 0x65, 0x73, 0x75, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2b, 0x0a, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0c, 0xa8, 0x89, 0x31,
	0x01, 0xca, 0x89, 0x31, 0x04, 0x3c, 0x3d, 0x35, 0x30, 0x52, 0x09, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x49, 0x64, 0x12, 0x44, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x76,
	0x31, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x42, 0x04, 0xa8, 0x89, 0x31, 0x01,
	0x52, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x2b, 0x0a, 0x11, 0x76, 0x69,
	0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x5f, 0x62, 0x79, 0x70, 0x61, 0x73, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x76, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74,
	0x79, 0x42, 0x79, 0x70, 0x61, 0x73, 0x73, 0x22, 0x90, 0x01, 0x0a, 0x15, 0x52, 0x65, 0x73, 0x75,
	0x6d, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64,
	0x12, 0x3e, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x22, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0xb7, 0x01, 0x0a, 0x15, 0x44,
	0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x2b, 0x0a, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0c, 0xa8, 0x89, 0x31, 0x01, 0xca, 0x89,
	0x31, 0x04, 0x3c, 0x3d, 0x35, 0x30, 0x52, 0x09, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49,
	0x64, 0x12, 0x44, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x42, 0x04, 0xa8, 0x89, 0x31, 0x01, 0x52, 0x08, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x2b, 0x0a, 0x11, 0x76, 0x69, 0x73, 0x69, 0x62,
	0x69, 0x6c, 0x69, 0x74, 0x79, 0x5f, 0x62, 0x79, 0x70, 0x61, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x10, 0x76, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x42, 0x79,
	0x70, 0x61, 0x73, 0x73, 0x22, 0x91, 0x01, 0x0a, 0x16, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12,
	0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x3e,
	0x0a, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x22, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x70, 0x72, 0x69, 0x76, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x52, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x89, 0x01, 0x0a, 0x14, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x2b, 0x0a, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0c, 0xa8, 0x89, 0x31, 0x01, 0xca, 0x89, 0x31, 0x04, 0x3c,
	0x3d, 0x35, 0x30, 0x52, 0x09, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x44,
	0x0a, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x22, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x70, 0x72, 0x69, 0x76, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x42, 0x04, 0xa8, 0x89, 0x31, 0x01, 0x52, 0x08, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x22, 0x76, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1d, 0x0a,
	0x0a, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x3e, 0x0a, 0x08,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22,
	0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x70, 0x72,
	0x69, 0x76, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x52, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0x8a, 0x01, 0x0a,
	0x15, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2b, 0x0a, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0c, 0xa8, 0x89, 0x31, 0x01,
	0xca, 0x89, 0x31, 0x04, 0x3c, 0x3d, 0x35, 0x30, 0x52, 0x09, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x49, 0x64, 0x12, 0x44, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x76, 0x31,
	0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x42, 0x04, 0xa8, 0x89, 0x31, 0x01, 0x52,
	0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0xb8, 0x01, 0x0a, 0x16, 0x55, 0x70,
	0x67, 0x72, 0x61, 0x64, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x49, 0x64, 0x12, 0x3e, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x76, 0x31,
	0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x25, 0x0a,
	0x0e, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x22, 0xf5, 0x01, 0x0a, 0x17, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12,
	0x23, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x75, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x64,
	0x12, 0x18, 0x0a, 0x07, 0x73, 0x6b, 0x69, 0x70, 0x70, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x07, 0x73, 0x6b, 0x69, 0x70, 0x70, 0x65, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x61,
	0x6e, 0x63, 0x65, 0x6c, 0x6c, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x6c, 0x65, 0x64, 0x42, 0x79, 0x12, 0x3d, 0x0a,
	0x0c, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x6c, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x0b, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x6c, 0x65, 0x64, 0x41, 0x74, 0x22, 0x80, 0x02, 0x0a,
	0x13, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x44, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x76,
	0x31, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x42, 0x04, 0xa8, 0x89, 0x31, 0x01,
	0x52, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x27, 0x0a, 0x09, 0x70, 0x61,
	0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x42, 0x0a, 0xba,
	0x89, 0x31, 0x06, 0x30, 0x2d, 0x31, 0x30, 0x30, 0x30, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53,
	0x69, 0x7a, 0x65, 0x12, 0x29, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xca, 0x89, 0x31, 0x06, 0x3c, 0x3d, 0x32,
	0x30, 0x30, 0x30, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x22,
	0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a,
	0xca, 0x89, 0x31, 0x06, 0x3c, 0x3d, 0x31, 0x30, 0x30, 0x30, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x12, 0x2b, 0x0a, 0x11, 0x76, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79,
	0x5f, 0x62, 0x79, 0x70, 0x61, 0x73, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x76,
	0x69, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x42, 0x79, 0x70, 0x61, 0x73, 0x73, 0x22,
	0x7d, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x08, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x79, 0x61, 0x6e, 0x64,
	0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x2e, 0x69, 0x61,
	0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x08, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70,
	0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x97,
	0x01, 0x0a, 0x18, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x46, 0x6f, 0x6c,
	0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x08, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0c, 0xa8,
	0x89, 0x31, 0x01, 0xca, 0x89, 0x31, 0x04, 0x3c, 0x3d, 0x35, 0x30, 0x52, 0x07, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x42, 0x0a, 0xba, 0x89, 0x31, 0x06, 0x30, 0x2d, 0x31,
	0x30, 0x30, 0x30, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x29, 0x0a,
	0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x0a, 0xca, 0x89, 0x31, 0x06, 0x3c, 0x3d, 0x32, 0x30, 0x30, 0x30, 0x52, 0x09, 0x70,
	0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x92, 0x01, 0x0a, 0x19, 0x4c, 0x69, 0x73,
	0x74, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4d, 0x0a, 0x0e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x5f, 0x66, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26,
	0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x70, 0x72,
	0x69, 0x76, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x52, 0x0d, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x46, 0x6f,
	0x6c, 0x64, 0x65, 0x72, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x61,
	0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0xa9, 0x01,
	0x0a, 0x20, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x31, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0c, 0xa8, 0x89, 0x31, 0x01, 0xca,
	0x89, 0x31, 0x04, 0x3c, 0x3d, 0x36, 0x34, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x27, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69,
	0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x42, 0x0a, 0xba, 0x89, 0x31, 0x06, 0x30, 0x2d,
	0x31, 0x30, 0x30, 0x30, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x29,
	0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x0a, 0xca, 0x89, 0x31, 0x06, 0x3c, 0x3d, 0x32, 0x30, 0x30, 0x30, 0x52, 0x09,
	0x70, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x7b, 0x0a, 0x21, 0x4c, 0x69, 0x73,
	0x74, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e,
	0x0a, 0x13, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x11, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x73, 0x12, 0x26,
	0x0a, 0x0f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67,
	0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x53, 0x0a, 0x19, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x36, 0x0a, 0x10, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x66, 0x6f,
	0x6c, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0c, 0xa8,
	0x89, 0x31, 0x01, 0xca, 0x89, 0x31, 0x04, 0x3c, 0x3d, 0x35, 0x30, 0x52, 0x0e, 0x73, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x49, 0x64, 0x22, 0x46, 0x0a, 0x1a, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x46, 0x6f, 0x6c, 0x64, 0x65,
	0x72, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x28, 0x0a, 0x10, 0x73, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x5f, 0x66, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x46, 0x6f, 0x6c, 0x64, 0x65,
	0x72, 0x49, 0x64, 0x22, 0xc2, 0x01, 0x0a, 0x1a, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x2b, 0x0a, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0c, 0xa8, 0x89, 0x31, 0x01, 0xca, 0x89, 0x31, 0x04,
	0x3c, 0x3d, 0x35, 0x30, 0x52, 0x09, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12,
	0x31, 0x0a, 0x0f, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xca, 0x89, 0x31, 0x04, 0x3c, 0x3d,
	0x35, 0x30, 0x52, 0x0e, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x49, 0x64, 0x12, 0x44, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x42, 0x04, 0xa8, 0x89, 0x31, 0x01, 0x52, 0x08,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0xb6, 0x03, 0x0a, 0x16, 0x53, 0x65, 0x74,
	0x75, 0x70, 0x44, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x2b, 0x0a, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0c, 0xa8, 0x89, 0x31, 0x01, 0xca, 0x89, 0x31,
	0x04, 0x3c, 0x3d, 0x35, 0x30, 0x52, 0x09, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64,
	0x12, 0x31, 0x0a, 0x0f, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xca, 0x89, 0x31, 0x04, 0x3c,
	0x3d, 0x35, 0x30, 0x52, 0x0e, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x49, 0x64, 0x12, 0x44, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x76, 0x31,
	0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x42, 0x04, 0xa8, 0x89, 0x31, 0x01, 0x52,
	0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x43, 0x0a, 0x19, 0x74, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xca, 0x89,
	0x31, 0x04, 0x3c, 0x3d, 0x35, 0x30, 0x52, 0x16, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x44,
	0x0a, 0x08, 0x72, 0x65, 0x66, 0x65, 0x72, 0x72, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x22, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x70, 0x72, 0x69, 0x76, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x42, 0x04, 0xa8, 0x89, 0x31, 0x01, 0x52, 0x08, 0x72, 0x65, 0x66, 0x65,
	0x72, 0x72, 0x65, 0x72, 0x12, 0x42, 0x0a, 0x17, 0x6f, 0x6e, 0x5f, 0x62, 0x65, 0x68, 0x61, 0x6c,
	0x66, 0x5f, 0x6f, 0x66, 0x5f, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0c, 0xa8, 0x89, 0x31, 0x01, 0xca, 0x89, 0x31, 0x04, 0x3c,
	0x3d, 0x35, 0x30, 0x52, 0x13, 0x6f, 0x6e, 0x42, 0x65, 0x68, 0x61, 0x6c, 0x66, 0x4f, 0x66, 0x53,
	0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x77, 0x69, 0x74, 0x68,
	0x5f, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0e, 0x77, 0x69, 0x74, 0x68, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65,
	0x73, 0x22, 0x78, 0x0a, 0x17, 0x53, 0x65, 0x74, 0x75, 0x70, 0x44, 0x65, 0x6c, 0x65, 0x67, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1d, 0x0a, 0x0a,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x3e, 0x0a, 0x08, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e,
	0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x70, 0x72, 0x69,
	0x76, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x52, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0xf3, 0x02, 0x0a, 0x17,
	0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2b, 0x0a, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0c, 0xa8, 0x89, 0x31,
	0x01, 0xca, 0x89, 0x31, 0x04, 0x3c, 0x3d, 0x35, 0x30, 0x52, 0x09, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x49, 0x64, 0x12, 0x31, 0x0a, 0x0f, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xca,
	0x89, 0x31, 0x04, 0x3c, 0x3d, 0x35, 0x30, 0x52, 0x0e, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x44, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x79, 0x61, 0x6e, 0x64,
	0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x2e, 0x69, 0x61,
	0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x42, 0x04, 0xa8,
	0x89, 0x31, 0x01, 0x52, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x43, 0x0a,
	0x19, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x08, 0xca, 0x89, 0x31, 0x04, 0x3c, 0x3d, 0x35, 0x30, 0x52, 0x16, 0x74, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x49, 0x64, 0x12, 0x44, 0x0a, 0x08, 0x72, 0x65, 0x66, 0x65, 0x72, 0x72, 0x65, 0x72, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x42, 0x04, 0xa8, 0x89, 0x31, 0x01, 0x52, 0x08,
	0x72, 0x65, 0x66, 0x65, 0x72, 0x72, 0x65, 0x72, 0x12, 0x27, 0x0a, 0x0f, 0x77, 0x69, 0x74, 0x68,
	0x5f, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0e, 0x77, 0x69, 0x74, 0x68, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65,
	0x73, 0x22, 0x79, 0x0a, 0x18, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x67,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1d, 0x0a,
	0x0a, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x3e, 0x0a, 0x08,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22,
	0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x70, 0x72,
	0x69, 0x76, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x52, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0xe5, 0x01, 0x0a,
	0x1c, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x66, 0x65,
	0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2b, 0x0a,
	0x0a, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x0c, 0xa8, 0x89, 0x31, 0x01, 0xca, 0x89, 0x31, 0x04, 0x3c, 0x3d, 0x35, 0x30, 0x52,
	0x09, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x44, 0x0a, 0x08, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x79,
	0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x70, 0x72, 0x69, 0x76,
	0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x42, 0x04, 0xa8, 0x89, 0x31, 0x01, 0x52, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x12, 0x27, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x42, 0x0a, 0xba, 0x89, 0x31, 0x06, 0x30, 0x2d, 0x31, 0x30, 0x30, 0x30, 0x52,
	0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x29, 0x0a, 0x0a, 0x70, 0x61, 0x67,
	0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xca,
	0x89, 0x31, 0x06, 0x3c, 0x3d, 0x32, 0x30, 0x30, 0x30, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x8f, 0x01, 0x0a, 0x1d, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x46, 0x0a, 0x0a, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65,
	0x6e, 0x63, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x79, 0x61, 0x6e,
	0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x2e, 0x72,
	0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e,
	0x63, 0x65, 0x52, 0x0a, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x12, 0x26,
	0x0a, 0x0f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67,
	0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0xd9, 0x02, 0x0a, 0x1e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63,
	0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2b, 0x0a, 0x0a, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0c, 0xa8,
	0x89, 0x31, 0x01, 0xca, 0x89, 0x31, 0x04, 0x3c, 0x3d, 0x35, 0x30, 0x52, 0x09, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x44, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65,
	0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x2e, 0x69, 0x61, 0x6d,
	0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x42, 0x04, 0xa8, 0x89,
	0x31, 0x01, 0x52, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x61, 0x0a, 0x13,
	0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x79, 0x61, 0x6e, 0x64,
	0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x2e, 0x72, 0x65,
	0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63,
	0x65, 0x42, 0x08, 0xc2, 0x89, 0x31, 0x04, 0x3c, 0x3d, 0x31, 0x30, 0x52, 0x12, 0x72, 0x65, 0x66,
	0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12,
	0x61, 0x0a, 0x13, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x64, 0x65, 0x6c,
	0x65, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x79,
	0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x70, 0x72, 0x69, 0x76,
	0x2e, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x66, 0x65, 0x72,
	0x65, 0x6e, 0x63, 0x65, 0x42, 0x08, 0xc2, 0x89, 0x31, 0x04, 0x3c, 0x3d, 0x31, 0x30, 0x52, 0x12,
	0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x22, 0x21, 0x0a, 0x1f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x80, 0x01, 0x0a, 0x1f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65,
	0x73, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x3e, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x79, 0x61, 0x6e,
	0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x2e, 0x69,
	0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x08,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0x68, 0x0a, 0x20, 0x47, 0x65, 0x74, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x44, 0x0a, 0x08,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22,
	0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x70, 0x72,
	0x69, 0x76, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x42, 0x04, 0xa8, 0x89, 0x31, 0x01, 0x52, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x22, 0xe4, 0x01, 0x0a, 0x23, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x44, 0x0a, 0x08, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x79,
	0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x70, 0x72, 0x69, 0x76,
	0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x42, 0x04, 0xa8, 0x89, 0x31, 0x01, 0x52, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x12, 0x77, 0x0a, 0x1d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x5f, 0x61, 0x75, 0x74,
	0x6f, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x2e, 0x69, 0x61, 0x6d, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x41, 0x75, 0x74, 0x6f, 0x45,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x1a, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x41, 0x75, 0x74, 0x6f, 0x45, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x22, 0x66, 0x0a, 0x24, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f,
	0x6c, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x12, 0x3e, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x22, 0xbd, 0x01, 0x0a, 0x21, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x44, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x79, 0x61, 0x6e, 0x64,
	0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x2e, 0x69, 0x61,
	0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x42, 0x04, 0xa8,
	0x89, 0x31, 0x01, 0x52, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x27, 0x0a,
	0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x42, 0x0a, 0xba, 0x89, 0x31, 0x06, 0x30, 0x2d, 0x31, 0x30, 0x30, 0x30, 0x52, 0x08, 0x70, 0x61,
	0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x29, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xca, 0x89, 0x31, 0x06,
	0x3c, 0x3d, 0x32, 0x30, 0x30, 0x30, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x22, 0xb8, 0x01, 0x0a, 0x22, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6a, 0x0a, 0x18, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x5f, 0x73, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x79, 0x61, 0x6e,
	0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x2e, 0x69,
	0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x6f, 0x6c, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x16, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x61, 0x67,
	0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e,
	0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x6b, 0x0a, 0x23,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x6f, 0x6c, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x44, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x76, 0x31,
	0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x42, 0x04, 0xa8, 0x89, 0x31, 0x01, 0x52,
	0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0x66, 0x0a, 0x24, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f,
	0x6c, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x12, 0x3e, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x22, 0xd9, 0x01, 0x0a, 0x1c, 0x45, 0x6e, 0x73, 0x75, 0x72, 0x65, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x33, 0x0a, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x42, 0x12, 0xc2, 0x89, 0x31, 0x06, 0x3c, 0x3d, 0x31,
	0x30, 0x30, 0x30, 0xca, 0x89, 0x31, 0x04, 0x3c, 0x3d, 0x35, 0x30, 0x52, 0x0a, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x73, 0x12, 0x44, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x79, 0x61, 0x6e, 0x64,
	0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x2e, 0x69, 0x61,
	0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x42, 0x04, 0xa8,
	0x89, 0x31, 0x01, 0x52, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x3e, 0x0a,
	0x17, 0x6f, 0x6e, 0x5f, 0x62, 0x65, 0x68, 0x61, 0x6c, 0x66, 0x5f, 0x6f, 0x66, 0x5f, 0x73, 0x75,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08,
	0xca, 0x89, 0x31, 0x04, 0x3c, 0x3d, 0x35, 0x30, 0x52, 0x13, 0x6f, 0x6e, 0x42, 0x65, 0x68, 0x61,
	0x6c, 0x66, 0x4f, 0x66, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x22, 0x80, 0x01,
	0x0a, 0x1d, 0x45, 0x6e, 0x73, 0x75, 0x72, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12,
	0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x73,
	0x12, 0x3e, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x22, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x22, 0x5e, 0x0a, 0x1d, 0x45, 0x6e, 0x73, 0x75, 0x72, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x3d, 0x0a, 0x08, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x08, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x22, 0xdc, 0x01, 0x0a, 0x1f, 0x43, 0x61, 0x6e, 0x45, 0x6e, 0x73, 0x75, 0x72, 0x65, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x33, 0x0a, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f,
	0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x42, 0x12, 0xc2, 0x89, 0x31, 0x06, 0x3c,
	0x3d, 0x31, 0x30, 0x30, 0x30, 0xca, 0x89, 0x31, 0x04, 0x3c, 0x3d, 0x35, 0x30, 0x52, 0x0a, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x73, 0x12, 0x44, 0x0a, 0x08, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x79, 0x61,
	0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x2e,
	0x69, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x42,
	0x04, 0xa8, 0x89, 0x31, 0x01, 0x52, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12,
	0x3e, 0x0a, 0x17, 0x6f, 0x6e, 0x5f, 0x62, 0x65, 0x68, 0x61, 0x6c, 0x66, 0x5f, 0x6f, 0x66, 0x5f,
	0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x08, 0xca, 0x89, 0x31, 0x04, 0x3c, 0x3d, 0x35, 0x30, 0x52, 0x13, 0x6f, 0x6e, 0x42, 0x65,
	0x68, 0x61, 0x6c, 0x66, 0x4f, 0x66, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x22,
	0x22, 0x0a, 0x20, 0x43, 0x61, 0x6e, 0x45, 0x6e, 0x73, 0x75, 0x72, 0x65, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0xbf, 0x01, 0x0a, 0x17, 0x46, 0x69, 0x6e, 0x64, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x2b, 0x0a, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x0c, 0xa8, 0x89, 0x31, 0x01, 0xca, 0x89, 0x31, 0x04, 0x3c, 0x3d, 0x35,
	0x30, 0x52, 0x09, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x31, 0x0a, 0x0f,
	0x6d, 0x69, 0x63, 0x72, 0x6f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xca, 0x89, 0x31, 0x04, 0x3c, 0x3d, 0x35, 0x30, 0x52,
	0x0e, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12,
	0x44, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x22, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x70, 0x72, 0x69, 0x76, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x42, 0x04, 0xa8, 0x89, 0x31, 0x01, 0x52, 0x08, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0x92, 0x02, 0x0a, 0x1c, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2b, 0x0a, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0c, 0xa8, 0x89, 0x31, 0x01,
	0xca, 0x89, 0x31, 0x04, 0x3c, 0x3d, 0x35, 0x30, 0x52, 0x09, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x49, 0x64, 0x12, 0x44, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x76, 0x31,
	0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x42, 0x04, 0xa8, 0x89, 0x31, 0x01, 0x52,
	0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x27, 0x0a, 0x09, 0x70, 0x61, 0x67,
	0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x42, 0x0a, 0xba, 0x89,
	0x31, 0x06, 0x30, 0x2d, 0x31, 0x30, 0x30, 0x30, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69,
	0x7a, 0x65, 0x12, 0x29, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xca, 0x89, 0x31, 0x06, 0x3c, 0x3d, 0x32, 0x30,
	0x30, 0x30, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x2b, 0x0a,
	0x11, 0x76, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x5f, 0x62, 0x79, 0x70, 0x61,
	0x73, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x76, 0x69, 0x73, 0x69, 0x62, 0x69,
	0x6c, 0x69, 0x74, 0x79, 0x42, 0x79, 0x70, 0x61, 0x73, 0x73, 0x22, 0x8f, 0x01, 0x0a, 0x1d, 0x4c,
	0x69, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x46, 0x0a, 0x0a,
	0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x26, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x70, 0x72, 0x69, 0x76, 0x2e, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x61, 0x67,
	0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e,
	0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x32, 0xf6, 0x1a, 0x0a,
	0x15, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x55, 0x0a, 0x03, 0x47, 0x65, 0x74, 0x12, 0x2b, 0x2e,
	0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x70, 0x72, 0x69,
	0x76, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x79, 0x61, 0x6e,
	0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x2e, 0x69,
	0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x65, 0x0a,
	0x04, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2d, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x76, 0x31,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x86, 0x01, 0x0a, 0x06, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x12,
	0x2e, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x70,
	0x72, 0x69, 0x76, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x26, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x70,
	0x72, 0x69, 0x76, 0x2e, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x24, 0xb2, 0xd2, 0x2a, 0x20, 0x0a, 0x15, 0x45,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x12, 0x07, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x86, 0x01,
	0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6d, 0x65, 0x12, 0x2e, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65,
	0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x2e, 0x69, 0x61, 0x6d,
	0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65,
	0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x2e, 0x6f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x22, 0x24, 0xb2, 0xd2, 0x2a, 0x20, 0x0a, 0x15, 0x52, 0x65, 0x73, 0x75, 0x6d, 0x65, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x07, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x83, 0x01, 0x0a, 0x05, 0x50, 0x61, 0x75, 0x73, 0x65,
	0x12, 0x2d, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x70, 0x72, 0x69, 0x76, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x75, 0x73,
	0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x26, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x70,
	0x72, 0x69, 0x76, 0x2e, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x23, 0xb2, 0xd2, 0x2a, 0x1f, 0x0a, 0x14, 0x50,
	0x61, 0x75, 0x73, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x12, 0x07, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x89, 0x01, 0x0a,
	0x07, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x2f, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65,
	0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x2e, 0x69, 0x61, 0x6d,
	0x2e, 0x76, 0x31, 0x2e, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x79, 0x61, 0x6e, 0x64,
	0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x2e, 0x6f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0x25, 0xb2, 0xd2, 0x2a, 0x21, 0x0a, 0x16, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12,
	0x07, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x86, 0x01, 0x0a, 0x06, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x12, 0x2e, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x2e, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x24, 0xb2, 0xd2, 0x2a,
	0x20, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x07, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x89, 0x01, 0x0a, 0x07, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x12, 0x2f, 0x2e,
	0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x70, 0x72, 0x69,
	0x76, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26,
	0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x70, 0x72,
	0x69, 0x76, 0x2e, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x25, 0xb2, 0xd2, 0x2a, 0x21, 0x0a, 0x16, 0x55, 0x70,
	0x67, 0x72, 0x61, 0x64, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x12, 0x07, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x6c, 0x0a,
	0x0c, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x12, 0x34, 0x2e,
	0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x70, 0x72, 0x69,
	0x76, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x12, 0x7c, 0x0a, 0x11, 0x4c,
	0x69, 0x73, 0x74, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x73,
	0x12, 0x32, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x70, 0x72, 0x69, 0x76, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x33, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x94, 0x01, 0x0a, 0x19, 0x4c, 0x69,
	0x73, 0x74, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x12, 0x3a, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x2e, 0x69, 0x61, 0x6d, 0x2e,
	0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x3b, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0xa1, 0x01, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x12, 0x33, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x2e, 0x69, 0x61, 0x6d, 0x2e,
	0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x46,
	0x6f, 0x6c, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x79,
	0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x70, 0x72, 0x69, 0x76,
	0x2e, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0x2e, 0xb2, 0xd2, 0x2a, 0x2a, 0x0a, 0x1a, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x0c, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x46, 0x6f,
	0x6c, 0x64, 0x65, 0x72, 0x12, 0xa1, 0x01, 0x0a, 0x0f, 0x53, 0x65, 0x74, 0x75, 0x70, 0x44, 0x65,
	0x6c, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x30, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65,
	0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x2e, 0x69, 0x61, 0x6d,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x74, 0x75, 0x70, 0x44, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x79, 0x61, 0x6e,
	0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x2e, 0x6f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0x34, 0xb2, 0xd2, 0x2a, 0x30, 0x0a, 0x17, 0x53, 0x65, 0x74, 0x75, 0x70, 0x44,
	0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x12, 0x15, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0xa4, 0x01, 0x0a, 0x10, 0x52, 0x65, 0x76,
	0x6f, 0x6b, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x31, 0x2e,
	0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x70, 0x72, 0x69,
	0x76, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x44,
	0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x26, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x70, 0x72, 0x69, 0x76, 0x2e, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x35, 0xb2, 0xd2, 0x2a, 0x31, 0x0a, 0x18,
	0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x15, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12,
	0x81, 0x01, 0x0a, 0x0e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63,
	0x65, 0x73, 0x12, 0x36, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e,
	0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x37, 0x2e, 0x79, 0x61, 0x6e,
	0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x2e, 0x69,
	0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0xbc, 0x01, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x12, 0x38, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65,
	0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x2e, 0x69, 0x61, 0x6d,
	0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x26, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x2e, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x46, 0xb2, 0xd2, 0x2a, 0x42,
	0x0a, 0x1f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52,
	0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x12, 0x1f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x7b, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x73, 0x12, 0x3a, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x70, 0x72, 0x69, 0x76, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e,
	0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x70, 0x72, 0x69,
	0x76, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12,
	0xbb, 0x01, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x73, 0x12, 0x3d, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72,
	0x6f, 0x6c, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x26, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x70, 0x72, 0x69, 0x76, 0x2e, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x42, 0xb2, 0xd2, 0x2a, 0x3e, 0x0a,
	0x24, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6f,
	0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x16, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6f,
	0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x89, 0x01,
	0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x3b,
	0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x70, 0x72,
	0x69, 0x76, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3c, 0x2e, 0x79, 0x61,
	0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x2e,
	0x69, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0xbb, 0x01, 0x0a, 0x0e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x3d, 0x2e, 0x79,
	0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x70, 0x72, 0x69, 0x76,
	0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x79, 0x61,
	0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x2e,
	0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0x42, 0xb2, 0xd2, 0x2a, 0x3e, 0x0a, 0x24, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12,
	0x16, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0xb3, 0x01, 0x0a, 0x0d, 0x45, 0x6e, 0x73, 0x75,
	0x72, 0x65, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x36, 0x2e, 0x79, 0x61, 0x6e, 0x64,
	0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x2e, 0x69, 0x61,
	0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6e, 0x73, 0x75, 0x72, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x26, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x70, 0x72, 0x69, 0x76, 0x2e, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x42, 0xb2, 0xd2, 0x2a, 0x3e, 0x0a,
	0x1d, 0x45, 0x6e, 0x73, 0x75, 0x72, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x45,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1d,
	0x45, 0x6e, 0x73, 0x75, 0x72, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x45, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x89, 0x01,
	0x0a, 0x10, 0x43, 0x61, 0x6e, 0x45, 0x6e, 0x73, 0x75, 0x72, 0x65, 0x45, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x64, 0x12, 0x39, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x61,
	0x6e, 0x45, 0x6e, 0x73, 0x75, 0x72, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x45,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3a, 0x2e,
	0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x70, 0x72, 0x69,
	0x76, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x61, 0x6e, 0x45, 0x6e, 0x73, 0x75,
	0x72, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x66, 0x0a, 0x09, 0x46, 0x69, 0x6e,
	0x64, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x12, 0x31, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x76,
	0x31, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x67, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x79, 0x61, 0x6e, 0x64,
	0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x2e, 0x69, 0x61,
	0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x67, 0x65, 0x6e,
	0x74, 0x12, 0x81, 0x01, 0x0a, 0x0e, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x12, 0x36, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x37, 0x2e, 0x79,
	0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x70, 0x72, 0x69, 0x76,
	0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x51, 0x42, 0x04, 0x50, 0x53, 0x43, 0x53, 0x5a, 0x49, 0x61,
	0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2d, 0x74, 0x65, 0x61, 0x6d, 0x2e, 0x72, 0x75, 0x2f,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x62, 0x69, 0x74, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x2f,
	0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x2d, 0x61, 0x70, 0x69, 0x2f, 0x79, 0x61, 0x6e, 0x64,
	0x65, 0x78, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x70, 0x72, 0x69, 0x76, 0x2f, 0x69, 0x61,
	0x6d, 0x2f, 0x76, 0x31, 0x3b, 0x69, 0x61, 0x6d, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_yandex_cloud_priv_iam_v1_service_control_service_proto_rawDescOnce sync.Once
	file_yandex_cloud_priv_iam_v1_service_control_service_proto_rawDescData = file_yandex_cloud_priv_iam_v1_service_control_service_proto_rawDesc
)

func file_yandex_cloud_priv_iam_v1_service_control_service_proto_rawDescGZIP() []byte {
	file_yandex_cloud_priv_iam_v1_service_control_service_proto_rawDescOnce.Do(func() {
		file_yandex_cloud_priv_iam_v1_service_control_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_yandex_cloud_priv_iam_v1_service_control_service_proto_rawDescData)
	})
	return file_yandex_cloud_priv_iam_v1_service_control_service_proto_rawDescData
}

var file_yandex_cloud_priv_iam_v1_service_control_service_proto_msgTypes = make([]protoimpl.MessageInfo, 47)
var file_yandex_cloud_priv_iam_v1_service_control_service_proto_goTypes = []interface{}{
	(*GetServiceRequest)(nil),                    // 0: yandex.cloud.priv.iam.v1.GetServiceRequest
	(*EnableServiceRequest)(nil),                 // 1: yandex.cloud.priv.iam.v1.EnableServiceRequest
	(*EnableServiceMetadata)(nil),                // 2: yandex.cloud.priv.iam.v1.EnableServiceMetadata
	(*PauseServiceRequest)(nil),                  // 3: yandex.cloud.priv.iam.v1.PauseServiceRequest
	(*PauseServiceMetadata)(nil),                 // 4: yandex.cloud.priv.iam.v1.PauseServiceMetadata
	(*ResumeServiceRequest)(nil),                 // 5: yandex.cloud.priv.iam.v1.ResumeServiceRequest
	(*ResumeServiceMetadata)(nil),                // 6: yandex.cloud.priv.iam.v1.ResumeServiceMetadata
	(*DisableServiceRequest)(nil),                // 7: yandex.cloud.priv.iam.v1.DisableServiceRequest
	(*DisableServiceMetadata)(nil),               // 8: yandex.cloud.priv.iam.v1.DisableServiceMetadata
	(*DeleteServiceRequest)(nil),                 // 9: yandex.cloud.priv.iam.v1.DeleteServiceRequest
	(*DeleteServiceMetadata)(nil),                // 10: yandex.cloud.priv.iam.v1.DeleteServiceMetadata
	(*UpgradeServiceRequest)(nil),                // 11: yandex.cloud.priv.iam.v1.UpgradeServiceRequest
	(*UpgradeServiceMetadata)(nil),               // 12: yandex.cloud.priv.iam.v1.UpgradeServiceMetadata
	(*UpgradeServicesMetadata)(nil),              // 13: yandex.cloud.priv.iam.v1.UpgradeServicesMetadata
	(*ListServicesRequest)(nil),                  // 14: yandex.cloud.priv.iam.v1.ListServicesRequest
	(*ListServicesResponse)(nil),                 // 15: yandex.cloud.priv.iam.v1.ListServicesResponse
	(*ListSystemFoldersRequest)(nil),             // 16: yandex.cloud.priv.iam.v1.ListSystemFoldersRequest
	(*ListSystemFoldersResponse)(nil),            // 17: yandex.cloud.priv.iam.v1.ListSystemFoldersResponse
	(*ListSystemServiceAccountsRequest)(nil),     // 18: yandex.cloud.priv.iam.v1.ListSystemServiceAccountsRequest
	(*ListSystemServiceAccountsResponse)(nil),    // 19: yandex.cloud.priv.iam.v1.ListSystemServiceAccountsResponse
	(*DeleteSystemFolderRequest)(nil),            // 20: yandex.cloud.priv.iam.v1.DeleteSystemFolderRequest
	(*DeleteSystemFolderMetadata)(nil),           // 21: yandex.cloud.priv.iam.v1.DeleteSystemFolderMetadata
	(*ResolveServiceAgentRequest)(nil),           // 22: yandex.cloud.priv.iam.v1.ResolveServiceAgentRequest
	(*SetupDelegationRequest)(nil),               // 23: yandex.cloud.priv.iam.v1.SetupDelegationRequest
	(*SetupDelegationMetadata)(nil),              // 24: yandex.cloud.priv.iam.v1.SetupDelegationMetadata
	(*RevokeDelegationRequest)(nil),              // 25: yandex.cloud.priv.iam.v1.RevokeDelegationRequest
	(*RevokeDelegationMetadata)(nil),             // 26: yandex.cloud.priv.iam.v1.RevokeDelegationMetadata
	(*ListServiceReferencesRequest)(nil),         // 27: yandex.cloud.priv.iam.v1.ListServiceReferencesRequest
	(*ListServiceReferencesResponse)(nil),        // 28: yandex.cloud.priv.iam.v1.ListServiceReferencesResponse
	(*UpdateServiceReferencesRequest)(nil),       // 29: yandex.cloud.priv.iam.v1.UpdateServiceReferencesRequest
	(*UpdateServiceReferencesResponse)(nil),      // 30: yandex.cloud.priv.iam.v1.UpdateServiceReferencesResponse
	(*UpdateServiceReferencesMetadata)(nil),      // 31: yandex.cloud.priv.iam.v1.UpdateServiceReferencesMetadata
	(*GetServiceControlSettingsRequest)(nil),     // 32: yandex.cloud.priv.iam.v1.GetServiceControlSettingsRequest
	(*UpdateServiceControlSettingsRequest)(nil),  // 33: yandex.cloud.priv.iam.v1.UpdateServiceControlSettingsRequest
	(*UpdateServiceControlSettingsMetadata)(nil), // 34: yandex.cloud.priv.iam.v1.UpdateServiceControlSettingsMetadata
	(*ListServiceControlSettingsRequest)(nil),    // 35: yandex.cloud.priv.iam.v1.ListServiceControlSettingsRequest
	(*ListServiceControlSettingsResponse)(nil),   // 36: yandex.cloud.priv.iam.v1.ListServiceControlSettingsResponse
	(*DeleteServiceControlSettingsRequest)(nil),  // 37: yandex.cloud.priv.iam.v1.DeleteServiceControlSettingsRequest
	(*DeleteServiceControlSettingsMetadata)(nil), // 38: yandex.cloud.priv.iam.v1.DeleteServiceControlSettingsMetadata
	(*EnsureServicesEnabledRequest)(nil),         // 39: yandex.cloud.priv.iam.v1.EnsureServicesEnabledRequest
	(*EnsureServicesEnabledMetadata)(nil),        // 40: yandex.cloud.priv.iam.v1.EnsureServicesEnabledMetadata
	(*EnsureServicesEnabledResponse)(nil),        // 41: yandex.cloud.priv.iam.v1.EnsureServicesEnabledResponse
	(*CanEnsureServicesEnabledRequest)(nil),      // 42: yandex.cloud.priv.iam.v1.CanEnsureServicesEnabledRequest
	(*CanEnsureServicesEnabledResponse)(nil),     // 43: yandex.cloud.priv.iam.v1.CanEnsureServicesEnabledResponse
	(*FindServiceAgentRequest)(nil),              // 44: yandex.cloud.priv.iam.v1.FindServiceAgentRequest
	(*ListServiceOperationsRequest)(nil),         // 45: yandex.cloud.priv.iam.v1.ListServiceOperationsRequest
	(*ListServiceOperationsResponse)(nil),        // 46: yandex.cloud.priv.iam.v1.ListServiceOperationsResponse
	(*Resource)(nil),                             // 47: yandex.cloud.priv.iam.v1.Resource
	(*timestamppb.Timestamp)(nil),                // 48: google.protobuf.Timestamp
	(*Service)(nil),                              // 49: yandex.cloud.priv.iam.v1.Service
	(*SystemFolder)(nil),                         // 50: yandex.cloud.priv.iam.v1.SystemFolder
	(*reference.Reference)(nil),                  // 51: yandex.cloud.priv.reference.Reference
	(*ServicesAutoEnableSettings)(nil),           // 52: yandex.cloud.priv.iam.v1.ServicesAutoEnableSettings
	(*ServiceControlSettings)(nil),               // 53: yandex.cloud.priv.iam.v1.ServiceControlSettings
	(*operation.Operation)(nil),                  // 54: yandex.cloud.priv.operation.Operation
	(*ServiceAgent)(nil),                         // 55: yandex.cloud.priv.iam.v1.ServiceAgent
}
var file_yandex_cloud_priv_iam_v1_service_control_service_proto_depIdxs = []int32{
	47, // 0: yandex.cloud.priv.iam.v1.GetServiceRequest.resource:type_name -> yandex.cloud.priv.iam.v1.Resource
	47, // 1: yandex.cloud.priv.iam.v1.EnableServiceRequest.resource:type_name -> yandex.cloud.priv.iam.v1.Resource
	47, // 2: yandex.cloud.priv.iam.v1.EnableServiceMetadata.resource:type_name -> yandex.cloud.priv.iam.v1.Resource
	47, // 3: yandex.cloud.priv.iam.v1.PauseServiceRequest.resource:type_name -> yandex.cloud.priv.iam.v1.Resource
	47, // 4: yandex.cloud.priv.iam.v1.PauseServiceMetadata.resource:type_name -> yandex.cloud.priv.iam.v1.Resource
	47, // 5: yandex.cloud.priv.iam.v1.ResumeServiceRequest.resource:type_name -> yandex.cloud.priv.iam.v1.Resource
	47, // 6: yandex.cloud.priv.iam.v1.ResumeServiceMetadata.resource:type_name -> yandex.cloud.priv.iam.v1.Resource
	47, // 7: yandex.cloud.priv.iam.v1.DisableServiceRequest.resource:type_name -> yandex.cloud.priv.iam.v1.Resource
	47, // 8: yandex.cloud.priv.iam.v1.DisableServiceMetadata.resource:type_name -> yandex.cloud.priv.iam.v1.Resource
	47, // 9: yandex.cloud.priv.iam.v1.DeleteServiceRequest.resource:type_name -> yandex.cloud.priv.iam.v1.Resource
	47, // 10: yandex.cloud.priv.iam.v1.DeleteServiceMetadata.resource:type_name -> yandex.cloud.priv.iam.v1.Resource
	47, // 11: yandex.cloud.priv.iam.v1.UpgradeServiceRequest.resource:type_name -> yandex.cloud.priv.iam.v1.Resource
	47, // 12: yandex.cloud.priv.iam.v1.UpgradeServiceMetadata.resource:type_name -> yandex.cloud.priv.iam.v1.Resource
	48, // 13: yandex.cloud.priv.iam.v1.UpgradeServicesMetadata.cancelled_at:type_name -> google.protobuf.Timestamp
	47, // 14: yandex.cloud.priv.iam.v1.ListServicesRequest.resource:type_name -> yandex.cloud.priv.iam.v1.Resource
	49, // 15: yandex.cloud.priv.iam.v1.ListServicesResponse.services:type_name -> yandex.cloud.priv.iam.v1.Service
	50, // 16: yandex.cloud.priv.iam.v1.ListSystemFoldersResponse.system_folders:type_name -> yandex.cloud.priv.iam.v1.SystemFolder
	47, // 17: yandex.cloud.priv.iam.v1.ResolveServiceAgentRequest.resource:type_name -> yandex.cloud.priv.iam.v1.Resource
	47, // 18: yandex.cloud.priv.iam.v1.SetupDelegationRequest.resource:type_name -> yandex.cloud.priv.iam.v1.Resource
	47, // 19: yandex.cloud.priv.iam.v1.SetupDelegationRequest.referrer:type_name -> yandex.cloud.priv.iam.v1.Resource
	47, // 20: yandex.cloud.priv.iam.v1.SetupDelegationMetadata.resource:type_name -> yandex.cloud.priv.iam.v1.Resource
	47, // 21: yandex.cloud.priv.iam.v1.RevokeDelegationRequest.resource:type_name -> yandex.cloud.priv.iam.v1.Resource
	47, // 22: yandex.cloud.priv.iam.v1.RevokeDelegationRequest.referrer:type_name -> yandex.cloud.priv.iam.v1.Resource
	47, // 23: yandex.cloud.priv.iam.v1.RevokeDelegationMetadata.resource:type_name -> yandex.cloud.priv.iam.v1.Resource
	47, // 24: yandex.cloud.priv.iam.v1.ListServiceReferencesRequest.resource:type_name -> yandex.cloud.priv.iam.v1.Resource
	51, // 25: yandex.cloud.priv.iam.v1.ListServiceReferencesResponse.references:type_name -> yandex.cloud.priv.reference.Reference
	47, // 26: yandex.cloud.priv.iam.v1.UpdateServiceReferencesRequest.resource:type_name -> yandex.cloud.priv.iam.v1.Resource
	51, // 27: yandex.cloud.priv.iam.v1.UpdateServiceReferencesRequest.reference_additions:type_name -> yandex.cloud.priv.reference.Reference
	51, // 28: yandex.cloud.priv.iam.v1.UpdateServiceReferencesRequest.reference_deletions:type_name -> yandex.cloud.priv.reference.Reference
	47, // 29: yandex.cloud.priv.iam.v1.UpdateServiceReferencesMetadata.resource:type_name -> yandex.cloud.priv.iam.v1.Resource
	47, // 30: yandex.cloud.priv.iam.v1.GetServiceControlSettingsRequest.resource:type_name -> yandex.cloud.priv.iam.v1.Resource
	47, // 31: yandex.cloud.priv.iam.v1.UpdateServiceControlSettingsRequest.resource:type_name -> yandex.cloud.priv.iam.v1.Resource
	52, // 32: yandex.cloud.priv.iam.v1.UpdateServiceControlSettingsRequest.services_auto_enable_settings:type_name -> yandex.cloud.priv.iam.v1.ServicesAutoEnableSettings
	47, // 33: yandex.cloud.priv.iam.v1.UpdateServiceControlSettingsMetadata.resource:type_name -> yandex.cloud.priv.iam.v1.Resource
	47, // 34: yandex.cloud.priv.iam.v1.ListServiceControlSettingsRequest.resource:type_name -> yandex.cloud.priv.iam.v1.Resource
	53, // 35: yandex.cloud.priv.iam.v1.ListServiceControlSettingsResponse.service_control_settings:type_name -> yandex.cloud.priv.iam.v1.ServiceControlSettings
	47, // 36: yandex.cloud.priv.iam.v1.DeleteServiceControlSettingsRequest.resource:type_name -> yandex.cloud.priv.iam.v1.Resource
	47, // 37: yandex.cloud.priv.iam.v1.DeleteServiceControlSettingsMetadata.resource:type_name -> yandex.cloud.priv.iam.v1.Resource
	47, // 38: yandex.cloud.priv.iam.v1.EnsureServicesEnabledRequest.resource:type_name -> yandex.cloud.priv.iam.v1.Resource
	47, // 39: yandex.cloud.priv.iam.v1.EnsureServicesEnabledMetadata.resource:type_name -> yandex.cloud.priv.iam.v1.Resource
	49, // 40: yandex.cloud.priv.iam.v1.EnsureServicesEnabledResponse.services:type_name -> yandex.cloud.priv.iam.v1.Service
	47, // 41: yandex.cloud.priv.iam.v1.CanEnsureServicesEnabledRequest.resource:type_name -> yandex.cloud.priv.iam.v1.Resource
	47, // 42: yandex.cloud.priv.iam.v1.FindServiceAgentRequest.resource:type_name -> yandex.cloud.priv.iam.v1.Resource
	47, // 43: yandex.cloud.priv.iam.v1.ListServiceOperationsRequest.resource:type_name -> yandex.cloud.priv.iam.v1.Resource
	54, // 44: yandex.cloud.priv.iam.v1.ListServiceOperationsResponse.operations:type_name -> yandex.cloud.priv.operation.Operation
	0,  // 45: yandex.cloud.priv.iam.v1.ServiceControlService.Get:input_type -> yandex.cloud.priv.iam.v1.GetServiceRequest
	14, // 46: yandex.cloud.priv.iam.v1.ServiceControlService.List:input_type -> yandex.cloud.priv.iam.v1.ListServicesRequest
	1,  // 47: yandex.cloud.priv.iam.v1.ServiceControlService.Enable:input_type -> yandex.cloud.priv.iam.v1.EnableServiceRequest
	5,  // 48: yandex.cloud.priv.iam.v1.ServiceControlService.Resume:input_type -> yandex.cloud.priv.iam.v1.ResumeServiceRequest
	3,  // 49: yandex.cloud.priv.iam.v1.ServiceControlService.Pause:input_type -> yandex.cloud.priv.iam.v1.PauseServiceRequest
	7,  // 50: yandex.cloud.priv.iam.v1.ServiceControlService.Disable:input_type -> yandex.cloud.priv.iam.v1.DisableServiceRequest
	9,  // 51: yandex.cloud.priv.iam.v1.ServiceControlService.Delete:input_type -> yandex.cloud.priv.iam.v1.DeleteServiceRequest
	11, // 52: yandex.cloud.priv.iam.v1.ServiceControlService.Upgrade:input_type -> yandex.cloud.priv.iam.v1.UpgradeServiceRequest
	22, // 53: yandex.cloud.priv.iam.v1.ServiceControlService.ResolveAgent:input_type -> yandex.cloud.priv.iam.v1.ResolveServiceAgentRequest
	16, // 54: yandex.cloud.priv.iam.v1.ServiceControlService.ListSystemFolders:input_type -> yandex.cloud.priv.iam.v1.ListSystemFoldersRequest
	18, // 55: yandex.cloud.priv.iam.v1.ServiceControlService.ListSystemServiceAccounts:input_type -> yandex.cloud.priv.iam.v1.ListSystemServiceAccountsRequest
	20, // 56: yandex.cloud.priv.iam.v1.ServiceControlService.DeleteSystemFolder:input_type -> yandex.cloud.priv.iam.v1.DeleteSystemFolderRequest
	23, // 57: yandex.cloud.priv.iam.v1.ServiceControlService.SetupDelegation:input_type -> yandex.cloud.priv.iam.v1.SetupDelegationRequest
	25, // 58: yandex.cloud.priv.iam.v1.ServiceControlService.RevokeDelegation:input_type -> yandex.cloud.priv.iam.v1.RevokeDelegationRequest
	27, // 59: yandex.cloud.priv.iam.v1.ServiceControlService.ListReferences:input_type -> yandex.cloud.priv.iam.v1.ListServiceReferencesRequest
	29, // 60: yandex.cloud.priv.iam.v1.ServiceControlService.UpdateReferences:input_type -> yandex.cloud.priv.iam.v1.UpdateServiceReferencesRequest
	32, // 61: yandex.cloud.priv.iam.v1.ServiceControlService.GetSettings:input_type -> yandex.cloud.priv.iam.v1.GetServiceControlSettingsRequest
	33, // 62: yandex.cloud.priv.iam.v1.ServiceControlService.UpdateSettings:input_type -> yandex.cloud.priv.iam.v1.UpdateServiceControlSettingsRequest
	35, // 63: yandex.cloud.priv.iam.v1.ServiceControlService.ListSettings:input_type -> yandex.cloud.priv.iam.v1.ListServiceControlSettingsRequest
	37, // 64: yandex.cloud.priv.iam.v1.ServiceControlService.DeleteSettings:input_type -> yandex.cloud.priv.iam.v1.DeleteServiceControlSettingsRequest
	39, // 65: yandex.cloud.priv.iam.v1.ServiceControlService.EnsureEnabled:input_type -> yandex.cloud.priv.iam.v1.EnsureServicesEnabledRequest
	42, // 66: yandex.cloud.priv.iam.v1.ServiceControlService.CanEnsureEnabled:input_type -> yandex.cloud.priv.iam.v1.CanEnsureServicesEnabledRequest
	44, // 67: yandex.cloud.priv.iam.v1.ServiceControlService.FindAgent:input_type -> yandex.cloud.priv.iam.v1.FindServiceAgentRequest
	45, // 68: yandex.cloud.priv.iam.v1.ServiceControlService.ListOperations:input_type -> yandex.cloud.priv.iam.v1.ListServiceOperationsRequest
	49, // 69: yandex.cloud.priv.iam.v1.ServiceControlService.Get:output_type -> yandex.cloud.priv.iam.v1.Service
	15, // 70: yandex.cloud.priv.iam.v1.ServiceControlService.List:output_type -> yandex.cloud.priv.iam.v1.ListServicesResponse
	54, // 71: yandex.cloud.priv.iam.v1.ServiceControlService.Enable:output_type -> yandex.cloud.priv.operation.Operation
	54, // 72: yandex.cloud.priv.iam.v1.ServiceControlService.Resume:output_type -> yandex.cloud.priv.operation.Operation
	54, // 73: yandex.cloud.priv.iam.v1.ServiceControlService.Pause:output_type -> yandex.cloud.priv.operation.Operation
	54, // 74: yandex.cloud.priv.iam.v1.ServiceControlService.Disable:output_type -> yandex.cloud.priv.operation.Operation
	54, // 75: yandex.cloud.priv.iam.v1.ServiceControlService.Delete:output_type -> yandex.cloud.priv.operation.Operation
	54, // 76: yandex.cloud.priv.iam.v1.ServiceControlService.Upgrade:output_type -> yandex.cloud.priv.operation.Operation
	55, // 77: yandex.cloud.priv.iam.v1.ServiceControlService.ResolveAgent:output_type -> yandex.cloud.priv.iam.v1.ServiceAgent
	17, // 78: yandex.cloud.priv.iam.v1.ServiceControlService.ListSystemFolders:output_type -> yandex.cloud.priv.iam.v1.ListSystemFoldersResponse
	19, // 79: yandex.cloud.priv.iam.v1.ServiceControlService.ListSystemServiceAccounts:output_type -> yandex.cloud.priv.iam.v1.ListSystemServiceAccountsResponse
	54, // 80: yandex.cloud.priv.iam.v1.ServiceControlService.DeleteSystemFolder:output_type -> yandex.cloud.priv.operation.Operation
	54, // 81: yandex.cloud.priv.iam.v1.ServiceControlService.SetupDelegation:output_type -> yandex.cloud.priv.operation.Operation
	54, // 82: yandex.cloud.priv.iam.v1.ServiceControlService.RevokeDelegation:output_type -> yandex.cloud.priv.operation.Operation
	28, // 83: yandex.cloud.priv.iam.v1.ServiceControlService.ListReferences:output_type -> yandex.cloud.priv.iam.v1.ListServiceReferencesResponse
	54, // 84: yandex.cloud.priv.iam.v1.ServiceControlService.UpdateReferences:output_type -> yandex.cloud.priv.operation.Operation
	53, // 85: yandex.cloud.priv.iam.v1.ServiceControlService.GetSettings:output_type -> yandex.cloud.priv.iam.v1.ServiceControlSettings
	54, // 86: yandex.cloud.priv.iam.v1.ServiceControlService.UpdateSettings:output_type -> yandex.cloud.priv.operation.Operation
	36, // 87: yandex.cloud.priv.iam.v1.ServiceControlService.ListSettings:output_type -> yandex.cloud.priv.iam.v1.ListServiceControlSettingsResponse
	54, // 88: yandex.cloud.priv.iam.v1.ServiceControlService.DeleteSettings:output_type -> yandex.cloud.priv.operation.Operation
	54, // 89: yandex.cloud.priv.iam.v1.ServiceControlService.EnsureEnabled:output_type -> yandex.cloud.priv.operation.Operation
	43, // 90: yandex.cloud.priv.iam.v1.ServiceControlService.CanEnsureEnabled:output_type -> yandex.cloud.priv.iam.v1.CanEnsureServicesEnabledResponse
	55, // 91: yandex.cloud.priv.iam.v1.ServiceControlService.FindAgent:output_type -> yandex.cloud.priv.iam.v1.ServiceAgent
	46, // 92: yandex.cloud.priv.iam.v1.ServiceControlService.ListOperations:output_type -> yandex.cloud.priv.iam.v1.ListServiceOperationsResponse
	69, // [69:93] is the sub-list for method output_type
	45, // [45:69] is the sub-list for method input_type
	45, // [45:45] is the sub-list for extension type_name
	45, // [45:45] is the sub-list for extension extendee
	0,  // [0:45] is the sub-list for field type_name
}

func init() { file_yandex_cloud_priv_iam_v1_service_control_service_proto_init() }
func file_yandex_cloud_priv_iam_v1_service_control_service_proto_init() {
	if File_yandex_cloud_priv_iam_v1_service_control_service_proto != nil {
		return
	}
	file_yandex_cloud_priv_iam_v1_resource_proto_init()
	file_yandex_cloud_priv_iam_v1_service_control_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_yandex_cloud_priv_iam_v1_service_control_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetServiceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_priv_iam_v1_service_control_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnableServiceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_priv_iam_v1_service_control_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnableServiceMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_priv_iam_v1_service_control_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PauseServiceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_priv_iam_v1_service_control_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PauseServiceMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_priv_iam_v1_service_control_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResumeServiceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_priv_iam_v1_service_control_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResumeServiceMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_priv_iam_v1_service_control_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DisableServiceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_priv_iam_v1_service_control_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DisableServiceMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_priv_iam_v1_service_control_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteServiceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_priv_iam_v1_service_control_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteServiceMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_priv_iam_v1_service_control_service_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpgradeServiceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_priv_iam_v1_service_control_service_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpgradeServiceMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_priv_iam_v1_service_control_service_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpgradeServicesMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_priv_iam_v1_service_control_service_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListServicesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_priv_iam_v1_service_control_service_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListServicesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_priv_iam_v1_service_control_service_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListSystemFoldersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_priv_iam_v1_service_control_service_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListSystemFoldersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_priv_iam_v1_service_control_service_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListSystemServiceAccountsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_priv_iam_v1_service_control_service_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListSystemServiceAccountsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_priv_iam_v1_service_control_service_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteSystemFolderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_priv_iam_v1_service_control_service_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteSystemFolderMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_priv_iam_v1_service_control_service_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResolveServiceAgentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_priv_iam_v1_service_control_service_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetupDelegationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_priv_iam_v1_service_control_service_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetupDelegationMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_priv_iam_v1_service_control_service_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RevokeDelegationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_priv_iam_v1_service_control_service_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RevokeDelegationMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_priv_iam_v1_service_control_service_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListServiceReferencesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_priv_iam_v1_service_control_service_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListServiceReferencesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_priv_iam_v1_service_control_service_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateServiceReferencesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_priv_iam_v1_service_control_service_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateServiceReferencesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_priv_iam_v1_service_control_service_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateServiceReferencesMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_priv_iam_v1_service_control_service_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetServiceControlSettingsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_priv_iam_v1_service_control_service_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateServiceControlSettingsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_priv_iam_v1_service_control_service_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateServiceControlSettingsMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_priv_iam_v1_service_control_service_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListServiceControlSettingsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_priv_iam_v1_service_control_service_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListServiceControlSettingsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_priv_iam_v1_service_control_service_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteServiceControlSettingsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_priv_iam_v1_service_control_service_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteServiceControlSettingsMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_priv_iam_v1_service_control_service_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnsureServicesEnabledRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_priv_iam_v1_service_control_service_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnsureServicesEnabledMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_priv_iam_v1_service_control_service_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnsureServicesEnabledResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_priv_iam_v1_service_control_service_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CanEnsureServicesEnabledRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_priv_iam_v1_service_control_service_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CanEnsureServicesEnabledResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_priv_iam_v1_service_control_service_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindServiceAgentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_priv_iam_v1_service_control_service_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListServiceOperationsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_priv_iam_v1_service_control_service_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListServiceOperationsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_yandex_cloud_priv_iam_v1_service_control_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   47,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_yandex_cloud_priv_iam_v1_service_control_service_proto_goTypes,
		DependencyIndexes: file_yandex_cloud_priv_iam_v1_service_control_service_proto_depIdxs,
		MessageInfos:      file_yandex_cloud_priv_iam_v1_service_control_service_proto_msgTypes,
	}.Build()
	File_yandex_cloud_priv_iam_v1_service_control_service_proto = out.File
	file_yandex_cloud_priv_iam_v1_service_control_service_proto_rawDesc = nil
	file_yandex_cloud_priv_iam_v1_service_control_service_proto_goTypes = nil
	file_yandex_cloud_priv_iam_v1_service_control_service_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ServiceControlServiceClient is the client API for ServiceControlService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ServiceControlServiceClient interface {
	Get(ctx context.Context, in *GetServiceRequest, opts ...grpc.CallOption) (*Service, error)
	List(ctx context.Context, in *ListServicesRequest, opts ...grpc.CallOption) (*ListServicesResponse, error)
	Enable(ctx context.Context, in *EnableServiceRequest, opts ...grpc.CallOption) (*operation.Operation, error)
	Resume(ctx context.Context, in *ResumeServiceRequest, opts ...grpc.CallOption) (*operation.Operation, error)
	Pause(ctx context.Context, in *PauseServiceRequest, opts ...grpc.CallOption) (*operation.Operation, error)
	Disable(ctx context.Context, in *DisableServiceRequest, opts ...grpc.CallOption) (*operation.Operation, error)
	Delete(ctx context.Context, in *DeleteServiceRequest, opts ...grpc.CallOption) (*operation.Operation, error)
	Upgrade(ctx context.Context, in *UpgradeServiceRequest, opts ...grpc.CallOption) (*operation.Operation, error)
	ResolveAgent(ctx context.Context, in *ResolveServiceAgentRequest, opts ...grpc.CallOption) (*ServiceAgent, error)
	ListSystemFolders(ctx context.Context, in *ListSystemFoldersRequest, opts ...grpc.CallOption) (*ListSystemFoldersResponse, error)
	ListSystemServiceAccounts(ctx context.Context, in *ListSystemServiceAccountsRequest, opts ...grpc.CallOption) (*ListSystemServiceAccountsResponse, error)
	DeleteSystemFolder(ctx context.Context, in *DeleteSystemFolderRequest, opts ...grpc.CallOption) (*operation.Operation, error)
	SetupDelegation(ctx context.Context, in *SetupDelegationRequest, opts ...grpc.CallOption) (*operation.Operation, error)
	RevokeDelegation(ctx context.Context, in *RevokeDelegationRequest, opts ...grpc.CallOption) (*operation.Operation, error)
	ListReferences(ctx context.Context, in *ListServiceReferencesRequest, opts ...grpc.CallOption) (*ListServiceReferencesResponse, error)
	UpdateReferences(ctx context.Context, in *UpdateServiceReferencesRequest, opts ...grpc.CallOption) (*operation.Operation, error)
	GetSettings(ctx context.Context, in *GetServiceControlSettingsRequest, opts ...grpc.CallOption) (*ServiceControlSettings, error)
	UpdateSettings(ctx context.Context, in *UpdateServiceControlSettingsRequest, opts ...grpc.CallOption) (*operation.Operation, error)
	ListSettings(ctx context.Context, in *ListServiceControlSettingsRequest, opts ...grpc.CallOption) (*ListServiceControlSettingsResponse, error)
	DeleteSettings(ctx context.Context, in *DeleteServiceControlSettingsRequest, opts ...grpc.CallOption) (*operation.Operation, error)
	EnsureEnabled(ctx context.Context, in *EnsureServicesEnabledRequest, opts ...grpc.CallOption) (*operation.Operation, error)
	CanEnsureEnabled(ctx context.Context, in *CanEnsureServicesEnabledRequest, opts ...grpc.CallOption) (*CanEnsureServicesEnabledResponse, error)
	// FindAgent is an analogue of ResolveAgent method for services to implement Delegate Access Pattern https://wiki.yandex-team.ru/users/anton-dedov/delegateaccess-pattern/.
	// The difference between FindAgent and ResolveAgent is only in an authorization check:
	// * FindAgent checks permission service-control.services.findAgent on gizmo of service from request.
	// * ResolveAgent checks permission service-control.services.resolveAgent on resource (cloud) from request.
	FindAgent(ctx context.Context, in *FindServiceAgentRequest, opts ...grpc.CallOption) (*ServiceAgent, error)
	ListOperations(ctx context.Context, in *ListServiceOperationsRequest, opts ...grpc.CallOption) (*ListServiceOperationsResponse, error)
}

type serviceControlServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewServiceControlServiceClient(cc grpc.ClientConnInterface) ServiceControlServiceClient {
	return &serviceControlServiceClient{cc}
}

func (c *serviceControlServiceClient) Get(ctx context.Context, in *GetServiceRequest, opts ...grpc.CallOption) (*Service, error) {
	out := new(Service)
	err := c.cc.Invoke(ctx, "/yandex.cloud.priv.iam.v1.ServiceControlService/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceControlServiceClient) List(ctx context.Context, in *ListServicesRequest, opts ...grpc.CallOption) (*ListServicesResponse, error) {
	out := new(ListServicesResponse)
	err := c.cc.Invoke(ctx, "/yandex.cloud.priv.iam.v1.ServiceControlService/List", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceControlServiceClient) Enable(ctx context.Context, in *EnableServiceRequest, opts ...grpc.CallOption) (*operation.Operation, error) {
	out := new(operation.Operation)
	err := c.cc.Invoke(ctx, "/yandex.cloud.priv.iam.v1.ServiceControlService/Enable", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceControlServiceClient) Resume(ctx context.Context, in *ResumeServiceRequest, opts ...grpc.CallOption) (*operation.Operation, error) {
	out := new(operation.Operation)
	err := c.cc.Invoke(ctx, "/yandex.cloud.priv.iam.v1.ServiceControlService/Resume", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceControlServiceClient) Pause(ctx context.Context, in *PauseServiceRequest, opts ...grpc.CallOption) (*operation.Operation, error) {
	out := new(operation.Operation)
	err := c.cc.Invoke(ctx, "/yandex.cloud.priv.iam.v1.ServiceControlService/Pause", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceControlServiceClient) Disable(ctx context.Context, in *DisableServiceRequest, opts ...grpc.CallOption) (*operation.Operation, error) {
	out := new(operation.Operation)
	err := c.cc.Invoke(ctx, "/yandex.cloud.priv.iam.v1.ServiceControlService/Disable", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceControlServiceClient) Delete(ctx context.Context, in *DeleteServiceRequest, opts ...grpc.CallOption) (*operation.Operation, error) {
	out := new(operation.Operation)
	err := c.cc.Invoke(ctx, "/yandex.cloud.priv.iam.v1.ServiceControlService/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceControlServiceClient) Upgrade(ctx context.Context, in *UpgradeServiceRequest, opts ...grpc.CallOption) (*operation.Operation, error) {
	out := new(operation.Operation)
	err := c.cc.Invoke(ctx, "/yandex.cloud.priv.iam.v1.ServiceControlService/Upgrade", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceControlServiceClient) ResolveAgent(ctx context.Context, in *ResolveServiceAgentRequest, opts ...grpc.CallOption) (*ServiceAgent, error) {
	out := new(ServiceAgent)
	err := c.cc.Invoke(ctx, "/yandex.cloud.priv.iam.v1.ServiceControlService/ResolveAgent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceControlServiceClient) ListSystemFolders(ctx context.Context, in *ListSystemFoldersRequest, opts ...grpc.CallOption) (*ListSystemFoldersResponse, error) {
	out := new(ListSystemFoldersResponse)
	err := c.cc.Invoke(ctx, "/yandex.cloud.priv.iam.v1.ServiceControlService/ListSystemFolders", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceControlServiceClient) ListSystemServiceAccounts(ctx context.Context, in *ListSystemServiceAccountsRequest, opts ...grpc.CallOption) (*ListSystemServiceAccountsResponse, error) {
	out := new(ListSystemServiceAccountsResponse)
	err := c.cc.Invoke(ctx, "/yandex.cloud.priv.iam.v1.ServiceControlService/ListSystemServiceAccounts", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceControlServiceClient) DeleteSystemFolder(ctx context.Context, in *DeleteSystemFolderRequest, opts ...grpc.CallOption) (*operation.Operation, error) {
	out := new(operation.Operation)
	err := c.cc.Invoke(ctx, "/yandex.cloud.priv.iam.v1.ServiceControlService/DeleteSystemFolder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceControlServiceClient) SetupDelegation(ctx context.Context, in *SetupDelegationRequest, opts ...grpc.CallOption) (*operation.Operation, error) {
	out := new(operation.Operation)
	err := c.cc.Invoke(ctx, "/yandex.cloud.priv.iam.v1.ServiceControlService/SetupDelegation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceControlServiceClient) RevokeDelegation(ctx context.Context, in *RevokeDelegationRequest, opts ...grpc.CallOption) (*operation.Operation, error) {
	out := new(operation.Operation)
	err := c.cc.Invoke(ctx, "/yandex.cloud.priv.iam.v1.ServiceControlService/RevokeDelegation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceControlServiceClient) ListReferences(ctx context.Context, in *ListServiceReferencesRequest, opts ...grpc.CallOption) (*ListServiceReferencesResponse, error) {
	out := new(ListServiceReferencesResponse)
	err := c.cc.Invoke(ctx, "/yandex.cloud.priv.iam.v1.ServiceControlService/ListReferences", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceControlServiceClient) UpdateReferences(ctx context.Context, in *UpdateServiceReferencesRequest, opts ...grpc.CallOption) (*operation.Operation, error) {
	out := new(operation.Operation)
	err := c.cc.Invoke(ctx, "/yandex.cloud.priv.iam.v1.ServiceControlService/UpdateReferences", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceControlServiceClient) GetSettings(ctx context.Context, in *GetServiceControlSettingsRequest, opts ...grpc.CallOption) (*ServiceControlSettings, error) {
	out := new(ServiceControlSettings)
	err := c.cc.Invoke(ctx, "/yandex.cloud.priv.iam.v1.ServiceControlService/GetSettings", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceControlServiceClient) UpdateSettings(ctx context.Context, in *UpdateServiceControlSettingsRequest, opts ...grpc.CallOption) (*operation.Operation, error) {
	out := new(operation.Operation)
	err := c.cc.Invoke(ctx, "/yandex.cloud.priv.iam.v1.ServiceControlService/UpdateSettings", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceControlServiceClient) ListSettings(ctx context.Context, in *ListServiceControlSettingsRequest, opts ...grpc.CallOption) (*ListServiceControlSettingsResponse, error) {
	out := new(ListServiceControlSettingsResponse)
	err := c.cc.Invoke(ctx, "/yandex.cloud.priv.iam.v1.ServiceControlService/ListSettings", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceControlServiceClient) DeleteSettings(ctx context.Context, in *DeleteServiceControlSettingsRequest, opts ...grpc.CallOption) (*operation.Operation, error) {
	out := new(operation.Operation)
	err := c.cc.Invoke(ctx, "/yandex.cloud.priv.iam.v1.ServiceControlService/DeleteSettings", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceControlServiceClient) EnsureEnabled(ctx context.Context, in *EnsureServicesEnabledRequest, opts ...grpc.CallOption) (*operation.Operation, error) {
	out := new(operation.Operation)
	err := c.cc.Invoke(ctx, "/yandex.cloud.priv.iam.v1.ServiceControlService/EnsureEnabled", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceControlServiceClient) CanEnsureEnabled(ctx context.Context, in *CanEnsureServicesEnabledRequest, opts ...grpc.CallOption) (*CanEnsureServicesEnabledResponse, error) {
	out := new(CanEnsureServicesEnabledResponse)
	err := c.cc.Invoke(ctx, "/yandex.cloud.priv.iam.v1.ServiceControlService/CanEnsureEnabled", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceControlServiceClient) FindAgent(ctx context.Context, in *FindServiceAgentRequest, opts ...grpc.CallOption) (*ServiceAgent, error) {
	out := new(ServiceAgent)
	err := c.cc.Invoke(ctx, "/yandex.cloud.priv.iam.v1.ServiceControlService/FindAgent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceControlServiceClient) ListOperations(ctx context.Context, in *ListServiceOperationsRequest, opts ...grpc.CallOption) (*ListServiceOperationsResponse, error) {
	out := new(ListServiceOperationsResponse)
	err := c.cc.Invoke(ctx, "/yandex.cloud.priv.iam.v1.ServiceControlService/ListOperations", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ServiceControlServiceServer is the server API for ServiceControlService service.
type ServiceControlServiceServer interface {
	Get(context.Context, *GetServiceRequest) (*Service, error)
	List(context.Context, *ListServicesRequest) (*ListServicesResponse, error)
	Enable(context.Context, *EnableServiceRequest) (*operation.Operation, error)
	Resume(context.Context, *ResumeServiceRequest) (*operation.Operation, error)
	Pause(context.Context, *PauseServiceRequest) (*operation.Operation, error)
	Disable(context.Context, *DisableServiceRequest) (*operation.Operation, error)
	Delete(context.Context, *DeleteServiceRequest) (*operation.Operation, error)
	Upgrade(context.Context, *UpgradeServiceRequest) (*operation.Operation, error)
	ResolveAgent(context.Context, *ResolveServiceAgentRequest) (*ServiceAgent, error)
	ListSystemFolders(context.Context, *ListSystemFoldersRequest) (*ListSystemFoldersResponse, error)
	ListSystemServiceAccounts(context.Context, *ListSystemServiceAccountsRequest) (*ListSystemServiceAccountsResponse, error)
	DeleteSystemFolder(context.Context, *DeleteSystemFolderRequest) (*operation.Operation, error)
	SetupDelegation(context.Context, *SetupDelegationRequest) (*operation.Operation, error)
	RevokeDelegation(context.Context, *RevokeDelegationRequest) (*operation.Operation, error)
	ListReferences(context.Context, *ListServiceReferencesRequest) (*ListServiceReferencesResponse, error)
	UpdateReferences(context.Context, *UpdateServiceReferencesRequest) (*operation.Operation, error)
	GetSettings(context.Context, *GetServiceControlSettingsRequest) (*ServiceControlSettings, error)
	UpdateSettings(context.Context, *UpdateServiceControlSettingsRequest) (*operation.Operation, error)
	ListSettings(context.Context, *ListServiceControlSettingsRequest) (*ListServiceControlSettingsResponse, error)
	DeleteSettings(context.Context, *DeleteServiceControlSettingsRequest) (*operation.Operation, error)
	EnsureEnabled(context.Context, *EnsureServicesEnabledRequest) (*operation.Operation, error)
	CanEnsureEnabled(context.Context, *CanEnsureServicesEnabledRequest) (*CanEnsureServicesEnabledResponse, error)
	// FindAgent is an analogue of ResolveAgent method for services to implement Delegate Access Pattern https://wiki.yandex-team.ru/users/anton-dedov/delegateaccess-pattern/.
	// The difference between FindAgent and ResolveAgent is only in an authorization check:
	// * FindAgent checks permission service-control.services.findAgent on gizmo of service from request.
	// * ResolveAgent checks permission service-control.services.resolveAgent on resource (cloud) from request.
	FindAgent(context.Context, *FindServiceAgentRequest) (*ServiceAgent, error)
	ListOperations(context.Context, *ListServiceOperationsRequest) (*ListServiceOperationsResponse, error)
}

// UnimplementedServiceControlServiceServer can be embedded to have forward compatible implementations.
type UnimplementedServiceControlServiceServer struct {
}

func (*UnimplementedServiceControlServiceServer) Get(context.Context, *GetServiceRequest) (*Service, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Get not implemented")
}
func (*UnimplementedServiceControlServiceServer) List(context.Context, *ListServicesRequest) (*ListServicesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method List not implemented")
}
func (*UnimplementedServiceControlServiceServer) Enable(context.Context, *EnableServiceRequest) (*operation.Operation, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Enable not implemented")
}
func (*UnimplementedServiceControlServiceServer) Resume(context.Context, *ResumeServiceRequest) (*operation.Operation, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Resume not implemented")
}
func (*UnimplementedServiceControlServiceServer) Pause(context.Context, *PauseServiceRequest) (*operation.Operation, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Pause not implemented")
}
func (*UnimplementedServiceControlServiceServer) Disable(context.Context, *DisableServiceRequest) (*operation.Operation, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Disable not implemented")
}
func (*UnimplementedServiceControlServiceServer) Delete(context.Context, *DeleteServiceRequest) (*operation.Operation, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Delete not implemented")
}
func (*UnimplementedServiceControlServiceServer) Upgrade(context.Context, *UpgradeServiceRequest) (*operation.Operation, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Upgrade not implemented")
}
func (*UnimplementedServiceControlServiceServer) ResolveAgent(context.Context, *ResolveServiceAgentRequest) (*ServiceAgent, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ResolveAgent not implemented")
}
func (*UnimplementedServiceControlServiceServer) ListSystemFolders(context.Context, *ListSystemFoldersRequest) (*ListSystemFoldersResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListSystemFolders not implemented")
}
func (*UnimplementedServiceControlServiceServer) ListSystemServiceAccounts(context.Context, *ListSystemServiceAccountsRequest) (*ListSystemServiceAccountsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListSystemServiceAccounts not implemented")
}
func (*UnimplementedServiceControlServiceServer) DeleteSystemFolder(context.Context, *DeleteSystemFolderRequest) (*operation.Operation, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteSystemFolder not implemented")
}
func (*UnimplementedServiceControlServiceServer) SetupDelegation(context.Context, *SetupDelegationRequest) (*operation.Operation, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetupDelegation not implemented")
}
func (*UnimplementedServiceControlServiceServer) RevokeDelegation(context.Context, *RevokeDelegationRequest) (*operation.Operation, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RevokeDelegation not implemented")
}
func (*UnimplementedServiceControlServiceServer) ListReferences(context.Context, *ListServiceReferencesRequest) (*ListServiceReferencesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListReferences not implemented")
}
func (*UnimplementedServiceControlServiceServer) UpdateReferences(context.Context, *UpdateServiceReferencesRequest) (*operation.Operation, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateReferences not implemented")
}
func (*UnimplementedServiceControlServiceServer) GetSettings(context.Context, *GetServiceControlSettingsRequest) (*ServiceControlSettings, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetSettings not implemented")
}
func (*UnimplementedServiceControlServiceServer) UpdateSettings(context.Context, *UpdateServiceControlSettingsRequest) (*operation.Operation, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateSettings not implemented")
}
func (*UnimplementedServiceControlServiceServer) ListSettings(context.Context, *ListServiceControlSettingsRequest) (*ListServiceControlSettingsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListSettings not implemented")
}
func (*UnimplementedServiceControlServiceServer) DeleteSettings(context.Context, *DeleteServiceControlSettingsRequest) (*operation.Operation, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteSettings not implemented")
}
func (*UnimplementedServiceControlServiceServer) EnsureEnabled(context.Context, *EnsureServicesEnabledRequest) (*operation.Operation, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EnsureEnabled not implemented")
}
func (*UnimplementedServiceControlServiceServer) CanEnsureEnabled(context.Context, *CanEnsureServicesEnabledRequest) (*CanEnsureServicesEnabledResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CanEnsureEnabled not implemented")
}
func (*UnimplementedServiceControlServiceServer) FindAgent(context.Context, *FindServiceAgentRequest) (*ServiceAgent, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FindAgent not implemented")
}
func (*UnimplementedServiceControlServiceServer) ListOperations(context.Context, *ListServiceOperationsRequest) (*ListServiceOperationsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListOperations not implemented")
}

func RegisterServiceControlServiceServer(s *grpc.Server, srv ServiceControlServiceServer) {
	s.RegisterService(&_ServiceControlService_serviceDesc, srv)
}

func _ServiceControlService_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServiceControlServiceServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/yandex.cloud.priv.iam.v1.ServiceControlService/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServiceControlServiceServer).Get(ctx, req.(*GetServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ServiceControlService_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListServicesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServiceControlServiceServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/yandex.cloud.priv.iam.v1.ServiceControlService/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServiceControlServiceServer).List(ctx, req.(*ListServicesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ServiceControlService_Enable_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EnableServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServiceControlServiceServer).Enable(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/yandex.cloud.priv.iam.v1.ServiceControlService/Enable",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServiceControlServiceServer).Enable(ctx, req.(*EnableServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ServiceControlService_Resume_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ResumeServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServiceControlServiceServer).Resume(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/yandex.cloud.priv.iam.v1.ServiceControlService/Resume",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServiceControlServiceServer).Resume(ctx, req.(*ResumeServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ServiceControlService_Pause_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PauseServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServiceControlServiceServer).Pause(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/yandex.cloud.priv.iam.v1.ServiceControlService/Pause",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServiceControlServiceServer).Pause(ctx, req.(*PauseServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ServiceControlService_Disable_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DisableServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServiceControlServiceServer).Disable(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/yandex.cloud.priv.iam.v1.ServiceControlService/Disable",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServiceControlServiceServer).Disable(ctx, req.(*DisableServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ServiceControlService_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServiceControlServiceServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/yandex.cloud.priv.iam.v1.ServiceControlService/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServiceControlServiceServer).Delete(ctx, req.(*DeleteServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ServiceControlService_Upgrade_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpgradeServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServiceControlServiceServer).Upgrade(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/yandex.cloud.priv.iam.v1.ServiceControlService/Upgrade",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServiceControlServiceServer).Upgrade(ctx, req.(*UpgradeServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ServiceControlService_ResolveAgent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ResolveServiceAgentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServiceControlServiceServer).ResolveAgent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/yandex.cloud.priv.iam.v1.ServiceControlService/ResolveAgent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServiceControlServiceServer).ResolveAgent(ctx, req.(*ResolveServiceAgentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ServiceControlService_ListSystemFolders_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListSystemFoldersRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServiceControlServiceServer).ListSystemFolders(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/yandex.cloud.priv.iam.v1.ServiceControlService/ListSystemFolders",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServiceControlServiceServer).ListSystemFolders(ctx, req.(*ListSystemFoldersRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ServiceControlService_ListSystemServiceAccounts_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListSystemServiceAccountsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServiceControlServiceServer).ListSystemServiceAccounts(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/yandex.cloud.priv.iam.v1.ServiceControlService/ListSystemServiceAccounts",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServiceControlServiceServer).ListSystemServiceAccounts(ctx, req.(*ListSystemServiceAccountsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ServiceControlService_DeleteSystemFolder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteSystemFolderRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServiceControlServiceServer).DeleteSystemFolder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/yandex.cloud.priv.iam.v1.ServiceControlService/DeleteSystemFolder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServiceControlServiceServer).DeleteSystemFolder(ctx, req.(*DeleteSystemFolderRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ServiceControlService_SetupDelegation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetupDelegationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServiceControlServiceServer).SetupDelegation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/yandex.cloud.priv.iam.v1.ServiceControlService/SetupDelegation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServiceControlServiceServer).SetupDelegation(ctx, req.(*SetupDelegationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ServiceControlService_RevokeDelegation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RevokeDelegationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServiceControlServiceServer).RevokeDelegation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/yandex.cloud.priv.iam.v1.ServiceControlService/RevokeDelegation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServiceControlServiceServer).RevokeDelegation(ctx, req.(*RevokeDelegationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ServiceControlService_ListReferences_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListServiceReferencesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServiceControlServiceServer).ListReferences(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/yandex.cloud.priv.iam.v1.ServiceControlService/ListReferences",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServiceControlServiceServer).ListReferences(ctx, req.(*ListServiceReferencesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ServiceControlService_UpdateReferences_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateServiceReferencesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServiceControlServiceServer).UpdateReferences(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/yandex.cloud.priv.iam.v1.ServiceControlService/UpdateReferences",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServiceControlServiceServer).UpdateReferences(ctx, req.(*UpdateServiceReferencesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ServiceControlService_GetSettings_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetServiceControlSettingsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServiceControlServiceServer).GetSettings(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/yandex.cloud.priv.iam.v1.ServiceControlService/GetSettings",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServiceControlServiceServer).GetSettings(ctx, req.(*GetServiceControlSettingsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ServiceControlService_UpdateSettings_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateServiceControlSettingsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServiceControlServiceServer).UpdateSettings(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/yandex.cloud.priv.iam.v1.ServiceControlService/UpdateSettings",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServiceControlServiceServer).UpdateSettings(ctx, req.(*UpdateServiceControlSettingsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ServiceControlService_ListSettings_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListServiceControlSettingsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServiceControlServiceServer).ListSettings(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/yandex.cloud.priv.iam.v1.ServiceControlService/ListSettings",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServiceControlServiceServer).ListSettings(ctx, req.(*ListServiceControlSettingsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ServiceControlService_DeleteSettings_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteServiceControlSettingsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServiceControlServiceServer).DeleteSettings(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/yandex.cloud.priv.iam.v1.ServiceControlService/DeleteSettings",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServiceControlServiceServer).DeleteSettings(ctx, req.(*DeleteServiceControlSettingsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ServiceControlService_EnsureEnabled_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EnsureServicesEnabledRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServiceControlServiceServer).EnsureEnabled(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/yandex.cloud.priv.iam.v1.ServiceControlService/EnsureEnabled",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServiceControlServiceServer).EnsureEnabled(ctx, req.(*EnsureServicesEnabledRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ServiceControlService_CanEnsureEnabled_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CanEnsureServicesEnabledRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServiceControlServiceServer).CanEnsureEnabled(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/yandex.cloud.priv.iam.v1.ServiceControlService/CanEnsureEnabled",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServiceControlServiceServer).CanEnsureEnabled(ctx, req.(*CanEnsureServicesEnabledRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ServiceControlService_FindAgent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FindServiceAgentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServiceControlServiceServer).FindAgent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/yandex.cloud.priv.iam.v1.ServiceControlService/FindAgent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServiceControlServiceServer).FindAgent(ctx, req.(*FindServiceAgentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ServiceControlService_ListOperations_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListServiceOperationsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServiceControlServiceServer).ListOperations(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/yandex.cloud.priv.iam.v1.ServiceControlService/ListOperations",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServiceControlServiceServer).ListOperations(ctx, req.(*ListServiceOperationsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ServiceControlService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "yandex.cloud.priv.iam.v1.ServiceControlService",
	HandlerType: (*ServiceControlServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Get",
			Handler:    _ServiceControlService_Get_Handler,
		},
		{
			MethodName: "List",
			Handler:    _ServiceControlService_List_Handler,
		},
		{
			MethodName: "Enable",
			Handler:    _ServiceControlService_Enable_Handler,
		},
		{
			MethodName: "Resume",
			Handler:    _ServiceControlService_Resume_Handler,
		},
		{
			MethodName: "Pause",
			Handler:    _ServiceControlService_Pause_Handler,
		},
		{
			MethodName: "Disable",
			Handler:    _ServiceControlService_Disable_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _ServiceControlService_Delete_Handler,
		},
		{
			MethodName: "Upgrade",
			Handler:    _ServiceControlService_Upgrade_Handler,
		},
		{
			MethodName: "ResolveAgent",
			Handler:    _ServiceControlService_ResolveAgent_Handler,
		},
		{
			MethodName: "ListSystemFolders",
			Handler:    _ServiceControlService_ListSystemFolders_Handler,
		},
		{
			MethodName: "ListSystemServiceAccounts",
			Handler:    _ServiceControlService_ListSystemServiceAccounts_Handler,
		},
		{
			MethodName: "DeleteSystemFolder",
			Handler:    _ServiceControlService_DeleteSystemFolder_Handler,
		},
		{
			MethodName: "SetupDelegation",
			Handler:    _ServiceControlService_SetupDelegation_Handler,
		},
		{
			MethodName: "RevokeDelegation",
			Handler:    _ServiceControlService_RevokeDelegation_Handler,
		},
		{
			MethodName: "ListReferences",
			Handler:    _ServiceControlService_ListReferences_Handler,
		},
		{
			MethodName: "UpdateReferences",
			Handler:    _ServiceControlService_UpdateReferences_Handler,
		},
		{
			MethodName: "GetSettings",
			Handler:    _ServiceControlService_GetSettings_Handler,
		},
		{
			MethodName: "UpdateSettings",
			Handler:    _ServiceControlService_UpdateSettings_Handler,
		},
		{
			MethodName: "ListSettings",
			Handler:    _ServiceControlService_ListSettings_Handler,
		},
		{
			MethodName: "DeleteSettings",
			Handler:    _ServiceControlService_DeleteSettings_Handler,
		},
		{
			MethodName: "EnsureEnabled",
			Handler:    _ServiceControlService_EnsureEnabled_Handler,
		},
		{
			MethodName: "CanEnsureEnabled",
			Handler:    _ServiceControlService_CanEnsureEnabled_Handler,
		},
		{
			MethodName: "FindAgent",
			Handler:    _ServiceControlService_FindAgent_Handler,
		},
		{
			MethodName: "ListOperations",
			Handler:    _ServiceControlService_ListOperations_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "yandex/cloud/priv/iam/v1/service_control_service.proto",
}
