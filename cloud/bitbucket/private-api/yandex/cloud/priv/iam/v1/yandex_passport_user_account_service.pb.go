// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.21.3
// source: yandex/cloud/priv/iam/v1/yandex_passport_user_account_service.proto

package iam

import (
	_ "github.com/doublecloud/tross/cloud/bitbucket/common-api/yandex/cloud/api"
	_ "github.com/doublecloud/tross/cloud/bitbucket/private-api/yandex/cloud/priv"
	operation "github.com/doublecloud/tross/cloud/bitbucket/private-api/yandex/cloud/priv/operation"
	context "context"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetUserAccountByLoginRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Login string `protobuf:"bytes,1,opt,name=login,proto3" json:"login,omitempty"`
}

func (x *GetUserAccountByLoginRequest) Reset() {
	*x = GetUserAccountByLoginRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_priv_iam_v1_yandex_passport_user_account_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserAccountByLoginRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserAccountByLoginRequest) ProtoMessage() {}

func (x *GetUserAccountByLoginRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_priv_iam_v1_yandex_passport_user_account_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserAccountByLoginRequest.ProtoReflect.Descriptor instead.
func (*GetUserAccountByLoginRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_priv_iam_v1_yandex_passport_user_account_service_proto_rawDescGZIP(), []int{0}
}

func (x *GetUserAccountByLoginRequest) GetLogin() string {
	if x != nil {
		return x.Login
	}
	return ""
}

type GetUserAccountByUidRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid int64 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
}

func (x *GetUserAccountByUidRequest) Reset() {
	*x = GetUserAccountByUidRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_priv_iam_v1_yandex_passport_user_account_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserAccountByUidRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserAccountByUidRequest) ProtoMessage() {}

func (x *GetUserAccountByUidRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_priv_iam_v1_yandex_passport_user_account_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserAccountByUidRequest.ProtoReflect.Descriptor instead.
func (*GetUserAccountByUidRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_priv_iam_v1_yandex_passport_user_account_service_proto_rawDescGZIP(), []int{1}
}

func (x *GetUserAccountByUidRequest) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

type AddUserAccountsMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddUserAccountsMetadata) Reset() {
	*x = AddUserAccountsMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_priv_iam_v1_yandex_passport_user_account_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddUserAccountsMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddUserAccountsMetadata) ProtoMessage() {}

func (x *AddUserAccountsMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_priv_iam_v1_yandex_passport_user_account_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddUserAccountsMetadata.ProtoReflect.Descriptor instead.
func (*AddUserAccountsMetadata) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_priv_iam_v1_yandex_passport_user_account_service_proto_rawDescGZIP(), []int{2}
}

type AddUserAccountsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ValidUsers   []*UserAccount  `protobuf:"bytes,1,rep,name=valid_users,json=validUsers,proto3" json:"valid_users,omitempty"`
	InvalidUsers []*PassportUser `protobuf:"bytes,2,rep,name=invalid_users,json=invalidUsers,proto3" json:"invalid_users,omitempty"`
}

func (x *AddUserAccountsResponse) Reset() {
	*x = AddUserAccountsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_priv_iam_v1_yandex_passport_user_account_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddUserAccountsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddUserAccountsResponse) ProtoMessage() {}

func (x *AddUserAccountsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_priv_iam_v1_yandex_passport_user_account_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddUserAccountsResponse.ProtoReflect.Descriptor instead.
func (*AddUserAccountsResponse) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_priv_iam_v1_yandex_passport_user_account_service_proto_rawDescGZIP(), []int{3}
}

func (x *AddUserAccountsResponse) GetValidUsers() []*UserAccount {
	if x != nil {
		return x.ValidUsers
	}
	return nil
}

func (x *AddUserAccountsResponse) GetInvalidUsers() []*PassportUser {
	if x != nil {
		return x.InvalidUsers
	}
	return nil
}

type AddPassportUserAccountsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PassportUsers []*PassportUser `protobuf:"bytes,1,rep,name=passport_users,json=passportUsers,proto3" json:"passport_users,omitempty"`
}

func (x *AddPassportUserAccountsRequest) Reset() {
	*x = AddPassportUserAccountsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_priv_iam_v1_yandex_passport_user_account_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddPassportUserAccountsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddPassportUserAccountsRequest) ProtoMessage() {}

func (x *AddPassportUserAccountsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_priv_iam_v1_yandex_passport_user_account_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddPassportUserAccountsRequest.ProtoReflect.Descriptor instead.
func (*AddPassportUserAccountsRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_priv_iam_v1_yandex_passport_user_account_service_proto_rawDescGZIP(), []int{4}
}

func (x *AddPassportUserAccountsRequest) GetPassportUsers() []*PassportUser {
	if x != nil {
		return x.PassportUsers
	}
	return nil
}

type PassportUser struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Identity:
	//
	//	*PassportUser_Login
	//	*PassportUser_Uid
	Identity isPassportUser_Identity `protobuf_oneof:"identity"`
}

func (x *PassportUser) Reset() {
	*x = PassportUser{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_priv_iam_v1_yandex_passport_user_account_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PassportUser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PassportUser) ProtoMessage() {}

func (x *PassportUser) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_priv_iam_v1_yandex_passport_user_account_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PassportUser.ProtoReflect.Descriptor instead.
func (*PassportUser) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_priv_iam_v1_yandex_passport_user_account_service_proto_rawDescGZIP(), []int{5}
}

func (m *PassportUser) GetIdentity() isPassportUser_Identity {
	if m != nil {
		return m.Identity
	}
	return nil
}

func (x *PassportUser) GetLogin() string {
	if x, ok := x.GetIdentity().(*PassportUser_Login); ok {
		return x.Login
	}
	return ""
}

func (x *PassportUser) GetUid() int64 {
	if x, ok := x.GetIdentity().(*PassportUser_Uid); ok {
		return x.Uid
	}
	return 0
}

type isPassportUser_Identity interface {
	isPassportUser_Identity()
}

type PassportUser_Login struct {
	// Yandex.Passport login or Yandex.Passport email
	Login string `protobuf:"bytes,1,opt,name=login,proto3,oneof"`
}

type PassportUser_Uid struct {
	Uid int64 `protobuf:"varint,2,opt,name=uid,proto3,oneof"`
}

func (*PassportUser_Login) isPassportUser_Identity() {}

func (*PassportUser_Uid) isPassportUser_Identity() {}

var File_yandex_cloud_priv_iam_v1_yandex_passport_user_account_service_proto protoreflect.FileDescriptor

var file_yandex_cloud_priv_iam_v1_yandex_passport_user_account_service_proto_rawDesc = []byte{
	0x0a, 0x43, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x70,
	0x72, 0x69, 0x76, 0x2f, 0x69, 0x61, 0x6d, 0x2f, 0x76, 0x31, 0x2f, 0x79, 0x61, 0x6e, 0x64, 0x65,
	0x78, 0x5f, 0x70, 0x61, 0x73, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x18, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x1a,
	0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x79,
	0x61, 0x6e, 0x64, 0x65, 0x78, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x2b, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x70, 0x72,
	0x69, 0x76, 0x2f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x6f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2b, 0x79, 0x61,
	0x6e, 0x64, 0x65, 0x78, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x70, 0x72, 0x69, 0x76, 0x2f,
	0x69, 0x61, 0x6d, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x22, 0x79, 0x61, 0x6e, 0x64, 0x65,
	0x78, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x70, 0x72, 0x69, 0x76, 0x2f, 0x76, 0x61, 0x6c,
	0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x43, 0x0a,
	0x1c, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42,
	0x79, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a,
	0x05, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0d, 0xa8, 0x89,
	0x31, 0x01, 0xca, 0x89, 0x31, 0x05, 0x3c, 0x3d, 0x31, 0x30, 0x30, 0x52, 0x05, 0x6c, 0x6f, 0x67,
	0x69, 0x6e, 0x22, 0x36, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x42, 0x79, 0x55, 0x69, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x18, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x06, 0xba,
	0x89, 0x31, 0x02, 0x3e, 0x30, 0x52, 0x03, 0x75, 0x69, 0x64, 0x22, 0x19, 0x0a, 0x17, 0x41, 0x64,
	0x64, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0xae, 0x01, 0x0a, 0x17, 0x41, 0x64, 0x64, 0x55, 0x73, 0x65,
	0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x46, 0x0a, 0x0b, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x76,
	0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x0a, 0x76,
	0x61, 0x6c, 0x69, 0x64, 0x55, 0x73, 0x65, 0x72, 0x73, 0x12, 0x4b, 0x0a, 0x0d, 0x69, 0x6e, 0x76,
	0x61, 0x6c, 0x69, 0x64, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x26, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x70, 0x72, 0x69, 0x76, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x73, 0x73,
	0x70, 0x6f, 0x72, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x0c, 0x69, 0x6e, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x55, 0x73, 0x65, 0x72, 0x73, 0x22, 0x7a, 0x0a, 0x1e, 0x41, 0x64, 0x64, 0x50, 0x61, 0x73,
	0x73, 0x70, 0x6f, 0x72, 0x74, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x58, 0x0a, 0x0e, 0x70, 0x61, 0x73, 0x73,
	0x70, 0x6f, 0x72, 0x74, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x26, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x70, 0x72, 0x69, 0x76, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x73, 0x73,
	0x70, 0x6f, 0x72, 0x74, 0x55, 0x73, 0x65, 0x72, 0x42, 0x09, 0xc2, 0x89, 0x31, 0x05, 0x31, 0x2d,
	0x31, 0x30, 0x30, 0x52, 0x0d, 0x70, 0x61, 0x73, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x73, 0x22, 0x5e, 0x0a, 0x0c, 0x50, 0x61, 0x73, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x12, 0x20, 0x0a, 0x05, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x08, 0xca, 0x89, 0x31, 0x04, 0x32, 0x2d, 0x36, 0x33, 0x48, 0x00, 0x52, 0x05, 0x6c,
	0x6f, 0x67, 0x69, 0x6e, 0x12, 0x1a, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x42, 0x06, 0xba, 0x89, 0x31, 0x02, 0x3e, 0x30, 0x48, 0x00, 0x52, 0x03, 0x75, 0x69, 0x64,
	0x42, 0x10, 0x0a, 0x08, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x04, 0x80, 0x83,
	0x31, 0x01, 0x32, 0xdb, 0x03, 0x0a, 0x20, 0x59, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x50, 0x61, 0x73,
	0x73, 0x70, 0x6f, 0x72, 0x74, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x9f, 0x01, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x42,
	0x79, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x36, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x42, 0x79, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25,
	0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x70, 0x72,
	0x69, 0x76, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x32, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2c, 0x12, 0x2a, 0x2f,
	0x69, 0x61, 0x6d, 0x2f, 0x76, 0x31, 0x2f, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x50, 0x61, 0x73,
	0x73, 0x70, 0x6f, 0x72, 0x74, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x73, 0x3a, 0x62, 0x79, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x67, 0x0a, 0x08, 0x47, 0x65, 0x74,
	0x42, 0x79, 0x55, 0x69, 0x64, 0x12, 0x34, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42,
	0x79, 0x55, 0x69, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x79, 0x61,
	0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x2e,
	0x69, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0xab, 0x01, 0x0a, 0x0f, 0x41, 0x64, 0x64, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x12, 0x38, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x76,
	0x31, 0x2e, 0x41, 0x64, 0x64, 0x50, 0x61, 0x73, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x26, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x70, 0x72, 0x69, 0x76, 0x2e, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x36, 0xb2, 0xd2, 0x2a, 0x32, 0x0a, 0x17,
	0x41, 0x64, 0x64, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x17, 0x41, 0x64, 0x64, 0x55, 0x73, 0x65, 0x72,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x42, 0x53, 0x42, 0x06, 0x50, 0x59, 0x50, 0x55, 0x41, 0x53, 0x5a, 0x49, 0x61, 0x2e, 0x79, 0x61,
	0x6e, 0x64, 0x65, 0x78, 0x2d, 0x74, 0x65, 0x61, 0x6d, 0x2e, 0x72, 0x75, 0x2f, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2f, 0x62, 0x69, 0x74, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x2f, 0x70, 0x72, 0x69,
	0x76, 0x61, 0x74, 0x65, 0x2d, 0x61, 0x70, 0x69, 0x2f, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2f,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x70, 0x72, 0x69, 0x76, 0x2f, 0x69, 0x61, 0x6d, 0x2f, 0x76,
	0x31, 0x3b, 0x69, 0x61, 0x6d, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_yandex_cloud_priv_iam_v1_yandex_passport_user_account_service_proto_rawDescOnce sync.Once
	file_yandex_cloud_priv_iam_v1_yandex_passport_user_account_service_proto_rawDescData = file_yandex_cloud_priv_iam_v1_yandex_passport_user_account_service_proto_rawDesc
)

func file_yandex_cloud_priv_iam_v1_yandex_passport_user_account_service_proto_rawDescGZIP() []byte {
	file_yandex_cloud_priv_iam_v1_yandex_passport_user_account_service_proto_rawDescOnce.Do(func() {
		file_yandex_cloud_priv_iam_v1_yandex_passport_user_account_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_yandex_cloud_priv_iam_v1_yandex_passport_user_account_service_proto_rawDescData)
	})
	return file_yandex_cloud_priv_iam_v1_yandex_passport_user_account_service_proto_rawDescData
}

var file_yandex_cloud_priv_iam_v1_yandex_passport_user_account_service_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_yandex_cloud_priv_iam_v1_yandex_passport_user_account_service_proto_goTypes = []interface{}{
	(*GetUserAccountByLoginRequest)(nil),   // 0: yandex.cloud.priv.iam.v1.GetUserAccountByLoginRequest
	(*GetUserAccountByUidRequest)(nil),     // 1: yandex.cloud.priv.iam.v1.GetUserAccountByUidRequest
	(*AddUserAccountsMetadata)(nil),        // 2: yandex.cloud.priv.iam.v1.AddUserAccountsMetadata
	(*AddUserAccountsResponse)(nil),        // 3: yandex.cloud.priv.iam.v1.AddUserAccountsResponse
	(*AddPassportUserAccountsRequest)(nil), // 4: yandex.cloud.priv.iam.v1.AddPassportUserAccountsRequest
	(*PassportUser)(nil),                   // 5: yandex.cloud.priv.iam.v1.PassportUser
	(*UserAccount)(nil),                    // 6: yandex.cloud.priv.iam.v1.UserAccount
	(*operation.Operation)(nil),            // 7: yandex.cloud.priv.operation.Operation
}
var file_yandex_cloud_priv_iam_v1_yandex_passport_user_account_service_proto_depIdxs = []int32{
	6, // 0: yandex.cloud.priv.iam.v1.AddUserAccountsResponse.valid_users:type_name -> yandex.cloud.priv.iam.v1.UserAccount
	5, // 1: yandex.cloud.priv.iam.v1.AddUserAccountsResponse.invalid_users:type_name -> yandex.cloud.priv.iam.v1.PassportUser
	5, // 2: yandex.cloud.priv.iam.v1.AddPassportUserAccountsRequest.passport_users:type_name -> yandex.cloud.priv.iam.v1.PassportUser
	0, // 3: yandex.cloud.priv.iam.v1.YandexPassportUserAccountService.GetByLogin:input_type -> yandex.cloud.priv.iam.v1.GetUserAccountByLoginRequest
	1, // 4: yandex.cloud.priv.iam.v1.YandexPassportUserAccountService.GetByUid:input_type -> yandex.cloud.priv.iam.v1.GetUserAccountByUidRequest
	4, // 5: yandex.cloud.priv.iam.v1.YandexPassportUserAccountService.AddUserAccounts:input_type -> yandex.cloud.priv.iam.v1.AddPassportUserAccountsRequest
	6, // 6: yandex.cloud.priv.iam.v1.YandexPassportUserAccountService.GetByLogin:output_type -> yandex.cloud.priv.iam.v1.UserAccount
	6, // 7: yandex.cloud.priv.iam.v1.YandexPassportUserAccountService.GetByUid:output_type -> yandex.cloud.priv.iam.v1.UserAccount
	7, // 8: yandex.cloud.priv.iam.v1.YandexPassportUserAccountService.AddUserAccounts:output_type -> yandex.cloud.priv.operation.Operation
	6, // [6:9] is the sub-list for method output_type
	3, // [3:6] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_yandex_cloud_priv_iam_v1_yandex_passport_user_account_service_proto_init() }
func file_yandex_cloud_priv_iam_v1_yandex_passport_user_account_service_proto_init() {
	if File_yandex_cloud_priv_iam_v1_yandex_passport_user_account_service_proto != nil {
		return
	}
	file_yandex_cloud_priv_iam_v1_user_account_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_yandex_cloud_priv_iam_v1_yandex_passport_user_account_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserAccountByLoginRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_priv_iam_v1_yandex_passport_user_account_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserAccountByUidRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_priv_iam_v1_yandex_passport_user_account_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddUserAccountsMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_priv_iam_v1_yandex_passport_user_account_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddUserAccountsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_priv_iam_v1_yandex_passport_user_account_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddPassportUserAccountsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_priv_iam_v1_yandex_passport_user_account_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PassportUser); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_yandex_cloud_priv_iam_v1_yandex_passport_user_account_service_proto_msgTypes[5].OneofWrappers = []interface{}{
		(*PassportUser_Login)(nil),
		(*PassportUser_Uid)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_yandex_cloud_priv_iam_v1_yandex_passport_user_account_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_yandex_cloud_priv_iam_v1_yandex_passport_user_account_service_proto_goTypes,
		DependencyIndexes: file_yandex_cloud_priv_iam_v1_yandex_passport_user_account_service_proto_depIdxs,
		MessageInfos:      file_yandex_cloud_priv_iam_v1_yandex_passport_user_account_service_proto_msgTypes,
	}.Build()
	File_yandex_cloud_priv_iam_v1_yandex_passport_user_account_service_proto = out.File
	file_yandex_cloud_priv_iam_v1_yandex_passport_user_account_service_proto_rawDesc = nil
	file_yandex_cloud_priv_iam_v1_yandex_passport_user_account_service_proto_goTypes = nil
	file_yandex_cloud_priv_iam_v1_yandex_passport_user_account_service_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// YandexPassportUserAccountServiceClient is the client API for YandexPassportUserAccountService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type YandexPassportUserAccountServiceClient interface {
	GetByLogin(ctx context.Context, in *GetUserAccountByLoginRequest, opts ...grpc.CallOption) (*UserAccount, error)
	GetByUid(ctx context.Context, in *GetUserAccountByUidRequest, opts ...grpc.CallOption) (*UserAccount, error)
	// create subject_id for Yandex.Passport user identifier.
	AddUserAccounts(ctx context.Context, in *AddPassportUserAccountsRequest, opts ...grpc.CallOption) (*operation.Operation, error)
}

type yandexPassportUserAccountServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewYandexPassportUserAccountServiceClient(cc grpc.ClientConnInterface) YandexPassportUserAccountServiceClient {
	return &yandexPassportUserAccountServiceClient{cc}
}

func (c *yandexPassportUserAccountServiceClient) GetByLogin(ctx context.Context, in *GetUserAccountByLoginRequest, opts ...grpc.CallOption) (*UserAccount, error) {
	out := new(UserAccount)
	err := c.cc.Invoke(ctx, "/yandex.cloud.priv.iam.v1.YandexPassportUserAccountService/GetByLogin", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *yandexPassportUserAccountServiceClient) GetByUid(ctx context.Context, in *GetUserAccountByUidRequest, opts ...grpc.CallOption) (*UserAccount, error) {
	out := new(UserAccount)
	err := c.cc.Invoke(ctx, "/yandex.cloud.priv.iam.v1.YandexPassportUserAccountService/GetByUid", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *yandexPassportUserAccountServiceClient) AddUserAccounts(ctx context.Context, in *AddPassportUserAccountsRequest, opts ...grpc.CallOption) (*operation.Operation, error) {
	out := new(operation.Operation)
	err := c.cc.Invoke(ctx, "/yandex.cloud.priv.iam.v1.YandexPassportUserAccountService/AddUserAccounts", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// YandexPassportUserAccountServiceServer is the server API for YandexPassportUserAccountService service.
type YandexPassportUserAccountServiceServer interface {
	GetByLogin(context.Context, *GetUserAccountByLoginRequest) (*UserAccount, error)
	GetByUid(context.Context, *GetUserAccountByUidRequest) (*UserAccount, error)
	// create subject_id for Yandex.Passport user identifier.
	AddUserAccounts(context.Context, *AddPassportUserAccountsRequest) (*operation.Operation, error)
}

// UnimplementedYandexPassportUserAccountServiceServer can be embedded to have forward compatible implementations.
type UnimplementedYandexPassportUserAccountServiceServer struct {
}

func (*UnimplementedYandexPassportUserAccountServiceServer) GetByLogin(context.Context, *GetUserAccountByLoginRequest) (*UserAccount, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetByLogin not implemented")
}
func (*UnimplementedYandexPassportUserAccountServiceServer) GetByUid(context.Context, *GetUserAccountByUidRequest) (*UserAccount, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetByUid not implemented")
}
func (*UnimplementedYandexPassportUserAccountServiceServer) AddUserAccounts(context.Context, *AddPassportUserAccountsRequest) (*operation.Operation, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddUserAccounts not implemented")
}

func RegisterYandexPassportUserAccountServiceServer(s *grpc.Server, srv YandexPassportUserAccountServiceServer) {
	s.RegisterService(&_YandexPassportUserAccountService_serviceDesc, srv)
}

func _YandexPassportUserAccountService_GetByLogin_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUserAccountByLoginRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(YandexPassportUserAccountServiceServer).GetByLogin(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/yandex.cloud.priv.iam.v1.YandexPassportUserAccountService/GetByLogin",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(YandexPassportUserAccountServiceServer).GetByLogin(ctx, req.(*GetUserAccountByLoginRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _YandexPassportUserAccountService_GetByUid_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUserAccountByUidRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(YandexPassportUserAccountServiceServer).GetByUid(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/yandex.cloud.priv.iam.v1.YandexPassportUserAccountService/GetByUid",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(YandexPassportUserAccountServiceServer).GetByUid(ctx, req.(*GetUserAccountByUidRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _YandexPassportUserAccountService_AddUserAccounts_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddPassportUserAccountsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(YandexPassportUserAccountServiceServer).AddUserAccounts(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/yandex.cloud.priv.iam.v1.YandexPassportUserAccountService/AddUserAccounts",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(YandexPassportUserAccountServiceServer).AddUserAccounts(ctx, req.(*AddPassportUserAccountsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _YandexPassportUserAccountService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "yandex.cloud.priv.iam.v1.YandexPassportUserAccountService",
	HandlerType: (*YandexPassportUserAccountServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetByLogin",
			Handler:    _YandexPassportUserAccountService_GetByLogin_Handler,
		},
		{
			MethodName: "GetByUid",
			Handler:    _YandexPassportUserAccountService_GetByUid_Handler,
		},
		{
			MethodName: "AddUserAccounts",
			Handler:    _YandexPassportUserAccountService_AddUserAccounts_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "yandex/cloud/priv/iam/v1/yandex_passport_user_account_service.proto",
}
